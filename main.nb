(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    378208,       7512]
NotebookOptionsPosition[    372096,       7315]
NotebookOutlinePosition[    372450,       7331]
CellTagsIndexPosition[    372407,       7328]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Theoretical Contribution", "Chapter",
 CellChangeTimes->{{3.653184398074359*^9, 3.653184400663035*^9}, {
  3.6531844799849997`*^9, 3.653184501642844*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["State-Dependent Drift SDE Derivation", "Section"]], \
"Subsubsection",
 CellChangeTimes->{{3.653186197164743*^9, 3.653186215278421*^9}, {
  3.653278296642158*^9, 3.653278298897246*^9}, {3.653307023864266*^9, 
  3.653307025624053*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"u", "^", "2"}]}], " ", "/", " ", "2"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"u", ",", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b", "-", "\[Epsilon]", "-", "x"}], ")"}], "/", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "-", "t"}], "]"}]}], ",", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b", "+", "\[Epsilon]", "-", "x"}], ")"}], "/", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "-", "t"}], "]"}]}]}], "}"}]}], "]"}]}], ")"}], " ", 
    "*", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"u", "^", "2"}]}], " ", "/", " ", "2"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"u", ",", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b", "-", "\[Epsilon]", "-", "x"}], ")"}], "/", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "-", "t"}], "]"}]}], ",", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b", "+", "\[Epsilon]", "-", "x"}], ")"}], "/", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "-", "t"}], "]"}]}]}], "}"}]}], "]"}], ",", " ", 
      "x"}], "]"}]}], ",", " ", 
   RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.653186220337749*^9, 3.653186220958436*^9}, {
  3.653278302201438*^9, 3.653278401126892*^9}, {3.6532784351494493`*^9, 
  3.653278445693119*^9}, {3.6532784904855747`*^9, 3.653278514539514*^9}, {
  3.653278592051675*^9, 3.6532786231703587`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "b"}], "+", "x"}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", "t"}]]], "Output",
 CellChangeTimes->{
  3.653278326858704*^9, 3.6532783686214123`*^9, 3.653278401913287*^9, 
   3.653278447284327*^9, {3.6532785074027567`*^9, 3.65327851490798*^9}, {
   3.653278607465619*^9, 3.653278628722452*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Constant Drift/Diffusion Coefficient", "Section"]], \
"Subsubsection",
 CellChangeTimes->{{3.6531845502912483`*^9, 3.6531845542897*^9}, {
  3.653307015848625*^9, 3.653307020864243*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{"Fourier", " ", "Transform", " ", "of", " ", "FKE"}], "Subsection",
  FontWeight->"Plain"]], "Input",
 CellChangeTimes->{{3.6532510867114687`*^9, 3.6532510941312838`*^9}, {
  3.653251163071567*^9, 3.653251172303334*^9}}],

Cell["Solving the Fourier-transformed PDE as in Risken.", "Text",
 CellChangeTimes->{{3.653251099244425*^9, 3.653251110757641*^9}, {
  3.6532511759830103`*^9, 3.653251184206958*^9}, {3.6532524439882383`*^9, 
  3.653252444402728*^9}, {3.653253912455764*^9, 3.653253928215351*^9}, {
  3.653255095335496*^9, 3.653255099639196*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "[", 
   RowBox[{"k_", ",", "t_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"k", ",", "t"}], "]"}], " ", "/.", " ", 
   RowBox[{"First", "@", 
    RowBox[{"DSolve", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"k", ",", "t"}], "]"}], ",", "t"}], "]"}], " ", 
         "\[Equal]", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"k", "*", 
              RowBox[{"\[Sigma]", "^", "2"}]}], 
             RowBox[{"1", "-", "t"}]]}], "*", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"k", ",", "t"}], "]"}], ",", "k"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"I", "*", "b", "*", "k", "*", 
               RowBox[{"\[Sigma]", "^", "2"}]}], 
              RowBox[{"1", "-", "t"}]], "+", 
             FractionBox[
              RowBox[{
               RowBox[{"k", "^", "2"}], "*", 
               RowBox[{"\[Sigma]", "^", "2"}]}], "2"]}], ")"}], "*", 
           RowBox[{"p", "[", 
            RowBox[{"k", ",", "t"}], "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"k", ",", "0"}], "]"}], "\[Equal]", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], "*", "k", "*", "x"}], "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"p", "[", 
       RowBox[{"k", ",", "t"}], "]"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"k", ",", "t"}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"P", "[", 
   RowBox[{"k", ",", "t"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6532539989038773`*^9, 3.65325403714684*^9}, {
   3.653254087306053*^9, 3.653254120641181*^9}, {3.653254255669496*^9, 
   3.653254258579414*^9}, {3.65325431239118*^9, 3.653254341813157*^9}, {
   3.6532543737894983`*^9, 3.653254475314987*^9}, {3.653254633166965*^9, 
   3.65325463671679*^9}, {3.6532546695835867`*^9, 3.653254680926791*^9}, {
   3.6532548997354*^9, 3.6532549257170763`*^9}, {3.653254963554813*^9, 
   3.653254971865797*^9}, {3.653255023694696*^9, 3.653255033164867*^9}, {
   3.653257151916917*^9, 3.653257163060589*^9}, {3.653308626014226*^9, 
   3.6533087839745913`*^9}, {3.653308814573699*^9, 3.6533088274499493`*^9}, {
   3.6533089668995113`*^9, 3.6533089798629*^9}, {3.653309035568626*^9, 
   3.6533090495565434`*^9}, {3.6533090835857277`*^9, 3.653309085089167*^9}, {
   3.6533091194062634`*^9, 3.6533091255105257`*^9}, 3.653309186562874*^9, {
   3.653309251164467*^9, 3.653309289748972*^9}, {3.653309325339085*^9, 
   3.653309328866596*^9}, {3.653309404032641*^9, 3.6533094056308107`*^9}, {
   3.653310153989645*^9, 3.6533101548133087`*^9}, {3.653310300162902*^9, 
   3.653310350434647*^9}, {3.6533105493384447`*^9, 3.653310550330248*^9}, {
   3.653310706808559*^9, 3.6533107256153603`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(Solve\\)\[NoBreak], so some solutions may not be found; use \
Reduce for complete solution information. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.653310726331935*^9}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{"\[ImaginaryI]", " ", "b", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "k"}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["k", 
           FractionBox["1", 
            SuperscriptBox["\[Sigma]", "2"]]]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}], ")"}]}], ")"}], 
       SuperscriptBox["\[Sigma]", "2"]]}], ")"}]}], "-", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", 
         FractionBox["1", 
          SuperscriptBox["\[Sigma]", "2"]]]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}]}], ")"}], 
     SuperscriptBox["\[Sigma]", "2"]], " ", "x"}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], ")"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["k", 
            FractionBox["1", 
             SuperscriptBox["\[Sigma]", "2"]]]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], ")"}]}], ")"}], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}], " ", 
     SuperscriptBox["\[Sigma]", "2"]}], 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]}]]}]]], "Output",
 CellChangeTimes->{
  3.653308785278327*^9, 3.653308836459763*^9, {3.653309024701778*^9, 
   3.653309056762704*^9}, 3.653309187128831*^9, {3.653309252790318*^9, 
   3.6533092903315277`*^9}, 3.653309330273416*^9, 3.653309412716628*^9, 
   3.653310162779024*^9, {3.653310311061899*^9, 3.6533103533265953`*^9}, 
   3.6533105515960217`*^9, 3.653310782741459*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"k", ",", "t"}], "]"}], " ", "*", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", "*", "k", "*", "y"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "t", "<", "1"}], ",", 
       RowBox[{"b\[Prime]", "\[Element]", "Reals"}], ",", " ", 
       RowBox[{"b", "\[Element]", "Reals"}], ",", 
       RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", "*", "Pi"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.653309522924787*^9, 3.6533095231395893`*^9}, 
   3.653310424042266*^9, {3.6533104561527977`*^9, 3.653310456300259*^9}, {
   3.65331059331853*^9, 3.653310593654339*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(Solve\\)\[NoBreak], so some solutions may not be found; use \
Reduce for complete solution information. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6533108144258213`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6533095347403107`*^9, 3.6533101505441723`*^9, 
  3.6533104961572657`*^9, 3.6533105599734097`*^9, 3.653310600681788*^9, 
  3.653311616622245*^9}]
}, Open  ]],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{3.653309499732853*^9}],

Cell["\<\
Solving the Fourier-transformed PDE for general Brownian bridge.\
\>", "Text",
 CellChangeTimes->{{3.653255103706998*^9, 3.65325512466285*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"p", ",", " ", "k", ",", "t"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"P", "[", 
   RowBox[{"k_", ",", "t_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"k", ",", "t"}], "]"}], " ", "/.", " ", 
   RowBox[{"First", "@", 
    RowBox[{"DSolve", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"k", ",", "t"}], "]"}], ",", "t"}], "]"}], " ", 
         "\[Equal]", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", "t"}], ")"}]}], ")"}]}], "*", "k", "*", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"k", ",", "t"}], "]"}], ",", "k"}], "]"}]}], " ", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"I", "*", "k", "*", "b"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", "t"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"k", "^", "2"}], "*", "\[Sigma]"}]}], ")"}], " ", "*", 
           " ", 
           RowBox[{"p", "[", 
            RowBox[{"k", ",", "t"}], "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"k", ",", "0"}], "]"}], " ", "\[Equal]", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], "*", "k", "*", "b\[Prime]"}], "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"p", "[", 
       RowBox[{"k", ",", "t"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"k", ",", "t"}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.653255126731851*^9, 3.653255259135067*^9}, {
   3.653256662528462*^9, 3.653256664584182*^9}, {3.6532567541634283`*^9, 
   3.653256763081563*^9}, {3.653256803947587*^9, 3.653256824058701*^9}, {
   3.653256874574678*^9, 3.65325696953119*^9}, {3.6532570900661783`*^9, 
   3.65325709015377*^9}, {3.6532571712044353`*^9, 3.653257172533208*^9}, {
   3.653257386660385*^9, 3.653257444836145*^9}, 3.653257537620348*^9, {
   3.653308861957996*^9, 3.653308864701926*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"P", "[", 
   RowBox[{"k", ",", "t"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"k", ",", "t"}], "]"}], " ", "*", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", "*", "k", "*", "b"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", "t", "<", "1"}], ",", 
       RowBox[{"b\[Prime]", "\[Element]", "Reals"}], ",", " ", 
       RowBox[{"b", "\[Element]", "Reals"}], ",", 
       RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", "*", "Pi"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.653257410868497*^9, 3.6532574121703653`*^9}, {
  3.6532574514926453`*^9, 3.653257459627226*^9}, {3.653257741854814*^9, 
  3.653257815782789*^9}, {3.653257851079878*^9, 3.6532578959542837`*^9}, {
  3.653258015441861*^9, 3.653258019761567*^9}, {3.653258054085413*^9, 
  3.653258057869341*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"k", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "b", " ", "t"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "b\[Prime]"}], "+", 
        RowBox[{"k", " ", "t", " ", "\[Sigma]"}]}], ")"}]}]}], 
    ")"}]}]]], "Output",
 CellChangeTimes->{{3.6532578042996387`*^9, 3.653257816360223*^9}, 
   3.653257896649678*^9, 3.653258021159597*^9, 3.6532580587891607`*^9, 
   3.653308867864728*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"b", "-", "b\[Prime]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], ")"}]}], 
    RowBox[{"4", " ", "t", " ", "\[Sigma]"}]]], 
  RowBox[{"2", " ", 
   SqrtBox["\[Pi]"], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}], ")"}]}], " ", "t", " ", 
     "\[Sigma]"}]]}]]], "Output",
 CellChangeTimes->{{3.6532578042996387`*^9, 3.653257816360223*^9}, 
   3.653257896649678*^9, 3.653258021159597*^9, 3.6532580587891607`*^9, 
   3.6533088706072817`*^9}]
}, Open  ]],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"k", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", "b\[Prime]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}], ")"}]}], "+", 
     RowBox[{"t", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "b"}], " ", "i"}], "+", 
        RowBox[{"k", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", "\[Sigma]"}]}], 
       ")"}]}]}], ")"}]}]]], "Input",
 CellChangeTimes->{3.6532575301815977`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Getting the Transition Density", "Subsection"]], \
"Subsubsection",
 CellChangeTimes->{{3.653188416144073*^9, 3.6531884341675262`*^9}}],

Cell[TextData[{
 "Method of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"characteristics", "."}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.653244008724166*^9, 3.6532440157477713`*^9}, {
  3.653244841164624*^9, 3.653244844476281*^9}, {3.653244999710237*^9, 
  3.653245006170581*^9}}],

Cell["Solve for characteristics.", "Text",
 CellChangeTimes->{{3.6532459376314087`*^9, 3.653245943199306*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"X", "[", "t", "]"}], ",", "t"}], "]"}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", "[", "t", "]"}], " ", "*", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "b"}], ")"}]}], ")"}], " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}]}]}], ",", " ", 
   RowBox[{"X", "[", "t", "]"}], ",", " ", 
   RowBox[{"{", "t", "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"c", " ", "/", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0", "-", "1"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "-", "b"}], ")"}]}]}], " ", "\[Equal]", " ", "x"}], ",", 
   " ", "c"}], "]"}]}], "Input",
 CellChangeTimes->{{3.653244017796564*^9, 3.653244033764929*^9}, {
  3.653244845821014*^9, 3.653244918675503*^9}, {3.653244968873439*^9, 
  3.6532449742855453`*^9}, {3.6532450460175323`*^9, 3.653245049016914*^9}, {
  3.6532451020765133`*^9, 3.6532451513375587`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}], ")"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "b"}]], " ", 
     RowBox[{"C", "[", "1", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6532440305744467`*^9, 3.653244062644354*^9}, {
  3.653244899934249*^9, 3.6532449191548557`*^9}, {3.6532449696000023`*^9, 
  3.653244975120199*^9}, {3.653245046545081*^9, 3.6532450496818857`*^9}, {
  3.653245129905517*^9, 3.6532451516478*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"1", "-", "b"}]], " ", "x"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6532440305744467`*^9, 3.653244062644354*^9}, {
  3.653244899934249*^9, 3.6532449191548557`*^9}, {3.6532449696000023`*^9, 
  3.653244975120199*^9}, {3.653245046545081*^9, 3.6532450496818857`*^9}, {
  3.653245129905517*^9, 3.6532451516612473`*^9}}]
}, Open  ]],

Cell["Solve for v(t).", "Text",
 CellChangeTimes->{{3.653245911520061*^9, 3.653245919247752*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"v", "[", "t", "]"}], ",", "t"}], "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"2", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "b"}], ")"}]}], ")"}]}], " ", "*", 
          RowBox[{"x", "^", "2"}]}], ")"}], " ", "/", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"t", "-", "1"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"2", " ", "*", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "b"}], ")"}]}], ")"}]}], ")"}]}], ")"}], "*", 
      RowBox[{"v", "[", "t", "]"}]}]}], " ", "\[Equal]", " ", "0"}], ",", " ", 
   RowBox[{"v", "[", "t", "]"}], ",", " ", 
   RowBox[{"{", "t", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.653245725434616*^9, 3.653245828834358*^9}, {
  3.65324604856936*^9, 3.653246051070088*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"v", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "b"}]}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}], ")"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "b"}]}]], " ", 
        SuperscriptBox["x", "2"]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "b"}]}]]], " ", 
     RowBox[{"C", "[", "1", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.653245811582855*^9, 3.653245830324745*^9}, 
   3.653246054155725*^9}]
}, Open  ]],

Cell["Fourier transform of Brownian bridge transition density.", "Text",
 CellChangeTimes->{{3.6531845624576797`*^9, 3.653184582120655*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", 
   RowBox[{"k_", ",", "t_", ",", "b\[Prime]_", ",", "t\[Prime]_", ","}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "I"}], "*", " ", "k", " ", "*", " ", "b\[Prime]"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k", "^", "2"}], " ", "*", " ", 
       RowBox[{"(", 
        RowBox[{"t", "-", "1"}], ")"}], " ", "*", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"t", "-", "1"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", "*", "b"}]}], ")"}]}], " ", "+", "1"}], ")"}]}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", "b"}], " ", "-", " ", "1"}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.653250271740838*^9, 3.6532503184336*^9}, {
  3.653250354559154*^9, 3.653250403229698*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", 
   RowBox[{"k_", ",", "t_", ",", " ", "b\[Prime]_", ",", " ", "t\[Prime]_"}], 
   "]"}], ":=", " ", 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "I"}], "*", "k", "*", "b\[Prime]", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"t", "-", "t\[Prime]"}], ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "-", "t"}], ")"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"k", "^", "2"}], " ", "*", " ", "t", " ", "*", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6531846076720657`*^9, 3.653184790711136*^9}, {
   3.653184828549548*^9, 3.653184829213031*^9}, 3.653185088843565*^9, {
   3.6531851820687532`*^9, 3.653185182794634*^9}, {3.653186283780892*^9, 
   3.653186344741687*^9}, 3.653227043054471*^9}],

Cell["\<\
Inverse Fourier transform to recover original transition density.\
\>", "Text",
 CellChangeTimes->{{3.653185135802297*^9, 3.653185147033231*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{
   "b_", ",", " ", "t_", ",", " ", "b\[Prime]_", ",", " ", "t\[Prime]_"}], 
   "]"}], " ", ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", "k", "*", "b"}], "]"}], " ", "*", " ", 
       RowBox[{"P", "[", 
        RowBox[{
        "k", ",", " ", "t", ",", " ", "b\[Prime]", ",", " ", "t\[Prime]"}], 
        "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"k", ",", " ", 
        RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", " ", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", "<", "t", "<", "1"}], "}"}]}]}], "]"}], " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"2", " ", "*", " ", "Pi"}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.653185149448412*^9, 3.65318520094005*^9}, {
  3.653185252242444*^9, 3.653185313891179*^9}, {3.653185437556706*^9, 
  3.653185454556951*^9}, {3.653185501191461*^9, 3.653185535407919*^9}, {
  3.6531855698138657`*^9, 3.653185572222516*^9}, {3.6531862788546124`*^9, 
  3.653186281599956*^9}, {3.653186351461233*^9, 3.653186358477014*^9}, {
  3.653186389147236*^9, 3.6531863994358807`*^9}, {3.65322704569598*^9, 
  3.653227046006081*^9}}],

Cell["The transition density!", "Text",
 CellChangeTimes->{{3.65318561338522*^9, 3.653185615297008*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"b", ",", "t", ",", " ", "b\[Prime]", ",", " ", "t\[Prime]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.653185549528446*^9, 3.653185550669757*^9}, {
  3.653186364028686*^9, 3.6531863699252*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "b"}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"b", "-", "b\[Prime]"}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "b"}]}]]}], 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "t"}], ")"}], 
             RowBox[{"2", " ", "b"}]], "+", "t"}], ")"}]}]]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", "b"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"b", "-", "b\[Prime]"}], ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "t"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", "b"}]}]]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "t"}], ")"}], 
              RowBox[{"2", " ", "b"}]], "+", "t"}]]}]], " ", 
         SqrtBox[
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "t"}], ")"}], 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "b"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "t"}], ")"}], 
               RowBox[{"2", " ", "b"}]], "+", "t"}], ")"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "b"}]}]]], " ", 
         RowBox[{"Erf", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SqrtBox[
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", "b"}]}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"b", "-", "b\[Prime]"}], ")"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "t"}], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", "b"}]}]]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "t"}], ")"}], 
                RowBox[{"2", " ", "b"}]], "+", "t"}]]}]]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "b\[Prime]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"Erfi", "[", 
             FractionBox[
              RowBox[{"b", "-", "b\[Prime]"}], 
              RowBox[{"2", " ", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "t"}], ")"}], 
                   RowBox[{"1", "-", 
                    RowBox[{"2", " ", "b"}]}]], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "t"}], ")"}], 
                    RowBox[{"2", " ", "b"}]], "+", "t"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", "b"}]}]]]}]], "]"}]}]}], ")"}]}]}], 
       ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"b", "-", "b\[Prime]"}], ")"}], " ", 
      SqrtBox["\[Pi]"], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], ")"}], 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", "b"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "t"}], ")"}], 
            RowBox[{"2", " ", "b"}]], "+", "t"}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "b"}]}]]]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], ")"}], 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "b"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], ")"}], 
          RowBox[{"2", " ", "b"}]], "+", "t"}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "b"}]}]], "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.6531855694925833`*^9, 3.6531855976406384`*^9}, 
   3.653186428064204*^9, 3.653222897413612*^9, 3.6532252904593897`*^9, 
   3.65322707004919*^9, 3.653250597216243*^9}]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"Getting", " ", "the", " ", "Density"}], "Subsection"]], "Input",
 CellChangeTimes->{{3.653188436046567*^9, 3.653188460998847*^9}}],

Cell["What initial distributions give us tractable densities?", "Text",
 CellChangeTimes->{{3.653186243966744*^9, 3.6531862598453817`*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"DiracPrior", "[", 
    RowBox[{"b_", ",", "t_", ",", "x_", ",", " ", "t\[Prime]_"}], "]"}], " ", 
   ":=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{"b", ",", "t", ",", "b\[Prime]", ",", "t\[Prime]"}], "]"}], 
      " ", "*", " ", 
      RowBox[{"DiracDelta", "[", 
       RowBox[{"b\[Prime]", " ", "-", " ", "x"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"b\[Prime]", ",", " ", 
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", " ", 
     RowBox[{"Assumptions", "\[Rule]", " ", 
      RowBox[{"x", " ", "\[Element]", "Reals"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.653188473682604*^9, 3.653188535663941*^9}, {
   3.653188680451281*^9, 3.653188739952218*^9}, {3.653188786711053*^9, 
   3.653188798006062*^9}, {3.653189288093429*^9, 3.65318929973348*^9}, {
   3.653189505856482*^9, 3.653189511094348*^9}, 3.653189563841654*^9, {
   3.65318968356618*^9, 3.653189762246435*^9}, {3.653222830065803*^9, 
   3.653222862209282*^9}, {3.653222911227448*^9, 3.6532229161924267`*^9}, {
   3.6532266107955427`*^9, 3.6532266125205097`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NormalPrior", " ", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"b", ",", "t", ",", "b\[Prime]", ",", "t\[Prime]"}], "]"}], " ",
      "*", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "b\[Prime]"}], 
      "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"b\[Prime]", ",", " ", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", " ", "<", " ", "t", " ", "<", " ", "1"}], ",", " ", 
       RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.653186263192453*^9, 3.653186268986182*^9}, {
  3.6531864318199244`*^9, 3.653186472666607*^9}, {3.6531865181385937`*^9, 
  3.65318652390592*^9}, {3.653187208469575*^9, 3.653187242949768*^9}, {
  3.6531873894460506`*^9, 3.653187395701963*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["i", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b", " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox["t\[Prime]", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "t"}]]]}], "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox["t", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "t"}]]], " ", "\[Mu]"}]}], ")"}], 
         "2"]}], 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"2", " ", "t\[Prime]"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}]]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", "t"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"2", " ", "t"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}]]], " ", 
         SuperscriptBox["i", "2"], " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}]]}]], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"2", " ", "t"}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"t", "-", "t\[Prime]"}], ")"}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}]]], " ", 
        SuperscriptBox["i", "2"], " ", 
        SuperscriptBox["\[Sigma]", "2"]}]}]]}]], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", "t"}], "+", 
     RowBox[{
      SuperscriptBox["\[Sigma]", "2"], " ", 
      RowBox[{"Re", "[", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"t", "-", "t\[Prime]"}], ")"}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}]]], " ", 
        SuperscriptBox["i", "2"]}], "]"}]}]}], "<", "0"}]}], "]"}]], "Output",\

 CellChangeTimes->{3.6531864757858953`*^9, 3.653186610058894*^9, 
  3.653187370321529*^9, 3.653187525770331*^9}]
}, Open  ]],

Cell["\<\
We aren\[CloseCurlyQuote]t really dealing with a conjugate prior question, I \
think.\
\>", "Text",
 CellChangeTimes->{{3.653188355982328*^9, 3.6531883816117487`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NormalInverseGammaPrior", " ", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"b", ",", "t", ",", "b\[Prime]", ",", "t\[Prime]"}], "]"}], " ",
      "*", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"InverseGammaDistribution", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", ",", "\[Mu]"}], 
        "]"}], ",", "b\[Prime]"}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"b\[Prime]", ",", " ", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", " ", "<", " ", "t", " ", "<", " ", "1"}], ",", " ", 
       RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.653187649926331*^9, 3.653187689140139*^9}}],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"b", "-", 
            RowBox[{"b\[Prime]", " ", 
             SuperscriptBox["\[ExponentialE]", 
              FractionBox[
               RowBox[{"t", "-", "t\[Prime]"}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", "t"}]]]}]}], ")"}], "2"], " ", 
         SuperscriptBox["i", "2"]}], 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", "t"}]]}]], " ", 
     RowBox[{"(", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             FractionBox[
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox["\[Beta]", 
                    RowBox[{"b\[Prime]", "-", "\[Mu]"}]], ")"}], 
                  "\[Gamma]"]}]], " ", "\[Gamma]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox["\[Beta]", 
                  RowBox[{"b\[Prime]", "-", "\[Mu]"}]], ")"}], 
                RowBox[{"1", "+", 
                 RowBox[{"\[Alpha]", " ", "\[Gamma]"}]}]]}], 
              RowBox[{"\[Beta]", " ", 
               RowBox[{"Gamma", "[", "\[Alpha]", "]"}]}]], 
             RowBox[{"b\[Prime]", ">", "\[Mu]"}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], ")"}]}], 
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], ")"}]}], " ", "t"}]]}]], ",", 
   RowBox[{"{", 
    RowBox[{"b\[Prime]", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0", "<", "t", "<", "1"}], ",", 
      RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.6531883132185287`*^9}]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"Visualizing", " ", "The", " ", "Density"}], "Subsection"]], "Input",\

 CellChangeTimes->{{3.65318859614835*^9, 3.6531886007330217`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"DiracPrior", "[", 
    RowBox[{"x", ",", "y", ",", " ", "0", ",", "0"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", "0.00001", ",", " ", "0.99999"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.653225610107745*^9, 3.6532256267863503`*^9}, {
   3.65322663319002*^9, 3.653226636908183*^9}, 3.653226689474963*^9, {
   3.653227134750692*^9, 3.6532271425981913`*^9}, {3.653227356278185*^9, 
   3.6532273589242353`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyVnXV0Vkf3tnEr7m4NLsVpkZwAxd0pUNzdChT34hKkOBQo7hKcIMHdQiBI
cHenyNc3z33NeTN5s771yz9Z61qz5uy5Z8+ePfKck6lF11qto0SKFOlM7EiR
ov77/3Lrfoe+fYu5N3+tBO3iZ7jrHUl/Ver//LqCb7Rw3L9C/Iy+XpHD8Va9
1s/y6/yPv80rhdbzJhxvHlr+cTjeOJQHh+Oev4AS8EMpZyS4Uu6l081T3rHL
d/TUH45X99gTjrfz2B+O7/O018fm1Tz6hOPSMyK+t2xR77ZbKm50fqm2fUSP
OrdKoDN85YFe84LSbiyJzvD2bao3qvGsuTc6w4tkz/18xpGX3ugM31J4wbDe
q5o76Awf3vLk1oMzNjjoDB8yskf5tmNvOugMt3WGd1F5dIY3U/3oDO8ve9AZ
/j6bx350hmdSe9EZXl36oLOtJzrH+jPa42YV9zsnncJNR2Uu7Y3O8EWxV6Xo
OGGjNzrD15f/Oq/ls0QOOsO/BuxcMa9pMwed4cO7XDqUyWeu0RkePdm02L1j
HDY6w4sucfwDd7g6wwP7P3x+7fhDozM8t8qjM/xpUk/96AyvI3vQGX5T9qMz
fJzai87wXtIHnW090blz4g6Z73c+7jzNsGjIxowbjc7wD3+nXtztr6gOOsP7
Txg4odKSCkZneKsOH7MPezrU6AxfnHbb0Mgl1xqd4SMnZdzebNJJo7Opp1iq
jpP8Q4zO8HGbT6a9+u2u0Rn+q8qjM7yT6kdn+ADZg87wqrIfneGN1V50hp+V
Puhs64nODw/dX12k4jnnfM+FT3rXvWt0hjc8uyZN76DsRmd4r825vIv0bGF0
hu+LcfvY1b5TjM7w7x80yrsz1RajM7zprqjRpjtnjM7wqYFfSwx9eMPoDH8e
L0NIh39uG53hY1QeneF1VD86wxPIHnSGr5H96Az/Ve1FZ3hh6YPOtp7oPHfE
7CO/Bwc6WRIeexeYLrKDzvBtCQrn6HiqhNEZnjj579NmO92MzvBSo74b98V3
ptEZvi7x3CEHH24zOsOjx6l8JeMzV2f4mi0nfi5/+brRGT5067doIYG3jM7w
xSqPzvB/YnvqR2f4bNmDzvDcsh+d4ZHVXnSGT5c+6Gzric7VSle9s+tfe1tl
/yv/rqnxjc7wLv4NYry/XtboDJ8R3KDl3SG/GZ3hGX76rsGRBPOMzvAps0L8
Rn3dYXSGP51ducjy4meNzvCxtUoFbPB2dYb/Gqd7vl0lXZ3hw1QeneF3VD86
wwfIHnSGx5D96AwfovaiM7yW9EFnW0909rQjxOmULeG6KT6Jjc7wlN69Br69
VMHoDI/244nOTTv2MTrDW41ocqrJtPlGZ/iwJtkOVVq20+gMv7f8QKx9NV2d
4Umfz/t9RVxXZ3jnOaVrXIrn6gyPp/LoDL+m+tHZtFf2oDO8kuxHZ/izop72
ojP8Y0mPPuhs64nOl5tcnpCp4q1w/gy3/Rlu+zPc9me47c9w25/htj/DbX+G
2/4Mt/0Zbvsz3PZnuO3PcNufbT3ReePujWnK+N4JF5/hdnyG2/EZbsdnuB2f
4XZ8htvxGW7HZ7gdn+F2fIbb8Rlux2e4HZ/hdny29UTncWnHr2gVfM85auUb
8GpWvgHvauUbcH8r34Db+Qa8iZVvwO18A27nG3A734Db+Qbczjfgq6x8A97A
yjfg2a18w9YTnVv1b110lNdD55uVP8PjLg2bP8MnWPkzvJ2VP8OXWvkzfJSV
P8NbW/kz3M6f4U2s/Bne1cqf4SOt/Bley8qf4e2t/Bl+18qfbT3RueQV74PL
/rUrik/Y9SD8tLUehB+11oPwRAfDrgfhvtZ6EB7HWg/Ci1jrQfgFaz0Iz2Ot
B+GvrPUgvJW1HoS/tdaD8L+t9SB8obUetPVE5+Q/pax91O+pM7962P0N+JSA
sPsb8Ohtw+5vwH2t/Q34Q2t/Az7T2t+AD7P2N+D2/ga8q7W/Af/N2t+Ab7b2
N+CNs4fd34DvsfY34EUCwu5v2Hqi88s/X4Y8+vbcYX8JnW2OzjZHZ5ujs83R
2ebobHN0hts62+XR2ebobHN0tjk62xydbY7ONt8dWs9L/719NjRtUmmRM7ud
9/ayX4s6FULruWP4oTit135oscmpFWrPcZervf083LF5LU89hk9RPfs9zzU8
s557KdTO9/4rNy6eX7zLTsd3z9yio2+3crATnrROzCuHfZYZO+EXj+yYde7c
eWMnfFSRLN1G33po7IQPFMdO+F7Vg53wx7U9z73qsdPwlrIT+3fU2RpjSfAh
J8mS992yV5ls7IT/0uf12tXVLhk74e2vvdk+5fhdYye8lTh2wiupHuyBf1oc
9rkJ28XPkCzSGaffpWXL78cMMs+FD0/Vp/31ObfNc+GDxXkuvLPqof79WfYV
a+B7welxccqkQYmDTHl4W3HKp++84NZ5v7vhysPt8h+O9+329tv9cPbDbfvh
tv1w7Ke/zuSs9TV5xUdOOqu/4HZ/wdta/QVvYfUX3O4veHQ91/j/mFzjf/R9
4vxt+794Jtv/xS/Z/i8+0vZ/8QG2/4vvt/1f/IPt/+J9LDtHPIiWumHws3Dx
BG7HE8OteGJz7ITb8QROPPFtcqOxV8UYe4kz1x/vSlm+y51izC/wqgez7tiw
KWkx9Ie3q7SxVLcRQ7zh7MOf2F6jVPFTecy8TPkr45d2v5RykNGB8keK7hjd
ZMkEo4N9bgKn/INVl3bNGH3S6GOXh5vzjrRX5+zq99ToZpdnPsLOT9tzTay3
9LIpTz29VA86h3uuOOV3y070hw9Se6d59PfhucXD6u9j68+8TFw9uPbB43qX
R5txwf780oFF8l3eNMToT/m1YyY+e5Vun9GfeNg4xfMjNZftMPkS5Ydufrqs
QoJbpl+o/8G4hXkP5ws0eRTle8ZdnrXeD09Nv1A+JFmjvQ8H3Dd6wi+LM+9T
z3TZiZ6Uv6Tnoif2l5T96AMPHJD649UxS0274C2Llp4Wq8RN0y722/fsiXcv
yrlLpl2UH5endfX9U+6bdlE+7fvx61aPv2PaBU8pTruoJ6hsr/ix3xwz7aL8
ej2XdjGPtFpRI9Pm7/abeAJvEOlFjm5zFpp2wT882eQ9vWaIaRf725d/KPvn
2uRBpl2Uv9vF5/dTQa79zEfft57UuU+9W8ZO6jmletCB8llVnvrhexOfv5W9
jjvv/Ha7Z705XpedkT2Lrm4/76apH56x5cpnmz+48wj8D5Wnfni3J/eT7O1/
y5TP9lfWHtf9rjlJC/TdsrrCTfNceGJxynda9+TQZK+bThKrPDyROHqWi3+o
zsbOt51cshPO/smgxM3mto/h6kP50bKf+uGj0EHlmd+zSE/qZ9+AfqQeypv+
Uj2U/zom75v5t919J8p3PZ426Z81bxj9KX9S9RNPTD4gf4Ozvp7yud/LuE9n
mnhC+V7yWzjzeEuNU9pFPf7WuKMe/JN2UZ5xR7so/1r+jz6UZzzSXvhGPZc4
iZ2vNE6xn3XushaB3Uef2mTshz+04iH1jLbiBuVvKO5hP+UbKi5hP+WDVB77
DbfiIfX8LJ1ZN8H9FQ8pTz1j1S7iDHyaPY8on9lozSOsT6P+GHYeh3/UPGjm
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
E/46ertIOWe7esIL67noCT8hO9ET/lXtQk9bB/SE35du6Mk+le2fcNs/4bZ/
mvetWf4Jt/0Tbvsn3PZPuO2fcNs/4bZ/wm3/hNv+Cbf9E277J7/HseMn3I6f
cDt+wu34CSd+ohvcjpNwO07CnyneohvcjpNwO07C7TgJt+Mk3I6T5j6nNf/C
c1rzL7y65l90gNvzKdyeT+GprfkUfk7zNTrAz2h+Rwd4bdmDDuZ9cdb8a36f
VT/s/Gveh2blV/DdVn4Fn2XlV3A7vzK/g7byK7iPlV/BP1v5FdzPyq/g9az8
inOc21Y+DN9u5cPwj1Y+DD9r5cNwOx+GX7fyYfg7Kx+GL7LyYfNeNSsfZn3a
uXnY9Rr8+Muw6zJ4t26e9Rftste5tAte0lofwa9rfUS74LVUP+2CD30Zdl1j
7oc0C7t+sc/LaJfNaZfNiWP/+/1a23bZ62Laa5enveHe66X+tTnj1OboY3P0
sTk6tA9qdXlqpPXO4Sw/PPk51yrTv2l1Pj4j1fvRfe+6/du6cKv+f11d6hQt
8H7lrmJu/xaLYP3bXPWfS/qlTOszd4wfjtA+VYbQ98b7mn6ZfT+F1xmvfc71
z4c37y7ujqM83ItOW3TK9LtxzDgalGhg7l+37nbWfro3yrePO46isk60xtEM
1f/5/toKFZfcNvY80XlQUL9iC/cXn2b8J/GMFG8DfTc7SRs0rvu4eWIzLr61
GNioXsVjzl8JAs63yePGMV+dJ/bNMPTPMQPdOOYVbcnJQpGOOJU2Pn495XF7
Y2c7rdfGW3HsH9W/ZMiiKwmi3zLjYqLqH3tj38i837lxLJPqj1v30ah0B7ea
dgXrHsiZpAHTX55MYMZ7l3IvN7zsfMAp8+RotAuDN5p2FejaveIzv7POZido
xPN97jzVn9+rHvjDO+mFRqZdAf4jhv3qe8bZuv3JrqcdRpl23bPeN0678qn+
oHolE42+7s5T/VT/o6N16+35/oKx30fna14xL1f2j/Wzsf/8vnoP+/iecPzr
pC337JIbh+/m9mqdv2Kgkz/+P8VeV3Tzk7y6X9GwgdfWo/vbGfv7DCw6f6HX
Raeez9nIZX9y85O9OretdqHOps/l15j8JM6pSpcSRLrgRIlUOPPiSgdMe2dZ
7/2mvbdlT/t5+aanzOa2N7fs2dH12ebqQ9x5ubfsCcmSq0nfVfuNDrV13jfz
xoUE237/1V2XpW+ScHDwOWd+22cJ6pXLanT481HgkF7BV5z5xfufr13WzXtD
dA/kUd9sW+9OdfPenMUfbb/td9nZ9eurzefXTTU69NQ9k9G7z8ZdPGW90WHX
uC+vavkGOV9+fxhyfIubp1W23suNDtNlz7YviYoXmefmtzdkT5xv/Xzz/td6
IbvsGdLn+q7Mmd38tofs6det+vHg5O58hz0DRxf98LrpFKNbDN2HiZUnTfX6
u908rfrVhLn3d77k1H11YfOTtW6eVnH5mLlbO99wFn/IXi79p7LuuNb9lk/P
x1Ua7Ljrr6sf5l7MWvG6U6Vt5f1nMrrrryy6P9M4ebIu839z1wtdKq6PP8Pr
mrPg2bYbVzodNLp9+fafvxvmPdvoVl725CvZ1Zlbw9VtCvfrVlZIMHSOq9sV
2bMj8t+jok9xdfOSPXXSlSh8uqa7LsCeV9lr5XjWyF0XbNM9gbnluvh1vO+u
CyLPPlA+eqSrTpIHFTul7uSuC74WSN/4y7ebTlpxdON+zjzVg27lg5d92Nz5
pvNEz0U37v9UkZ3oNnl4/umdgkOc9WoXugVFsJ76LHteJZ3zbH4/V7dMsmfZ
4rhLe012dSsne1aqX9Cto+xppX5EN+ypo35Hty26L4GfoNuVXDvze1UMcWbL
r9Dt0pT3D9NXvOM0kx+i2z+6rxhXfotuGYsNHRXod9vpKz9Ht59177GXxgW6
tb8V5/uJXredPhpH6LYhgvVUoOwJmHD42scEbrzCnj/9+t3p0NPVLYPsidPP
EwfQDXumKG6gG/YcVJxBt4m6N/JYcQndNo2d5l/W95YzQ3EM3da/ONPHx/ee
s1hxD934/eZcxUl0+zizYdIP/86vYwb0+Bjp9mijw1itU55a89Ra1X/z9PIu
dVe6OpxX/fePHDsaO4erwwfVn1DzAjqk0+/7mmkeQYfSpe6sX9f5rtNU8w46
tOV3qZqn0GH8w85V2wbfcXJqXkOHMdVXRm8R/MC5r3kQHdbodyXFNW+iw7n3
BRelqvjAWVfhwLPbUdz1VEuta0Zbecho1T8nV+yfGi9w11PUPz/B3Cgn2rp5
CPXvjZyvRd7Le9x5XPffHih/oF2tK5QPHu1135mrfIN2tVg7fOpwr8fOdOUn
tIv74XmSefIZ2rWqXrx8xX0fOZd9NsavnfwX064SvEfaygObqf6cfoOuFI3q
rqdWqp4eRzL2HLxvi7E/le7nDFFeh/3eyzK2X9n5obNQeSD2F4/3a6a/Oz91
ApQ3Yn9T3U8b1d+TZ2L/iC33djcOfuLEWpFmVZ/DMY39ySJYNxVT/fk3fwrq
U8ldN1H/wUxrY4748Yjxt5O/dmuYtOITJ0B5Mu16pXu2x5RX064UMT69O+73
2HmsPJx2JetUZN0hv+fOm9D3EQUUo12cJy4M8OTztKtJ0r2VB3n9y1P/Zx1R
yawXXkSwPkqq+heFvk/gtLF/2a6KDwr7PnPGa92B/cd1r69Qas86hbj3tueX
P4p0m+MU3j3ka+Ov2Uw8HKn1y7KJN08OP1rZ6Bai9Uikdp7fE5nzuF6eeiap
HuLtIt3DH6L3iJp9LfGJ4jz3SO1jCVNn2e407H1zaIm68w0fr/XLsauFoxTc
t8TsHz7TemSa+hE7o7718D3i2HlV9W9S/cSfef/7fb/ONvHJ/mHt99P9txh6
vyt8j3hccfoxntZZ7Fdg5z2tO0rodxw8d5PqiR32/bHOPvFi4uhQWvn/NMUZ
+GCtF+5ovYA9PbSeIo5hTxXVM8+qh7w6RPEcXkD5+Wbl59TTQOXvW+WJ25SH
B2q+oH7qaa/yO6zyxEnaBV+neIsOnEcTPy9Y66kyqof1FP14Wvf2k1v9e1Y8
kaU/cW+k1pvUn0Z8pn4/SD+eUj3lrP49F8FzV+j+/yJrHK0Sn2qNo1OKYxc1
XuCjFD+7yv+xv7ni4VxrHL1V3Bum33kxjs6o/uOqH/uXy57l/mHH0WrxHpad
xKvbijPwZoqHv5x6Vmnz1/zGb1NYcR47Tym+Ber342aeUv3fJnjqJz5v/tSq
QJ1qw0x8Rs/1ukfUUL9zgZ8Rj1QrLOfcf7N+z4Ke3EdapPdF0C7Kj24cJfbS
4yNMefge7ePht/CC2vcj/pv3t6S8sePGPTffiOh+QmG1N+CRp73w37XvNFD7
WtjJ76cexv65Vq6vi4y/cR9gjt4bhv3md/fxoiQ60fyEaW+Fv485SbYedBoo
T4Dn1j6M470+94HWW017qSdr5R93dMp1x/Q7vKveu0h5Y4/2e9GB8ktlD/5Q
W/Z0tOzhPnOCvwLfbjvlZ+qH3whZe+1R01umvdwfKKJ9cuyk/Bi9P5N6KD/R
2m+nfLaTyec0aHXO2Lk9Y74+s4JPmfyQcRRP98M7hf19k5NEvK84z+U+eYpt
rcZk+3d9hv3mnoPOO7Cf8nf0/lL8bZH2T/zbl6mVd0KIKc+9fd77R/m62jeI
UnpLxZUv3XXld9pnmKH1EfXwO52uet8gdrLeia59D/gXrbMmqx4450rFdO6P
DkFar0WWPXDWC2217wTfoHXNHrWX+jmvQTfKw1/rXAkdeG/JjL+fDStSJ8SM
o/e6995a/QX/KN7C4pynDNfvy/DbtAt3e5/1+3f+qvRnxtlP/A2/oPXFavkP
/M3XGSdefXvoJNb+J3y18vkmGhe0l+cWtfyce/v4CTpQHj9HB8qntvyQ38el
l/9jj3lPrM5reC7lR1nji/KzFQd4LuVvavwyvt5JhwqKP2Zewx7FAcYX/Adr
vua5p+x4qPluphUPzfdWrPgPP6H4b+Ke6ulsxT3K2/MC5XMrfpp4KL7Kiofw
T4rztAv+xMqHh+n+ZKS92/77d6DOKPFr+j0v8+yrVudHPP321MmczTO/YD/3
MHdp/kIH+/yFeeqF6gnK6qnHrL+0DrLntYjOcSK638g8clb+RruI2ws17rDf
vNdI45r+4veAYd+num0X+3WtLM7vcHkfOPWb76PpvJ7yxJM9irfYz7h7rfNZ
7MdPmu305CfUT/7QNkbQr2/ruPbY96ipB332y8+ph3mEuAc339+U/XDu88TW
/Q245/khTk3dk4Fzv4LyxEPzXusw7y/dtsu+38u4gA9Re82+jda5S/aeKnO4
l6sD8+ltxTf4QWu+g/e15i94zgj8obP13l3s+aT9sTRVu91pOMKdR4jn90cE
Zm7azo2rxO19374FnDng1kOev7Hyj2MejL9jxjv7J4eV/8NLaJ/kQbNE01L+
M97YOTICPcnPExea2XZA76smzvyk/Q32B+DFxYfrPTyM97G8V8Hi7DO8qB2W
F9N56zPl+fCE4kfF8Z/K5L1rPPskJq/WfkVB2U97Iy1P+D9+//VvHLbGBfX0
Vv58ROe28F/lV6PlV+j2RvZM0L4N/IX2YWLJHsZ1dp2rvla/wDmf9Z4e64/6
z1eb5yZV+eza74Kz77FC/gBfqHre6ZwX3lf7LWleRC857JTLu+o8NLv2A+Hk
1bvlh/AYLT3nswt0PgvPrPw/47ciXauUcfkFnVfO1D4qfJvy4Zvyf3hhnZOO
D7lebupDN84c0Hlrq0wfZ3xJ4Y6XdtoHmKzycPKotlZ5H+1bLpb9ph+VP2A/
PLX2A79ITzjr8YzSk3HH/uEgqx+Z745afsV6Fr+CMw9esvycfcWS8ivsea36
uW8AZz1OPGT8nmD/UO8XonxE9//nab1wXecC8AQ6F06h+Mb4emLdf4b7W9/j
oJ4HOi9OkazinSyF3fo5Fx6bOl3QT7Xd+hdY94fhPazvccBrWvdj4V7/8z3q
23ZF1vzFuSS8YwTz/hXrO7bwslY+gM4TtU5JpfbCOR8Zr/aiQ0T3Z5gHX2hf
Ap5D90YGaZ8HXlB8rMWvat+ymPYtiUtrNU5XWeuOoxqPST4fHvQ1117j//hD
yYExah16v8/kG/T7+rDvh3SYf3eKkw9wfvS3xTOIL7I467Vlei8fdqLnVd0r
gDMvj8l4O0mf/C6nnsi6b08/brK+nwtPZ+VvcN5LeVfvtYCPt74PC2f9aOcn
5j2Wem8GOqdXfEsu/SnfWnkj92rg7H+O1DqLfn+t/cCJ8gfKeysfC9T+Npx9
y47W+oX3DJSOX6LutSzuOoX8c3jPwVlG/fy34czvAZrf4eQDma24ZN4nPP2f
WSmjufFtouY1Ow5T/rm9DhIP0jqI8syPe7X/CWc+7aV4znPZ57mtdSicfbDM
mkeoh32YAg38Z3Rf5W/sgfe29n/Iw/3lz9TPvkrzvC8edlxzw/C8ujdyrcqF
hFF2u/k263T2i/Bz1r/JrP0x855JtcvsH6rf30hPM3+Jf5zm6RfyN+JSZ/U7
9YT77qc4frL9dKaPX7IUMOVbKB97Waxeh1N5hxg/Ic9MXjPsuZU9f6FPDuVR
nBvCD3F+ZOXV5F07lafRLvqd/Q34LN1P89W5AHyS+CRxnttPeRfnsHD2Vw8o
78IenpvS2seAe2kfg3rwK/Zn4DeUj3Gubc79FefvW/nYWJ2Dz7LyN867b1nl
ORe280P2Z9Jb+WFLnUdntfJPzqN3Sgf6Hf/MLv3hnNfMks74D/lbJY1fOOfI
GZt7+tfkXSr/1sqfOR+x82fWWXZ+zrpsufwKfyDvivIw7HqH845r1jqIdZZX
rbDrJtZlDeqE9X/G3XSNI/wEHqmmZz+H8uSlTYp7xhf6sE/yTPsPPJf84TfN
F/Ac1nun4eQVPyivgHNOWkic+WWL4jP7YyZvlJ+PtuYv/HzQutXD9l9yzwfZ
h2mqOEm7iIdZFYexB95b9cD/0L2LApb9I8WLWpz5tL+lA+duXaxzN8bLk7Fd
03xIvMOU5/fsu2qGXXezbxNZ702iHtZHb7RvDGc9dST5s3fLdrp5Au9d2af3
dFE/7XLULjg6lLA4+zZRw7wfbNsu3mOWVe8Hwx72r85ovxT/XKr4f7BimPfR
OcGc02l/knqYL2w/h9t+zvr9gM4Nzb1TzS/e8n/uXRzUvLB+b5YJ86PFcu+/
KU/okW3Su+HbShlOXnFoYZNShwt+b/gaxdU4veYvLdO+t+Hkz+1m5/j724jB
huPPu+LESVOuWn+j827dS1yu+3vEbfYnh2zs45ujqJsPhOg+5NtVPWpdqOee
12zl/WC6P0l59jMHWfVU0P3Az2erXD3X9r/uYeoc5zud41CecdfSyk8y675c
+u3fne31yt33G05css5h2aeyz23xn/x6PyH9zrlqiMVrwXd5OPdzamiendZj
f4dnuRoYznxad2LAHxcTtTB27rDub8Djq7/s853E4m0sTlwdqP1n7EygcR2o
/U/8gX2JmBeiLl07spXrV5ofZ8p+6nmnODbIyic/idvnjOwzL5U91M88O0I6
oA/zYFb5P5w8cJ38n/bCZ1j3HFhfzFN7ic/MU3YeyP5GYo1T/Ir3GVbXuoPy
n/U7glNWXCV+vq8VNl7xPsNsYd5nuG0X70kLCPM+w227zPeqwrzPcNsu3mfI
uo/nch/bPt+8o3vgnIcyf5HnM3/Bub+9X/dU4ft0Dzylxhd8ju6fb9L9c3gO
rRcua72APdx//ktxBj5D967nK25QD/FngOIGnPvSz3QPGd5T964/KJ7Aq+q+
dy7d94YHK469VByj32Oqfu45w7nX/UX1m/lUcW+e7Id76V407eW5xMN+Vru4
z2zb6at70S9kJ/yb7mPbOnDv+r3sxP6rqp9773DuXb+x6ueesN2/nXTfmP6l
Hj+V5/cI8A4qf13lGdfsM3hpnoKTL83UPMW4Nt/RsOIe+x6LrP0Z9m93Kz+h
X8zvBDVOzbkA62XlaczjnN81H3Vulk9v93edcD/tF1Ge/czCgTNyZm21z3DO
F7qFvqcxm8lD+F3PZsv+Ryr/Nr6nPJz8LYVzcF6LCn28iauxtT/WLPXxYX0y
jzTxdoD2OS8VWpnpx1/GGI79J/KUOL/Dz30vSqQPCf9rnTunGM9FH/Jb2sW+
Mfc5zX619plnyX4491ofWfY/0LnGlvjfHR79cVhJ+HjlV5O7fBj155Gzpjzz
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
us5H4AdkJ+2Cp1L9R7S+g8/N0CZ3jIJD5eeRzH2YYJ2DL1V8Rrc0+TzxB51N
PNc9jeUqT7sWatxd1j4J+c9U7ZP4yf/h3dSPFbRPAt+0N3uqGptCnBIW3yJ+
S/GZ/Ceazh+JD/hhUvkn+WpU6/d965Vnwr/J35pY+Tb5Ev5JefyT5+K33Mvl
uXD7uXCeSzxH/8aKA/g/vK7iBufd+E80/d6BeYR5ee2q4cnund1hzqMp/5N+
j/BM57/Un7JMwfTnWtYy54Bm/X64wsBPK7ycQuL0+7gjReqc/DTTeaJ64Bu3
d4hTed1ift9n7Kmt36lx3mfs/CX+kMudB5h9CbhTI9nn1H1mmXU3+qfp+TD4
u8eXnPeKM/Dz66v0nr35qhNfcR5erEWWxXvGXTb10L8fWsT94HvL3S+lX6if
+wbolkW/73ir+Mm4mNW79f7TI5Z611J70aG07odQHj78bp5CVUs0Mpz6ZykO
d7D6y0v9RXnG9SjVE8tzvm94mZR5T/y5urspj56XA0oWLdNxiBNX5c2+a99D
qVZem+zsGPOi/Pa0G8OdV8718HDnMsfE7fLjVY9dPqL6I6onoudGVH9C5RV2
Pc8957PmflFxnc/qfov5ndRLnfMW8pwLG/5O58J/6rwM3kbnerpvY37H5Kvz
5Rie82jDY2XwnEd71sVfjV/lel0tw7eSwzjXNr/TKa1z7SDPObjh7XQOPkPz
l+lfnZv396x3DE+tc3bPeaX7u5VGug/giRtRDe+m+wPpNF/AA3TfQOd3Jj4n
1f2E6Ipj8B66z/BG+SQ8r+5LeHR7Z/hY3a9Y7bmPYXgz3cfQvQ7zO45jutfR
33MPxPA1ugfyzHNvxPC0ujdywBNnTPyfqnsmzGvwVrqXslbrFPg/AZ77MJ77
Tm8N76X7M7E1vszvO3TfxtdzP8fc54mv+znvtH4k/rA/gN+S58S/6LlPVU77
DPCROtfAn1m31tV9rYLyZ3O+MMdzvyu78nN4A53LzJOfw9OFOR+PYe5dRzng
uVcWTX4Of6J7aC3lz2b/R/fWAuXP8CW65+Yrf4bHTzhiXLx/ajuF5bfkLTlL
eu7jLZffwsue8NzfWy//gcfXvcF+8hP7vusT+Yl93zWe+hE+W/czp6kf4Xt1
nzOdxgVx5ojOtWfIz+GpdG7eT+OUeLJV9wOLeeZZE2fy6V5BH5VHn3MqX0Ll
4clVfqaeiw7J9dx98n/i5Fzt/9/SPSUzHpW/vZGfm/063UdN41kXm3qKa/+t
nrUf+Enra+6JmXw17Pu73Hiu/UDuacATa73Mupj4llPvh9R9DDd/0P0l3Wcw
fp6oZOL+Px5eLH3uufdgVf9d2YP+6WQn5+OUz631V1rpQPnD2h/oYO0zvJUO
KVWedtWUbq+kM/XPl87r5M/4z9y7q1NOP1fDya59CeKJo/t1/upf6k/+3NO/
3KfFH06oHv1O35QvpXall53UX171N7HuWz7Ufch6Vh6eXHk4/U493A9EN+Je
JdX/ncad2Zd4FX/IrdWPzHvj4Set7+2a/Y3ou7rG/q/vKcMTxYjv/OjcM+//
MecgWg9estaJK5d5OL+7N/eZO/r+/WX5efP9LHi8FGucGB3redv3me3v7cI7
hEw812FOHfNeC3gBnS/wHgZ4tJ8W/Fw2aLmxE+6r8tgJT3Lr9aOkuyua75TB
V9Qq+Mu8pFHMd8rgpbbk/yHkp2VGN/y5nvLYK9Z6NlPY9awZLxXEeS48SmCM
Q3MPFTLPhTd7smJslMJvjJ6Ml8yra/XsnqOGKQ8vN7r4rDghKYw+jHe+J0s9
8EPeZe42GtTM1APP3X9eui598pryxL041ndO4SWG/Jzo2vji5jtB+PmLd0OT
foxeznw30PDjP3uXr+9+5xT+rmi5giequd85hQcMvlEi/1L3e53wnHEHe838
66B5bwm8Q7FPXv3/67u38MIqT7/AT6h+/AT+Vfagg21/OuseclLdQ4ZT/p6l
A+N6UdCUXX8Eu98thWd5vXJ0uZLud0vh3tW8UjfP4+oA71nj/LALbVwd4EUD
Hy3oOsrVAb72/oDep5q7OsDHjm/4oE4RVwf4hn2Z/hjZxP1+K7xwYNRor+N2
N+2Fz/nlQqem/u53WsnHvrO+NwqvPHbvXw8Lu98bhY979LVE+vnr3PdNieea
v2GY954A8540uP39UPjpug9jd1jkfj8UfmmOj3+PuO73Q+Hr+yVeHjOyO07h
NXJ3XTDkXkfTXvi2DUeC3hYqadrFfPqH7g9fsc5TWupcoLl1HziB9X1P+Naj
Aek/1V5t7IS/8pm4+Pe7442d8G6PU2WoNKilsRM+91PlPMEp85vy5KV152Tq
HmVdXVMeXi/T8KnHJ6U15c3+/0nf5T2bO6a8+T1d31+iVL7wwcQr+z4w5eGr
mwTnzPLvepO4QbzdaHHiYWfVj1/Bz8keyhMPh8p+ysM7qL30F7xBltqn21Qa
YeohHq6UbtQD7yudqQf+TP1Cv8PXqB/pd3hx5Wk8l7i6X37Fc+H4Ic+Fr5Df
8lz4Gfk54wh+QOMi0MpvZ1jjCF5E4w7/hM/SOMU/4TU1rmmX+X29FR/gxBPa
BV+p+EO74MMUr2gXfJHiG/EQTjw037sUf3A32YMWvm574YMVV2kvvJziMO2F
51Lcxv+NPYrz6EDcKGPNm4zTrJp/0Qe+R/M15RmnZTTvU968j1p5AuXNvWvl
FZSHf77oyUPQH9511u2yAc06mHrM7y6VF1EPfI/yKOoxv7tU3oX+8NHW+1rh
6ZTXmfc0cq9M+SHPJT+PnNKTZ/JceOk21arWOH3TvHcLnst6Hym8tfJh8x1b
8SvKn3m/k72fdt5aH32v9RHthf9Sr9PkA1vd91eb3x1Y79eF29+hI25M3zj1
52Bv15/hc8Qpb37PYpWHz7E4/hPwpG/ugwfd9/TiDzVkv3mvqXQ4q/Up9cCr
Lt52NE3e3Sb+w1tpnUL9xH/e34sO8Fidruxvvd19LzR68j0R855Pzlt1fkR/
we3v9KHb4iwlk2Tr6H7/As69Mjjx7YPup2E/43qy9Z0+8z4HlYej/1jVT7vg
f8ke4p65/6l1BHEP/p3uo1I/PIvOYdGHcTTbWk+Z745pXNAueB71o/meC/tI
6pd01r3Hbbr3yLijvxJbdtrvacFO6vmk9aZ576L854D8jXrItzvpng92wuvp
O1lw8tWXWndTj71/Dqf8fNmJPtiTydIH/TNZ72M390ut78jA7XEEb6D6qQf/
TKl7WZRnvIzQOKJ/zXmN9d5Cxvu7zzfWTZ/p737vQPXQv5SHp1Z8Nt8lUf35
re8vYGdv5b3m/aIaRycn97zw6Ir7HlH85FKNLW+XjnDjDPXzvn3ai84hKm++
2yj/TCg70Q1OPKE8/Ri9eNjvIJjfZ1nxmXF93LKf+ntZ8xr1Z7DmHerfrPd8
0l7qz7kl6/ezo7lxAH/w0/4M3Nz7Vdyrap2bv9O5Of1Cv/9mva+Y8pUVZ6if
dpWw4gb9VUK/i2G8wLMp/qAP/U6cRE94NrUXTnyw3+/KuK5pjWvKv7TKM36p
p6p1Dtte57D0O/W/jt4uUs7Z7vxIPeSNVa3zzd7W+zPReWL3d0dflunv/D9P
6dBH
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnAccV9P7x7/3fu/8ITMrq4yG2SRRNJQUGYkkK0VRGihllFUaZCar7OxS
SZmhJKOMZI+MzMqIEP/P2+d4/V+v732d557vueeee+45z/g8z3NrnzrgqP5x
pVK5KKtUqip7q9xUZa28UjkpqVQuE/2i/jhF9BWiF4g+WfTlol8S3Uv0VaIX
iR6dVioTo0plJ5Xn6egq+if9/5n6vE1tTlefZ+h8oug31P583bib2tyi82Gi
h+o4Xud91eY61S1VmzNFXyt6ieizRN8g+i3R/URfL/pN0Qeq/6W69gCVPVV/
qepfUP2nOr9VdC/d91DRX6lNB5XD1eZZ1f+gNnsXuofu+Z7aXKMxnyF6pcqG
qu8lurvK79TuKbWfqPrHVXe2jkU6/yTz2E/TtS/pv/6qL1T21NEvcv+prq8l
epLazFW5nY4VuuZVjeU20YdFvj/tn1H9H+rzMZWf6ros9ThnarzvZJ63Hupn
X9FTdP2f+n+R6FGqP1L1l6vd86JX6b7X6vw50aXKGmpXQ/3P0//HMz7R60Uf
oz6a6vhb7TZS/Uaqn6v6Q3X0U91D9KP6c1T/P5XX8AyqT1R+ruMN0VupfF3/
1VSb+awRHfNVv1rXXq3/nhRdVXki70fH/9TuRLUfpHJDlceq/QVqM1ftjxM9
QvRToruJHi56nujFuu4VHefovJPq+6t8VPWDdP0E9bO9yiNVP0T1s1TfRfRg
5k10R9FniX5Y9GGizxb9iOgTE8/bfNFHiT5X9GzRx4u+UPTToo8WfZ7oJ0RH
usc80c+pbKE5v4t5Y52r7KwxXKz/jlH781XOUfsh+u9q1e+g8i+VyyKvre/1
39O8R9WnOu8TeW29pfJkHY+I/kv9PMQ8qE131Z0Sed5fSN3mC/XxuY6HVTdB
dRXVnRT5fFuNZ4noHqyzqvvrrjb/JH4X61R+r2O86O9U/qZ2U3R0Ya3r/GrW
pq57Q/3cobojdPylusNVTmC/RV4/d4g+LvL+fUD0r7p2mspf2K+R9/GDOv9d
5dTI/e6mNX2v6B1ZF7Hpz1W/hc5fVXms/n9N975G9Lka8+465oh+TH3+qbZ3
6rhd58ur4f76/0nmXseH3CvxWGqzrtT/CZHn8VvVX6TyGV33R+JxPaRyC7Vb
zvOqjNT+I7W/UMepkeedOd9M/73E/mCP537XJ8DHCs9bpHK2yuHwELX7Qv+9
qHKFyn9U94GO83XM0nGejtf139W6V53Y++o69f8h717lBjpe0f8vqyxy7/3P
Co9hWOQ+N9V5b9G/aw2eIPpk9XOIyjI1T3pSz9VD5zupvrHKJanv/63KK/Xf
2/AYzcPyyHswU58r1e40/X9fWam8q+veU/25OpoEHr5Ybd6teu6vUt3piWnq
7o79fmP18Z7Op7C/9P/6iq/lXf6YeO3sqGvXJJYFq1SuC2vjaB15bv43UeWY
2PziNNX/wjvX0UnHO6q7INSvTszbp6msFu5jg8I87ajI93hO4xmpcn/NVar6
T8NaYW54X5vCewuPsW/htXp12AsLNI4f2DOak64qx6jNQvXXNDM/aqjy6dT8
826V6wuvsZcz771K2I87M+bI729Rah54v8qNOVT3dOI1MiQyj75M50t03W/I
U/i+6D+r5g/su0jH35HfEe/v18g8kPn5IDUvZ21fnlo2IaNu0LNsIroPMlD0
m/AJlW2Q9RrPRWp7rcZ/qOpvVN33oieL/lh078Jz2Ic1on5vFv2OxnNZ7j3I
2jhb9fdxL9X3F30/8kv0+6n5wG+qa5mZV8AfkNW0+VZ1p+p8kui31T5PLR9Y
w2N0LIMXqn5LtdtE9c8mlslp4Jmp2ueR5eOmavOo+t1I5cU6X6D/f9K1FyXe
v2uq5sHsnUzH87q2OTyIMcaWway/XfS+2yMD9VybqdxbdcMZm/pdLfpWZIjm
Yh/R5yEH1O4t1b2o645mPaif9+GvsXUF9uRHqXn436q/J/B0+HAttXkUPqx+
PlPdPTq20PGG2gxlfbJG1P9CtVmre47XNZ8if1WO0/EJslXl++zZ2Gv7NV3T
UvQ0laemXuebs7d1lKLnqP0vmXn1J+pzaGIe+62ecY/Ea2A8upnoJ0R/g+zL
TZ+v9lvo2kL9zEY26pit+pVqs6fojsgj0X11r7Zq85XqLmGdqf4a1prOtxc9
UG0ynT+gcaYqm0Se252Rwbp2L3Qj+KLa/6S621RuomM70QN07SuR53kNa5Tn
UXk749U1jVW/nHUq+kfVTxI9UPfYXfQeGss2ielh6meo6vcX3Uj126p+D9EX
8Oyqby66oeo7aiy7q89dKl4XZ6h8QG06iO4r+kFkvei7eM+izxV9N+MSvbn6
manrN1M5NjVf+FP/f6G6J3Tco+MxHXeq/Q9q83fsfn4UfXke5KroIZr3GewF
0Ven3gMVlUnqdVtVeaiO2vBq1p6unaFyptbkhSofV/OvNZ4Rifv5CvmeWw6u
zSxDWDPssevVz1e8L55P/9ViT6jtCI3hKNF3qG6+zr/W/9PVf3+176DrvtH5
CrXpqjZ3Mq/omuwX3etXdGnRTzCvqj9O9C2qP0fXjte126m8WG1OUf1Mtamr
NgeLHq02c3SvT3T+qO5VO/H7GqX6UwvTV6p9HdW3EH2p6vfC1tCz/K4+L9K1
d7O+de0Fou8SPVb0holtnFPY14ntnlNZk6KxhU6uWj+5VMe2Gt9BKreO/p3y
yjyVN0bW4T9V/U06Vonul3l97qr7bKi6umqzG/OCLNGxh456Olai76BP6F6b
qTxN9/pBHX+N7IOPqE0DrkO+6vwHlTepfExtGnA/eKTON1J9f9ZYYl40oup7
3Y+sZw2pvBVdRvSLaqNfpVfV998m8hg+1xy+xDNrTm7SuGtWrJvxjNgpOfIg
97PvoDKPPT7smekax64q+7Ef1ceWansI61HnW4t+FH4T+9m319FX9duEZ+ms
+/bRf51UPqx2O+v/V1X/pc4P0vndGs/8yOu5RAdKbTu1Uvma2tVQ3TnYZOqj
n449w3Mzx3drnLfnnvu6Kqfk5isNkFc6dqi4/jxdX1f0LPV5uO7bjj2gsgay
nf7UBsN4H94jfAfbUUcjnl/v+mzRy7CZYvMjxnBu1W3hV8t07Cr6cPSyyH3y
/F8he9BBdGytfu5TuRc6lfrJdGwFD9fRDP0LXqOyZWQeukJ9tmZ/YWdF5nX1
dN408f66B1tGz/AuOqsmbpWe4RC1eUHlz/p/3/AsH6h9Y5WPs+90TTPRc9kv
6DcV75OvCt93pMZ4TWEe/aD6KQrz3odEf5R4jEfp2odVd4uO9jouQn+A16nN
jzra8czMvfp6SPQ+qUvatNHxR+7yWZVjNYZD1Od96nt46vn+XOXRmpvWotvB
K9XuYHQAlfXV7hjWqa7bXv0/qPq9WXuF7eu/1WZU4bH9JfoD0dfpmkLzM0Xt
j654bBNFt624z1GZ52G46Cax9xHP8ELYw+wd5FX9yGvriMIy4rjC+jT2Hfr1
8tw29fKwLlkPrNN7cu9R6Ls0js4az8vI4tzvfpPC/O1m5CA2k9qcpGfaTPQv
uTGWXXgPhXkC6/IhtRkcdAr0iSkV042CLYBN8C68KbLt8VNuXff38J54F7UK
y+s/4HO5dcKV6Pcq38mtd6OXgwOgS7ytcpmO09mrsTEHdNoPct8L2/bdyDgA
OkOifj4SPSCybdKPZ9N1E1R+mBs/wZbBlpgaxoaeiS3xqsr7dHwvevfY+AM6
0trcsjJm3+SWleiBdxSWcehav6r8VHOzn67dlrWqudo4cT/7FtY3DlLZTceF
oseonKDywNj22GS1r6nrvsxtp6Cr76j/bigtj/cpbK9h370fGcPpq7Kr6q8v
bZe+Dr5U2sZ+RfVvJl472+j6O3PrF7sz9/qvrq7fUW2fVHm66l9S3cTSdtdr
hfdky7BOrir9bE/q2pGi+3Av1Y8SPSixvfCg6BG6T33VL8ptS7N+6hS2H3Zm
jej4ifeospmO+rrvnnrGB3TtsNR8EZ4Iv4FOgy2PTV+X51ddPZWXqv10+JPa
XiT6HtEXi35E9C2p+xwheqrqz8/NU+AtFxTm1eyvl3QMV5utkPuq/0vHnnrm
V+iDNc27Qc6p/QEqn1D5W24ZtJPKD+E/uvZ/al8ntc2NnTWm6j1+pup2S81T
j4UHxrbTrmetoDMig1VeghznPet8tfodqLrWyMPUesILiff95ZHf32Gpad7p
RbH1gMvYX/pvXGQ+VTe1HtUvdd+j4LE6ZmWW1TsUxmTYm5fofKnul4gerXL/
YPtWdbyZ2w66Cl0v8l7j/K3c9s04lcMS20ngl9jR2Ik8w46Fedp69m5h+/qf
3PY5djp2LxgK+ie229axbXX4DtgQWM6V6CGFMaJKWAPI+ZvVz1ap7ZQtU9s1
l8ATKt5DS1WuUx+9E9uPYDkDE+NU4FVgq9hN8JcLEvNSMDPkzjTV5YX5JXPz
bNX7ABm5tmK84rHIOAByGf4Kz51e9XMP1P9/wqs114tKX08/g9GtUmN4TfTf
DLBF0c1E10utl+6SWSZPC3K5Vbhvm6DXIn9fLCyHeM/ox+dqDGMjy5iRVfMf
dNnzq95fy4POvFJlt9J896rI62MIfCjyer2qarn3pdp9zD7BHlL7xonXzF36
v17i+9wATh7ZLn4u/EebAXqOmsgX3ov6+Fz9j45s53AN156deu9iF4CT7Yc9
Epm3PpgYbwF3eVz9/B7kI/L2Zh2/6Xy2ztepvJC1lHjMjH2nxDId2d4gsY1w
U9Xz1yq8u4GFZerVKq9Vm81FL0BPqVpXaoKerP92EX1rbv0QvRFbpa3G2Sa2
Dj01t46Lvjcp9l5eB7aUex+OzM2TWgd9anrusQ9TeaTe41pd0yWzLnaprt0y
sp61f2Ted4nGsW/FdsXhatMisv7UOeiG2KLwrX1D2+9y8xRsyRlBD9uvMP9r
HHSxs4IOiz17i87rqFyicjG6TGQbGD2Ua9HfHstddyT6c+7r2BcD1U/zyLrL
17ltCGQK+ie6OvZw+8LyFzl8n9q3CnZfx6qxz8OqxjNHRMbHross08H6V8SW
18jyrQrjip/lxpvBZsG8wIePjSx3kEXoIeCCDyfG5MD/mgVsFqzqnMQ4GXg2
8go8BHx7emRMmz6Ry+CRn7LuCusJ6Avwif6BV6CPM1f3qn4h8lnHdzxv7DXz
Q9AbmEf0iBsT2zuLVN6fGA8HF385N96Nrwq9DcwePe7SxHtnbdV6AXMIVjU8
8GT0I/gN7xH9Dh3rX/1H9EyVgyPrXu/nxvnAOXvG1p3QoR7IvWZmqjwcvEv/
Xaj92Drz/kDnPyY170Hv5j6vhDWDbbEovF9kJ3oFshR7CPsLuYhuST+P5G5z
g/ooxUOGhLXEmuqSml9iuxyQGosaCp6kQ8Oo9NazX594Xb2R2E7FHmQeawWa
/5qGsdHX2MS8/x9de2bscWIHdUo9LmzHt1PLz211k631fr+LbAuw5zaOve+u
iK13QKOP8D6xj5GvyFnsve3D8/6nW28U9lWfIOuR+d9GXh+sjZcj22ejS9PU
sX6gvw3nbyeex87I9iDTN654f7BPwPxXRLZPwQSuiY31o3PsCp+NzG/ZK+C8
vHtwOXwNp6TW69Exwf6Rk8hL5v2pyP3SZ6eq23eu+rmw8xkTWA82MvZje/33
BXOucmFi3AJ7GWyQMeCfa6v/dlDZDvmb2rbukHrOvgnz1kvnH0f2B9QsvOaR
G6enxs+fT8x34b9cf3DqsWK3gxnMC2O+MdB5xRjk7MBPaodr4du9Y9tU2FNN
q7aLm6ncqDCWcHtpTJQ5YQ3BY+A1+B6eZv/Ffp5uavtGZF2udep79qkaE6NP
npHr8I1xLc8LNsH6w3+UBux0aFjzPCP4Ojj7f/Yb9KDwDvHrMC/gyfj20FHQ
g9ZG9pfh16Ttvqn1OPQ5fAro3vgp8FdgF60PPAFdDLwGG3PbwnJ4Qmn9HP1k
TW5/Iv2jq2wecF18RsvDGOBTU8K9uAb76Y/I9/vXr1GxzYff8mcwR2xGHb/E
xtoer9pn+kdq/GwVdq+O67AnWfdcH64dKfr5qv2n69V+terWxNaZpgT6jtj3
5bn/s+fWhXF0CM+LXjIx1DNOsBzWIPxzkOjBsfUGYgl4FnyCQ8I7YP6xWX+I
jB08l/8/lnBFat8HPhD6Rn/lvuN0vk1sH9Yxkel/Ko492DK2fjNG/20VW7/d
S+OuGTt+4JrI9UdGxiXgS2DO9YLtg90xMmA4UcU4DjT6A3wR7Kxm2Be0Z49g
kzVSuVRl88K+mN3RT9XvsaqfhJ9F/40TvbhqPOPnyDED6Ozo9Oi1EwKNDwjd
fk1kO2K7wnrfraV95Vw7MGCutOkY2e6jD+yb81PzM/jSSB1j4c9g+2qzeew4
h7NSzzn2C36iUSpbqP8T8LWovofKnjqqar9H1T6fLWK/jz3UfjPR+xe2k4lH
GFTap41/C50BXa6ejv+p/bXB/vpMdJPCcqOOxnBDav4BVo18BwMBc8Smr1sx
trdpbt/LT4Vtzj1i27VbJtbXwL3m6H67xR43tinyE7/BtNB+24ptP8aAjYaO
B1bAPX5Af0afiB0rskNsW+wBXf9uxb4qYkJ6xPa54G86Lnb8ADIfGrtubGz/
E76ndZn1H2JR2hUeP8+B3797bEwf/IU4hBSdNrV/m3iBFrHv9bLOn0isE+Hz
oT16CvrJgtTXEsuAL/Kk2L7mgZHpDVQ+q/Nuse1N9C+eC/1sxzBG8I8xwSZd
GmzS5mFMlJxjn54Qe0zEftAn//2m55ua2T4CkxwT2nNtE435NJV3o1/Htj2w
O9C18JkiI9vp2oaix1Xtd0WPRIdEl4RmLtBp8WXg16cP+iLuoX1m3GBq6rZN
Q/sVYZzMG7bOfqE9uBn33Cz3sxMXM1Br9Utdv33suAvwte1iv7NPU9NfVo23
7RKbR4MpgC3g/50Ym36rYt8/OiL8/9vYY+ug+h8DHgUuxdo+I7b+Ci9sGPjh
N6nxNuKR+oR+sPNrh3eIPnlY4T0xrLDOhe6FDbAN2FRsnsN9WNPYLOflLmep
PLiwrbqP6MHBvsDOQKdDp0KvGxCuZS8ge5CF4A6PqO6I2PYtunan2HYL2C0Y
LvYhc4+fHnsAX/0x4T3O05iOjI1Fg2USB8V84hOkH7D63uFeyNx3g/xEx4Ym
puZmeJHKtyPHvaAzLIUhR7ZLsE/AHXoGGp7TM/AfMAh8dEtCe2KluJY4k7EB
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

          "]], Polygon3DBox[CompressedData["
1:eJwtnAn8VsMXxu/73mXmDQmJrJUt2bNmjSyVUJFKFCFbRJai7C22ZE8plSUi
RYpKJFotEdnJnn0na//+z7fnfj7N5zdnzty597135sw5z3mmxj37dDyvmiTJ
I1mS6F9yYkiSW/V3SZoke9SSZEGRJOdKPlLKppJ3l/yKLjiykiS7qX5WTJL7
JJ+YuX8dXT9X/QdLPkzyHpL3l3ytxltfckXXPKj+76htldpqkidJPljyUMnr
Sn5c8hMq9VRfqfEXSldV/Tldv7nG20Dyqepbkfy22q+V3F3320vy6jxJHtC1
7fV8/1N9htprqp+nMl/yGMm/qv8uki/WGC10/SXqf6Xa9lH9KemjdBOqvue2
ut/m0vVR31zjz5S+jvR9VGoabyc9X331vVb1/aS/V/rf1b+59APU9rf0J0u+
T9efLP3XGvMhyeeq31mSb5bcXvK2kttLHib5GMnbSD5G8tm6/hbJ3SQ/K3lT
6Z/V/bZVW13aVNbVvW5XacLz6Hl3lO5S3W9tvpfk/SRfI3k9ya/q+n6Sj9N1
u/C+JM+XfIXk8yR/Ifl2yWdLPlDyIN1/se7XVuOv0li/q72z6l1U/lD9SLUN
UP9ZGn9b9f9Z/duq/1Q9y1TJx0reW31/U5+L1fdnXdORbyP5UdU/KzzfzlR9
f/Vvqf47V/0OL1H/d6QfpHoP6feW/n2N20/6ZSor1bZEfU7QeA+q/Q7p20u+
Wv2f1/OM5/dKrko/RX1vl3yPxjuJ7y/5WMntpB8o+Rn1307ypMzP1k3X/KP6
Tep/tOStVT9a+j/1t6t0t6k01j1b6Hl307Mcpn4dpL9W8iLJbfiNGnuo5FfL
9ZKo3kz9Fpb6pqrnKo9Ibiz1ReV8fE3yMdK/p/G/lHyHdOfovgdp/Csk78ZQ
+jtHcj/9bSb5eK7j9+oeHXRtI117q+SP1H6D9Kfp+n0l7xJ8/eW6V13mX/Rc
X6S2YaqvUP87Ve+t/i2lzyRPlH4TtaWqv6syWPWTpd9H+p013k6SL9N460ie
Jv0pkrfX30WSv+e96Xn+U9vDqr+n9iGqn6J6C+lfiv6tW+h5b5EcpH9U92ui
PvewBoLX5nMav5n0B0s+X/LjkreUfIP6HyV5K/U9qrRPL1fdpznPq/bdNf4Q
lX665mWVYdJtqD6DdM/e6lNX8qvqN0TXXyJ5V8kbSG4j+SLJu0heX3JryXvr
/h0k365xNqz5ObjXSxpvF/XdU/q2vEu1byD9OmqbUrVN/FFtW0l+UfIRzB/V
91L/I6W7Wbr66v+p/j4sean69NE911Kfyapvj03Q874p+XLVu/K7eH+SL5Lc
QfKOku/W3x/pq/GfUP+3pL9G8klq31P6f9Q2VuP9rPKk7vWB9HdL31P6M7i/
9IOkU3NyoOr3Fv69W+rvAunP1d9GktdS/yMkv4L9lHys5J0lz5F8puQjJG8t
+Y3C66uL5OaSG2jMq/Vs16hspPqP0t/P3Jf+YOm7Sf6f7r+aPUX1/9RnvOrt
1P9f1bdQ2/OSj9U1TXXN5qwDyYdK3kLyT5IfwNaofojGW1rYPnWWvJvkRpLn
Vj1HscmnYddV31jjz1OfW1RWMJ8kP8YakvyV5Fa65nC+neQG0l2rsrH0r6nt
Mtaf2nfV+MMlHyL5QclXSP5YfQZUvWcE1c9lnUj/l9o6qm8nzf+Bqj+utn8K
j3e96p10fS9dv4/mR1fWgq5rILkF9k7yaMkblet7JPuh+p8p+cPU75N3eIJ0
Y1U6Sm6C3WG+ZraH96vsoOfZPnitYXuC9H9ntqc9VVarvkrXPYm9UP1Q6TeQ
PL3qPfmqzOuS9XmU+n+LjQn+/hPVvrH6/6f+UyUPlK4V9kq/92nJ37JuJM+X
vrfktpntb3+17yD536pt2reF18N50p8t/Wb4AdLtyRpW22LJF6reXvUdWA+6
/ibWr/pcrd/XNNi2Xqj2Qvrf9HeB5GlVP/9a0r8geYjqh0t/mZ7vGemasz9J
967G6Mu3l9xIffZT21n4SxqnofrvL/kc+kreRPIBwb9nkuRNJR8u+WLJ0yU3
lvxi4f5tMu+XLaXvI3mK9FtIPjDY33pM8maSjwheX09JbiL5IMnnSZ4seXPJ
rYP386exLZI/0N/7EvtQdXWvw4LtwzS1N5J+YeHr2+n+20v+BZ+HvVbyOZIn
629F3/J49h9d81vh79VP7b2x7/obpOutUujdbMj1uteMxPNphPQ/sF9Kf7au
/72wrr/az9X1q3L7i79iE6W/RO/7Sfw9vrn6fiB9f8mjS/9gjko9jXWQ2h6R
7nP1uU26s9R+APZOY3SSvJ70O2ADg+cP82gt6S/QNb/p+jHYw9T7DPvNSpWL
VN88995Mn76sBz1PPY11NPuQrv8VPwFfQOUS6S/OXR+v8qrGuzD3WGNV5kju
LznX9TMl76/6GWqrI/lZyYdI3gBjI/kj1ljufZr9eiO1XZfbf1xX9X3Vtlz1
S/V7/tQln6l+uZ7nGf19n2dRqav+J6gsU72Hyue619DcY90i+RXJp+S+V0Vt
/VRfW79vNn015kiNvb7kD/EfpZvA+srtm/yscr7qP2iMOYnv2V3yiSrvqH6G
yvf4mJJXVdx2kurHYxNVH6mybW5/7mjdey+NsbfqD+ia0dLtobY98M3VNlly
S9XH4v/qmk2lG8c91XeR9FOk313t90vfUH+3km6+2o5U/c7M9aYqr+FrqG1R
xf7925JnSm6Pf8Yehj0jyJFuqUpXvnfuuUFMg79wp+45SvKkiveXM6P3n6Oz
0p9M/e2JMfDJ+S58H35zZ55R+nvYO3hm6d5lPar+uEovyadrvHuJd1Qfp/Ga
5Z47+HzEH9enfnePVryf8Q6Rv+Odq94l97MzJmPfGPz9u6n9QY1XX+NfiG8u
3UP4b/jghfebUdExDLHMZviUhW0itpE9nb09xWfTWLerf2/1b6pSU31zjbld
tM+D70PMQuyCz4fvR8zRt7DPg+/TRvLQwj4Nvg0+0XWFY0BiQWKSS4mvNGbQ
+Jtq/Dx6D2Ivwmb3kf4mPcsm+ALS36h65P56L19LP16//TtdcwR16R6X7vLc
65c9+LoyBrq03FMu0Hh1JI/CT5D8d7CNwFbgQ//Ob615Tn0j+Svpr9d4G2u8
Wyten82xK5Ib8X3LmIrYal9sTmGfGt8aH/JcjXeWrvm+XA982wNy24YPpSfg
XqjyecVr8mDpXua3qT5XpY3kbzL7ij+pnMfaUGml+g/YYNXPyV1nzm6n+lz1
/6RiG4Qt2jBaPl31h/VsHbhHxTHw++q7TOXbitfMMdL9K3m1dA2rft+P6R3s
xVqTfKHqj6vsw3rBfqq+rsYcrWt+5v3qXlPV1kK6C6qO9+pJP076P6T/TvJ0
4tGKbQLx3brRY3XUva5X33rES9gH9b8a/1ilr+rj1H/vwv3ozzN8pHGvkry+
dJ2xZ3q/rXO/uxWst9z2cHjib8i3XE2cyn7FfMKH1v0aSV6P8fQ8s9S2peSL
JK+j/jezR0g+SfJnxPD4c6pvXbXNrKOyFr685NvwF3PXT2fNpvanZmL7qo5R
26htG9Uvl76t6rPV1qkc/z/1/ZK1WbUNvFDy+nqml3R9j9I+jybGL+MB4pnp
krdLHDM/pfo+0bH2GNUvq3n8SZL3ZA9SfTDxjepjVZ8i/XjJu0u+T/ITkqcw
39W/GT6p6vtGv98ry/XF9ftI/4me7Qb2X7XvIP33ahuR+3naSd6VPUrP90Du
e4/Bp8kcn7SRvKPKSOZv6tiSNuKVV6SvI/mQqv3v4cQFqrdUeVTyH8TL+M+Z
433uyb0PL5+X56feRPc/C99e7+8Z6Reo/Sn1vz/37z018f7De+J9tSvfH/4/
926qcgfPo/IusZDkV3P/HtZHp/J9siZYG9Ny4x3Em3ybY9T2NHtR7u+3v+TF
ue/P3ndYxe98IPGk5GdUf1LXz8ots4au1PM/n/v5W+Av0Sf3/ViTH+heEyRn
qncp9fTvUs6/iuqfqQyp2qcAjzpU37Or6i+oPg28R/eYovFPUNuLzE/pT0Ov
sS+p+ff3lDxQ49XPjaedKHk/lYewJSqnlOtnouptdX0vyfX5zaq3Uzmj6phq
dHAf+vYs3yfvp4fqF6htLXT4K8QzantN9UGF/W/88BnE+/p7b+I9gb3hrdx4
09ZqW5Zbj+06Dp8k9e/g9zDeEvZO7B17n+Q3Jb+Ruz5bZZPCz898m6T2p3W/
46LxQbCYmfjnkg+rOiYco9/zcLn+e5TfF3yI+QlGBVZ1NHuA6g3VdgC+FutS
8lv4AMRkkrtXPQZjfa1yU9U26BZ+q65Zpfrvqs+u2T4QKxIzfsLail7/6+q+
jxEfsF9WHMN/Wtqvx6S/QfKXqjcJfhZ888HqP09t3aq2UcR7h4NXVu1zf6i+
f0jfWrpRalup+v/UJ634N3wk+Sj1P7Nqm3FkNH72aGIfHl++ldqOr9oG/anf
+yt4YmLs9O6a5yNzjzn4d2H7OVv14Wr7hrWpMkL1f1R+Uf1HlTuwNyrf5fZn
8U0W674P1BwjEyt30Rh3FY6RiZWJoUdI3kbyjNQx0/OFfQJ8oXqZfYUOaTkX
2ZNUP5Y4VfW1VY5T/VP1+7RqGzout88DPrxeZl8oqu3tqtcIePNk5of0H1eN
H7CfLVH9Xo03NfUcYC6AESzPjXGAdSwp9zv8Gvwb7nmE5H1T2zZs3n6pn4ln
w+frhH+h8h2+ruQDwfBT+yrsiXumxjN4Ft7hD9iS1HsRMUI71d/KfD3jnAq2
llpHzHK06nulHgsfZW9i7dTPt7xqDPS+zL7XB/hghb8BvuCOmb8NmDzY/OvY
EOmOLLx3fyO5XWGfCTy0fmZfarXkHrpHPfW5M9jHeEz6OoV9D3xKfMkmmX1N
5utI6Su6pnthHxTfrHFm35Tvd4Du37x8nzzvSukPIibKPEfwVXfKPHfwWa6T
bpPcvgw+Hr5kw8y+3/6SR0l+Q+MdUBgfn1jKB3Lvwr91XMWYND4vvvImmX3h
1uBz2BOVNjyPfl8Vf1n1V6SfUHju7psZb8DnPljydpl98QcLz/UWmfEW/KHj
JX+k8Q4t7J8wf5nHPQvPGebOzmrbX/Wj1PZd1f4+66mb7j+s6jV6mOpfqO26
qr8x3/oE9gddO1ztd+p+J5GfwLZK31r1E1VurnrPa676GI3fQ/Xd9HydasYT
T0Yn+fia1zhrnWfEf/pJ7/sm1UfoXp2lv1JjzJd+28L5k9H6213X76rrj5M8
QPKBkjeV3FZyq2B/kbVFfHW59AdJ3kz6IyXfofF+xBcjNma9B+OjYBFLwL9y
x2fkO/7Kjbe3lH5zXd9O+pGST+T9Se6I/QrGn8BSXy3nA9gtmNzbqecseGGe
eS73KtYspaQgDq05BgMPrJM5NiMGW0/y2pljM77vGZL3AZerOSZaX/I6mWOl
ByT3wr+U3FXyn7rfXbrfEfwOySsl95dcT/KYmnN24B3kJPYsjNnOT43pg+US
8z1cNdZPLEiMdHfF2DOxEzHR4DL2Jla6X/1O17V76f5dJN/F/iL9AnBGyWcy
jvQhc77uRAlXSJ/qHt1T2xBsyUP49KltDC8ITOKY1DHe9tiLzLEfMezf7O+F
Y9vDwHSk/4LfrPoI6UdjezJ/j7f1nOdWbdOwbbdK/3Vpa1hf46NtBTbqtmhM
DWwNDG5KYQwOLA5M7zGwVvX5o2p88MrChfrA3HgRGB5YHhjbE8z9wuuZPRR7
dHc09nW15F7ROQxyCGCA/0T7M73Z6xLn0MAQwRLBDCcW/n1g98zxU6PfKblQ
5gTveuvC2PYL6rON6lOC8VJw0/k1+zj4OtwDf4lvND8z/s23GxCNj4OTg/dj
H9hr2cN6E9fiQ1aMwYPFM4dPST1nmdu7SN+yYkwebB5MFGz0bOkf5fk0/r8V
+3C/B9s0sFQwY2wdGCdYJ5jp7MKYKdgpGOaswpgpuUYwd7DUrfgeFe+ZFdUb
834rXr+rgzFRsFEw1OfYq6OxLTCu/4J9AHIW5CrwDVoTr2Gn1X9e4Zz37NQ5
DHLhDaPjeeL6YdJtGh2bE6P/G4yxgrViE2YUtslg4axh1vI26r9affupbBSd
0wJDv0L6VdGY7LOpczxgtWDi5CbJYYCVg3G/kNpmgX2T83kxdQ6cXNBO+HSp
c6YvF57/2HpyxuSOOxVeP3eV/hR49x7Sv6ffPU/XLs09n8HAGxbOh4P1g/nX
L/dr1g97zqjU+a3nmavEAIXziV9UneM/R/U+0fl98vzkK1sWzt3eo2uG5M5/
Nkmc8ysK76Hsneyh5L8Okvxm1XssOfZWhfc29jjwXvbPFVXncE7H5ut+GJy1
eS7d7ybJn0nfgvuV64/81zGZ7T37APvB4fhHars4Gt9+UvUXpG+va96V/k+V
DqrfGO3rsB/eURhvYj/+vWrMmD2cvfwztd2sMQZH5yOxtS9rvOslvyP5Yt2j
c7R/gC24v/SHrlLZXfJ4XTuw5vU8r2pMsSnxZnQ+cb3y951U+PeCn5Mv61o4
XuD3dlF9jPr/V7UP1FP1y6Pzj+QhyQeNjc61kaO5SPVTov2nlWW8sbP+Nta9
Z+HjF94TWVtwAnYu/E54NxtirwvzBcB3wXlfqhm/h+vxtPo0KDwnHlyzAZrP
cQMxUdW/md9+u+Rvq7aXd5bzFd9/08Q2n5w5a5cc+46Fc6isvXmlvSP/Dp4L
rrtY418dnW8n776o/J4rq44xK+QkyvzPT6nzU9Oj/YUhqfkXv2SOJYn5wS9e
DJ4rYAhgJ7MlH1yxTbxV8tzg2L61yjjmC3tk5nzVNawP9vjc+Uv03YJzZ8SY
xJo3Sb995jGflW54zXk1+swLtjnYnkMT328l9r7inN1r0qfBsTkcluGqb0j+
vGIMECzw6mAs/BDJz5ErCY6d2dPZ2z9XuZT4jj1V9Y1Ulif2IT5TfUJ0nEG8
8bHkkTXnBJ7lk0p+WaWTdKskD1L99GDsB87HomCfDt+OnM3nGuue4HiGuOah
aA4FcQRr7Nvo9wXuiY3dJJoDA8eH9QI35hnJP+fOdxOP7xqMT10NDl8z5wOe
CnwVuCA/RWPNizLH90fp2h0lN9A17VS/TW0/Zs7JLAz+Pjcn5jDMD/YZsRmn
qe0Pcplq279ijAKsAnyhGe9a+rsyc4KwW9iv76NtMntbx8y2+j3yiRVjMmvi
X/Zr6c9R2/v4cjXn2ci3fSC5i8bYoWLMo6vq19Wc89hG1zwA96VmLhecGrg1
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
Z38AL4Ffhj/+f1x/gF4=
          "]], Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[{{1715, 1714, 2297, 1574, 1575, 2298}, {1860, 1090, 
          1527, 2293, 1719, 1720}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFkrtOAmEQhWf5d9nFGygq3hBBIoo3amt9AZ9AjSZWGktLW1tM7AkdD0Bn
6H0DGxuJL0BhZfwmM4nF2TOcnf+fc2apX92f3+VEpAMC2OMxhqfhbTCKRI7h
BFTQZ+EiWEBvw/OgTL0GX+ZFMnpOE5FuytlYpFcQ2eLdkJ6O9qK/0/MCT4LV
2rdPncPIOvwUmz7xc6rrvGvun0G7gPv8/gQfYh6/I/N9GExvwhsg5uyR+tVc
6C14B7xRN/y99muGZc9egx9Sy/uT2v2vkWXb9Lyae879V+Aq+KKegg8S83cC
r/iuij5f52rfI3vJyDnI7IxqZfgssVlN+Dm2fL/B9q5+luBbr3UPdfejvlbd
j/pq+9yS76PvGfXOoXsr+Nyq7zyDb/LmQX3qd1SPOktn7gbb82Iwj6Pof19j
/+/8AT9eOQ4=
          "]], Polygon3DBox[CompressedData["
1:eJxFkb1KA3EQxDfZu9wdWkjOGL+KRAMK0dhb6wvYCyIKVoqlpa2tgfR6hegD
2El638DGxuALWFj6W+bAYvnP3O7szu71T6+OLptm1iMS4qEwmwLewWVmtuVm
s4bZF7wAjzPlVsDPuXhJvmqo/iVX7SA1uyn0Bn8jfwi+p6YNXkZfUXvM+0H+
k2+74DWiiaFXeM/lZyeVJrT7qWaF5g6fC65caIbgReIbPiU2wXsunMd+4LnY
x1Sz7f8eJ/DfTDutunYa1/PCS8wIHycts3nyTlwQA5f3hPnr4A3XrnGzNvg6
07wl8CO9D1J5mdT3GLm0Ma8PPqd/13Xj20SaDrxr6vUEL103jVuH5+g1q/PB
ozZPtFv4DZ6iOQP/8LaI3NU//llV7xa3/gM8mDbi
          "]], 
         Polygon3DBox[{{2219, 1032, 872, 771, 2216}, {2212, 774, 1012, 1216, 
          1939}, {1022, 775, 816, 439, 1162}, {1348, 446, 806, 838, 1633}}]}],
       
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl08lvTlEYx/Hn7VVDW8NCUhEpImWDxDyVohpDa6q5FZGXtiGURARNFUVa
saqYYmPVNkis+AMMKxERY01F0hCxEUvz59bi+35/zz3nvM+55947NruvqiET
EQ9wIicizbVcKNT3jximbuDRfJAncxPP57NcyVe4hq/zDeyW7/MRfsxt/JYv
8Rfu5O98m2OAudTLjXq26/1UfYzPq38kEc/UP/k5/+IX/Jtfpj1zI0rN7ZaH
y03WvJIPyRnXj6qLeZn5y7ECFajESqzCaqzBtYERa7kKWftbx+uxAZ3GNvIm
bMYWVKMGW7ENE5Ho1azneP6rfmMvx9ND7ecMqDs9Y/mdnMM9nPD7dAp/4EJ7
b7HmnLkf0/V8QT3SGT1RF/A9/mOPt/gbd/BnvsivuZUf8WG+y3ewS+7iar7M
FXyGS7iRJ/EBLuKrekzQ87TeQ9XNfEq93z0NSd8JHsx7uYC/Gt8j58s37b9M
nSc/dE/jrBsk17n+SR6DfONTzJ+KaZiOGZiJWZiNOehy7nN5HkqwI333eAE6
jJXyQizCYpRhCcqxFMXo1a8IeXrWJ32vXIxS18n+Llpcr5VtL3YmfY8qsumz
5O1+DMcIgycz/7+Rf78BWt4=
       "]], 
      Line3DBox[{772, 8, 1633, 838, 806, 802, 786, 807, 777, 797, 778, 787, 
       2216, 771, 780, 1636, 773, 781, 789, 2211, 790, 799, 809, 779, 808, 
       788, 803, 815, 772}], 
      Line3DBox[{1022, 218, 861, 813, 804, 796, 814, 801, 798, 785, 794, 2218,
        793, 782, 791, 1637, 776, 774, 2212, 792, 783, 810, 784, 811, 795, 
       800, 816, 775, 1022}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1639, 1941, 2303, 1819, 1638, 2304, 1820, 1640, 2305, 1821, 
       1641, 2274, 2306, 1942, 1822, 2107, 2108, 2122, 2487, 2287, 1944, 2053,
        2086, 1823, 1943, 2277, 2468, 2060, 1945, 2087, 2088, 1824, 2039, 
       2462, 2061, 2062, 1946, 2213}], 
      Line3DBox[{1646, 2220, 2375, 1645, 2310, 1832, 1647, 2311, 1833, 1648, 
       2267, 2312, 1953, 1834, 1952, 453, 2313, 2023, 1835, 1954, 2439, 619, 
       1957, 424, 1956, 2440, 456, 1958, 621, 1563, 701, 622, 1959, 555, 2477,
        2101, 584, 1961, 2474, 526, 1960, 1906, 2024, 2478, 557, 2102, 2268, 
       2314, 2041, 664, 2144, 2292, 2315, 1836, 1649, 2316, 1837, 1650, 2317, 
       1838, 1651}], 
      Line3DBox[{1653, 2221, 2376, 1652, 2222, 2377, 1654, 2157, 2318, 1839, 
       2158, 2269, 2319, 2161, 2191, 2192, 1963, 2170, 2500, 1955, 2127, 2136,
        2137, 2111, 2288, 2482, 1907, 1965, 2055, 2056, 1964, 2441, 2063, 
       1908, 1968, 2129, 2130, 2501, 1967, 2131, 1909, 1970, 2104, 2426, 2286,
        2103, 2112, 1910, 1973, 2223, 2427, 1972, 1962, 2025, 2459, 1840, 
       2113, 2270, 2320, 2027, 1841, 1655, 2511, 2203, 2204, 1842, 1656, 2321,
        1843, 1657, 2322, 1844, 1658}], 
      Line3DBox[{1660, 2224, 2378, 1659, 2225, 2379, 1661, 2226, 2380, 1662, 
       2495, 2159, 2162, 2160, 2201, 1663, 2475, 2089, 2128, 2090, 2186, 1664,
        2428, 1911, 1966, 1912, 2064, 1665, 2278, 2429, 1913, 1969, 1914, 
       2443, 1666, 1915, 1971, 1916, 2483, 2289, 1667, 2114, 1917, 1974, 1918,
        2488, 1668, 1975, 2026, 1976, 2479, 1669, 2442, 1977, 2028, 1978, 
       2188, 1670, 2206, 2492, 2145, 2205, 2146, 1671, 2323, 1845, 1672, 2324,
        1846, 1673}], 
      Line3DBox[{1675, 2227, 2381, 1674, 2228, 2382, 1676, 2229, 2383, 1677, 
       2230, 2384, 1678, 2325, 1847, 1679, 2430, 1919, 1979, 1920, 1680, 2473,
        2072, 1983, 2042, 1984, 2073, 2445, 1681, 1980, 2029, 1981, 2444, 
       1682, 1921, 1982, 1922, 2431, 1683, 2091, 2105, 2385, 2282, 2187, 1684,
        2283, 2480, 2106, 2092, 2195, 1685, 2210, 2508, 2193, 2209, 2194, 
       1686, 2326, 1848, 1687, 2327, 1849, 1688}], 
      Line3DBox[{1690, 2231, 2386, 1689, 2232, 2387, 1691, 2233, 2388, 1692, 
       2234, 2389, 1693, 2235, 2390, 1694, 2502, 2171, 2172, 1695, 2503, 2173,
        2174, 2043, 2075, 2074, 2446, 1696, 1985, 2030, 1986, 2481, 1697, 
       1987, 2031, 2391, 2275, 1698, 2236, 2392, 1699, 2237, 2393, 1700, 2238,
        2394, 1701, 2328, 1850, 1702, 2329, 1851, 1703}], 
      Line3DBox[{1707, 2330, 1852, 1705, 2331, 1853, 1709, 2332, 1854, 1711, 
       2333, 1855, 1713, 2334, 1856, 1715, 2298, 2335, 1857, 2176, 2299, 2505,
        2179, 2046, 2057, 2463, 1858, 2032, 2080, 2081, 2047, 2149, 2464, 
       1859, 2148, 2147, 2199, 2509, 1860, 1720, 2336, 1861, 1722, 2337, 1862,
        1724, 2338, 1863, 1726, 2339, 1864, 1728, 2341, 1866, 1730}], 
      Line3DBox[{1729, 1865, 2340, 1727, 2405, 2247, 1725, 2404, 2246, 1723, 
       2403, 2245, 1721, 2402, 2244, 1719, 2293, 2401, 2196, 2198, 2197, 1718,
        2300, 2506, 2180, 2045, 2079, 2078, 1717, 2460, 2076, 2077, 2044, 
       2178, 2177, 2504, 1716, 2175, 2400, 2297, 1714, 2399, 2243, 1712, 2398,
        2242, 1710, 2397, 2241, 1708, 2396, 2240, 1704, 2395, 2239, 1706}], 
      Line3DBox[{1732, 1096, 1731, 2342, 1867, 1733, 2343, 1868, 1734, 2344, 
       1869, 1735, 2345, 1870, 1736, 2301, 2346, 1871, 2181, 2507, 2182, 2183,
        2048, 2058, 2248, 2467, 2033, 2082, 2083, 2049, 2152, 2465, 1872, 
       2151, 2150, 2200, 2510, 1873, 1737, 2347, 1874, 1738, 2348, 1875, 1739,
        2349, 1876, 1740, 2350, 1877, 1741, 2351, 1878, 1742}], 
      Line3DBox[{1744, 2249, 2406, 1743, 2352, 1879, 1745, 2353, 1880, 1746, 
       2354, 1881, 1747, 2355, 1882, 1748, 2447, 1988, 1989, 1883, 2132, 2489,
        1990, 2035, 2250, 2448, 2034, 504, 2050, 676, 2493, 2154, 2153, 2356, 
       1884, 1749, 2357, 1885, 1750, 2358, 1886, 1751, 2359, 1887, 1752, 2360,
        1888, 1753, 2361, 1889, 1754}], 
      Line3DBox[{1756, 2251, 2407, 1755, 2252, 2408, 1757, 2362, 1890, 1758, 
       2284, 2363, 2093, 1891, 1759, 1413, 2094, 1892, 1760, 2432, 1923, 1992,
        1893, 1761, 2450, 1991, 1994, 2253, 2449, 2036, 2084, 1993, 2051, 
       2059, 1332, 1995, 1924, 1996, 2254, 2433, 1762, 2364, 1894, 1763, 2365,
        1895, 1764, 2366, 1896, 1765, 2367, 1897, 1766, 2368, 1898, 1767}], 
      Line3DBox[{1769, 2255, 2409, 1768, 2256, 2410, 1770, 721, 1597, 722, 
       1598, 343, 631, 1498, 345, 632, 1499, 254, 565, 1444, 255, 1275, 348, 
       256, 1277, 350, 257, 2434, 1771, 539, 2476, 1772, 2497, 688, 1773, 
       2512, 766, 1774, 2369, 1899, 1775, 2370, 1900, 1776}], 
      Line3DBox[{1778, 2257, 2411, 1777, 2258, 2412, 1779, 2259, 2413, 1780, 
       2271, 2451, 1997, 1925, 1781, 2452, 1998, 2037, 1999, 1782, 2435, 1926,
        2000, 1927, 2115, 1783, 1471, 1928, 2001, 1929, 2096, 2453, 2138, 
       2097, 1930, 2002, 1931, 2469, 2279, 1784, 2065, 1932, 2003, 1933, 2484,
        2116, 1785, 2009, 2095, 1283, 2133, 1786, 2272, 2498, 2165, 1934, 
       2166, 1787, 2208, 2496, 2163, 2207, 2164, 1788, 2371, 1901, 1789, 2372,
        1902, 1790}], 
      Line3DBox[{1792, 2260, 2414, 1791, 2261, 2415, 1793, 2167, 2416, 2295, 
       1794, 694, 2499, 2052, 1935, 1795, 603, 2485, 2004, 1936, 1796, 2490, 
       635, 2005, 605, 1797, 2486, 606, 2006, 545, 1513, 655, 546, 2007, 471, 
       2457, 1798, 472, 2008, 2417, 543, 1799, 1937, 2010, 2418, 474, 1800, 
       2273, 2454, 2011, 1938, 1801, 2262, 2419, 1802, 2373, 1903, 1803, 2374,
        1904, 1804}], 
      Line3DBox[{1818, 2022, 2021, 2458, 1817, 2424, 2266, 1816, 2423, 2265, 
       1815, 2018, 2038, 2461, 2276, 1814, 2120, 2141, 2121, 2422, 2017, 2071,
        2085, 2070, 1813, 2069, 2472, 2281, 2016, 2135, 2185, 2134, 1812, 
       2280, 2471, 2068, 2015, 2214}], 
      Line3DBox[{1951, 1831, 1950, 2438, 1644, 1830, 2309, 1643, 1829, 2202, 
       2308, 2302, 1642, 1828, 2156, 2307, 2291, 2142, 1827, 2143, 2491, 1949,
        2110, 2126, 2109, 2100, 1826, 2437, 2285, 1948, 2124, 2125, 2123, 
       2169, 1825, 2436, 2054, 1947, 2215}], 
      Line3DBox[{2020, 2019, 1298, 1805, 2263, 2420, 1806, 2264, 2421, 1807, 
       2294, 2494, 2155, 2190, 2189, 1808, 2168, 2184, 2455, 2296, 2012, 2118,
        2139, 2117, 1809, 2290, 2456, 2119, 2013, 2099, 2140, 2098, 1810, 
       2470, 2066, 2067, 2014, 2217}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{864, 1030, 2304, 865, 1036, 2310, 883, 2377, 1043, 892, 2379,
        1052, 901, 2382, 1060, 912, 2387, 1071, 926, 2396, 1084, 2331, 940, 
       1097, 2342, 954, 1110, 2352, 968, 2408, 1123, 981, 2410, 1134, 992, 
       2412, 1143, 1001, 2415, 1151, 1010, 2420, 1160, 1019}], 
      Line3DBox[{866, 1031, 2305, 867, 1037, 2311, 884, 1541, 1542, 1044, 
       2318, 893, 2380, 1053, 902, 2383, 1061, 913, 2388, 1072, 927, 2397, 
       1085, 2332, 941, 1098, 2343, 955, 1111, 2353, 969, 1124, 2362, 982, 
       1596, 1597, 1135, 993, 2413, 1144, 1002, 2416, 1554, 1555, 1152, 1011, 
       2421, 1161, 1020}], 
      Line3DBox[{868, 1220, 1221, 2306, 1222, 1170, 1171, 2312, 1232, 1179, 
       1543, 1180, 2319, 1546, 1544, 2495, 1545, 903, 2384, 1062, 914, 2389, 
       1073, 928, 2398, 1086, 2333, 942, 1099, 2344, 956, 1112, 2354, 970, 
       1409, 1410, 2363, 1411, 1599, 1267, 1598, 1268, 1269, 2451, 1199, 1200,
        1323, 1557, 2499, 1205, 1556, 1206, 1538, 2494, 1536, 1537, 1021}], 
      Line3DBox[{869, 1608, 1609, 1166, 1451, 1167, 1452, 2487, 1224, 1354, 
       1172, 1231, 1173, 2313, 1355, 1305, 1234, 1241, 2500, 1235, 1561, 1489,
        1404, 2475, 1614, 1405, 904, 1063, 2325, 915, 2390, 1074, 929, 2399, 
       1087, 2334, 943, 1100, 2345, 957, 1113, 2355, 971, 1412, 1413, 1414, 
       1600, 1270, 1498, 1271, 1313, 1272, 2452, 1445, 1273, 1279, 1476, 2485,
        1207, 1447, 1208, 1477, 1288, 2455, 1559, 1214, 1558, 1215, 1450}], 
      Line3DBox[{870, 1342, 1505, 1343, 1223, 1345, 1344, 2468, 1225, 1174, 
       1233, 1491, 2439, 1490, 1562, 1492, 1493, 1458, 2482, 1460, 1459, 1243,
        1185, 2428, 1602, 1186, 1251, 1189, 2430, 1190, 916, 1567, 2502, 1568,
        930, 2400, 1574, 1575, 2335, 944, 1583, 1584, 2346, 958, 1258, 2447, 
       1259, 1260, 1192, 2432, 1193, 1264, 1195, 1499, 1196, 1274, 1201, 2435,
        1278, 1501, 1500, 1601, 1502, 2490, 1503, 1287, 1209, 1289, 2456, 
       1482, 1483, 1449, 1485, 1484, 1300}], Line3DBox[CompressedData["
1:eJwVzjksw3EUwPHXOBLpaDRIldKyuBJWTVhcrWtzdKmEMJrsrOydRBisEolz
0ZZVJCQWO2I3+HT45Pt77/WfNFXaLe4kImKVclPEREtEnjRTVNoiJvWpOWJa
Z3jxntMDt1l9Nc9rgXfvBT10K+qHeVGX2Lf7NK94L5OhzLn9pnawzRa9dLVG
VN3SmqKHbvrcslpzyzVmBuinbpd1H/IeZpBRnu1HNOc2puO8eV/Zf/lPnd7f
emT+0V8uOLG/4Zo/863eccoD9yR45NK3VT2jTo0ka43fux3rOu2U2GCPfzvC
L0E=
       "]], 
      Line3DBox[{876, 1613, 1515, 1518, 1516, 2307, 1539, 1540, 1177, 1434, 
       1178, 2314, 1317, 1547, 1183, 1464, 1184, 2320, 1306, 1248, 2442, 1440,
        1249, 1607, 1441, 2480, 1407, 1604, 1408, 921, 2393, 1079, 935, 2403, 
       1092, 2337, 949, 1105, 2348, 963, 1118, 2358, 976, 1129, 2365, 987, 
       1550, 2497, 1551, 1552, 2498, 1203, 1285, 1204, 1286, 2454, 1212, 1295,
        1213, 1314, 2461, 1296, 1487, 1297, 1026}], 
      Line3DBox[{877, 1618, 1619, 2308, 1620, 1621, 1521, 1523, 1522, 2315, 
       888, 1622, 2511, 1623, 1624, 1625, 1524, 2492, 1526, 1525, 1630, 1631, 
       1610, 2508, 1612, 1611, 922, 2394, 1080, 936, 2404, 1093, 2338, 950, 
       1106, 2349, 964, 1119, 2359, 977, 1130, 2366, 988, 1626, 2512, 1627, 
       1628, 1629, 1548, 2496, 1553, 1549, 1006, 2419, 1156, 1015, 2423, 1164,
        1027}], 
      Line3DBox[{878, 1034, 2309, 879, 1040, 2316, 889, 1049, 2321, 898, 1057,
        2323, 909, 1068, 2326, 923, 1081, 2328, 937, 2405, 1094, 2339, 951, 
       1107, 2350, 965, 1120, 2360, 978, 1131, 2367, 989, 1140, 2369, 998, 
       1148, 2371, 1007, 1157, 2373, 1016, 2424, 1165, 1028}], 
      Line3DBox[{880, 1229, 2438, 1230, 881, 1041, 2317, 890, 1050, 2322, 899,
        1058, 2324, 910, 1069, 2327, 924, 1082, 2329, 938, 1095, 2340, 2341, 
       952, 1108, 2351, 966, 1121, 2361, 979, 1132, 2368, 990, 1141, 2370, 
       999, 1149, 2372, 1008, 1158, 2374, 1017, 1301, 2458, 1302, 1303}], 
      Line3DBox[{1018, 1159, 1298, 1009, 1150, 2414, 1000, 1142, 2411, 991, 
       1133, 2409, 980, 1122, 2407, 967, 1109, 2406, 953, 1096, 939, 2330, 
       1083, 2395, 925, 1070, 2386, 911, 1059, 2381, 900, 1051, 2378, 891, 
       1042, 2376, 882, 1035, 2375, 863, 2303, 1029, 1219, 1304}], 
      Line3DBox[CompressedData["
1:eJwNzj0oxHEcx/Gvx7pSNtlkNNxN567cZGMxmHDcgK4sJ4MbblEyYfYwkMdu
koeLQspMdvsli0kp8nBew7vP7/t+X/+ud3p+tNQUEQU0WiLWWiNybRFJzGIG
1UTEh7asZd0dmMI2P2nftIqW8W7GMZ+3E6hrC1q/968dt2N45ovutPe7LdtF
PPF5951vNNx/yLVHDOBe2+dH9B/+G1k+gwttTxvUvvhPpPgkHvgjPa0d8gc4
517dG3yfXXe/2FV3j732mxp3a2+wxHfxu94Vfsde4RJlrVM74bfcmzjDKea0
FT6hd/svKe7Re9gOoYh/8Vc00w==
       "]], 
      Line3DBox[{1024, 1341, 1340, 1400, 1217, 1381, 2472, 1014, 1155, 1293, 
       1210, 2417, 1424, 1512, 1511, 1510, 1474, 2484, 1202, 1475, 996, 1138, 
       2434, 1198, 985, 1127, 2433, 1194, 974, 2356, 1116, 1533, 961, 2510, 
       1103, 1530, 947, 2509, 1090, 1527, 2401, 933, 1077, 1256, 2391, 919, 
       1066, 2431, 1191, 907, 1056, 1496, 2488, 1188, 896, 1047, 2427, 1246, 
       1182, 1403, 1506, 1402, 2474, 1401, 1239, 1175, 874, 2437, 1430, 1429, 
       1428, 1168, 1453, 1228}], 
      Line3DBox[{1025, 1616, 1617, 1615, 1486, 1218, 2422, 1488, 1514, 1337, 
       1336, 1294, 1211, 2418, 1374, 1005, 1147, 1284, 1283, 1504, 997, 1139, 
       2476, 1421, 986, 2364, 1128, 975, 2357, 1117, 962, 2347, 1104, 948, 
       2336, 1091, 2402, 934, 1078, 2392, 920, 1067, 1603, 1406, 2385, 1605, 
       908, 1508, 1507, 1439, 2479, 1247, 897, 2459, 1048, 1463, 1240, 887, 
       1436, 2478, 1435, 1433, 1176, 1457, 875, 1520, 2491, 1519, 1517, 1169, 
       1606, 1454}], Line3DBox[CompressedData["
1:eJwVzytOQ1EUheFNCiRF4Kpob8DVAe0EmAACJLIEAQlteQkMtg+eJcFBKu4I
GAGqDgs1KEKbEIaA6XfEn73X+o/YZ63R2m3ORcQOGosRSwsRj/jFAH+FiMt5
0n6Pp2LExLzDN9fm/nEt36CPsf5AN/B2Ve6ihw7euT3ugcvkc5zhTb+tz/V1
uYJTnOCVG+q3+JpcRhvPupaZ83VuM91tNtN93HG6l6vqMn/bkKf2I/OWP0x3
8Zmuwq/LP+kvXG5ecSWzzI10Y/5LfsEFt2yucJ/6D/u+fQZ/+iqa
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
z6Pffo9Yet6JXNvtKjzv4lNSePG8LzC8Yo7nt+/5Pk4cryIfWYPjuQ15U3Be
4d2/MpAHYq7EMPNKCl9n5v1qaToLecDK/gwzrwhrPeO/bfhW6kHxQJIbvZfx
b7q1wwDxlJgrBSA/7D91phb9lzkrMPzTYyuwEcfrWhsw/HPy7UwDjEPtYv/j
NA4k6qIu04c62/sfxP5UyXXVMbTnbBU+gPbCaTwfKX+S2DprDcqf4OAwk+HP
1M0mtpQ/SUNImw7lT8id+5Thz4suLEL5k6yueiVL+RMMbg5cRP483Nu5ltZH
ckzwxQ5aH2Hlkx4hrI/Tmp/007pG6u+JZWFduy7lJI955c9lV4b68+jzICOs
R+vPjpzCetQm+e0FrWuwxFjxPta1RScsHt37F/dpPcdsFmHft3aMr56P8dV+
OY0oei6gobSRSJsXgrxuqVoCPRdzJHq/oY7iyTdiozqKuH58tQx11PCb9RfV
VcrJN/kNdx8eKyXLp/OrLo5vgyO+UfE/VuZDdMvPxWvmZBEpwU15y7Z2gRFb
1vJTV6n+3fnw5/fMXPIj4qVT0RWqB/qufs844q6evjHuxX3xL4mL44YZvp03
tDS9wOkoZG9pf646JYDUa6kIiFEe2MVWOmGmdgZsiqiw0374iSj0rFGdeakL
Buq0++o1oqD06q/pZyalkVm5SXun2rJgUmf5uAKhm+TzitIZlG8h3JsLkG/P
sJ6F62ZsJxOPnJ8rFOcFU0WmScjRede4ftcUdkwm11Itaz0DiwgfR+iBhXO6
4ERGUWPmEffE9I3xf8LZZbg8Kt/1c2LKkRq1JrlZpJpDbQjtRywV9hkqPoI7
C37JH0t7TkzCbMvHsSif66vobE+hOCN6P17PjyEJ+qF3tiSy4KX3qavPYuNA
jZ2oeWxNJpfk2FslXf/+dwImkFPvyF2qxsa2Yvq0CYv+8f/h9v886755wyfY
b/Ep89iNAhLadleuvpDqZK4fNSpyleBZzH++XdcHntfYHvaK7QCfYa6E+3Hl
MG/7K7kU1kO4derw/psTO8HI8OaWqlcV/5h//0lj/+SyDjjsm8ejZV8Oc9VV
t6WOcyfbrXNnPpeh/tdUM/5jxD21O3V9yPiQvYx/hU2321XXVsAbY5usj7fD
Cec5f81jDR0gvOYdC3W7b9bLDrxf+uXzsxZ1+7xfLeOGClLJQaFEmajMAqJ4
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
jsupY4X43F2PlYnPby5fWQz4r/hJogra5xSohUP7STqCTPuTU9g1SXs0alP4
HNoXrIsrA/2rXidNB38hiV6GQfvluk+Z+J/3rS/T/pnhOkb/hzYTZlx1v9av
lZB/i0ZZom7CuJY0zmCBeXi/XaER8JbPP7UG+h/0iOctyadwRar1RZJPYamf
aBHkUxs/zimGfMrN8K0U6Im8oOENejZQ3mA+yht8gvIGr6JynnFyhUeyZ0m+
iWPueV0h+SaqVn7YAvmmIH0/mDHu/eAHyg+sSfmBpSk/cASV64+TH6S8waMa
f/IG76TyPip3pfKZFwKY/XKxpcyE7BfUt2dHIuwXb7dZHrC/Bvi1HIn9o8p9
LC1g/wpsJRVkv+Cz4WuWAB5aOtRegP2SS9+hC9J36PL0HbpCkvRsoh+lJ4TC
fkTL1+54A/pbKW/wOokx3mAFyhssS+XZ4/iEt7OUrgCckRT6suxubBLKnFKs
DTizvih3yZvTljiqbcHzksBoZLFJUkrq2/+Ch5QXxZTyoiyjvCjX5+fXqdte
RnX36hj9v/jKGP3/4DPwBpv9zVubQPmBxcbxA7Mojcm3+f4p/3l6jDe4fBxv
sDXlV+Gi/CqalF/l1MLkSq3rsfjHQ68Zbj5VOM1xRaizUgdy+Nz0ReNKHvbM
XK8O9xymHmuLhHO82a4mO/Z+asNdGsKWcC+iv9ylBs79hjgfW/KVVSDPgIsX
yuM68G/zUTWZrP/mfdrO8OPN2awxev+P8U6Jb2/MO9OzdTpr0B/nWnrJlko7
lT9gcSwye9/GBry0bvlydb5W5Et5ei9Snt4KytN7sLs+MHVxBT6bebh3y4kW
bBqzj/8Fby3yf1AaROIEvMF+RzuJE/Ceouk5ECfYhNa+s0jPx3enzIw8IFiD
JVarHJe51IYOfV5XtGD4K17QJ+wrU1+KJq+2fFSeXQ94lQK8i82Up9eC8vR+
Ob73gejRBsyftV8Y7j9c+x24Bs5795+47k76g6xyN/dDf+onGc2G/sRnZHpD
3JLINcT0p3I0Lhf6s6Tf/aPegXysNEGj81BDDRZcpzNLRLsNDc5IkN5YUot7
1QvmnD37BT3Wu9i/eF0zYj9T9UGjqRazPIhdC/cQOM1+OcI5OelnBvBnplDe
3RWUd7f5vFbq6t3VWDF4+Su4z9DRHHYLztsL3GxiZfnr0Pkn+r7S58twzPIh
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
wflHovYcJetVOcnm2AGZMPTxxuT93j+e46crJSO/fv2/8/OwsqxJBJ4lE8qz
JEp5llhZ8uYCT1cN5ek6S3m6/q/6mzKK7vev63vL6jR8vvvaP7w3eqLOxo2m
S97OZT3Wdm6N4du/5J/WujfrRwclP9l9asHs+xXJ/pJj95BD7O01Vi0Ww9kt
SxZn3NXFNllbHv0k8subUdbKxWKos0WfkadQ+W7xVbV60UEyT3Zb/aFH7vHb
l33r+rayOknb/rs/STu2bOKWr0/2TCgaVrfnxZfY2xn7VHj32ti08EzynPlz
2KWWPUqWHhqz52TW3DB20614TfOqbJ6PJ3BCrbg+3PdmkVvshbwu43jxctG2
mgjsj16L1pA4R8u7S5i0Ry2t25n2zvVj7ReYGHyYJl8vU5KQ8cd3RZPKn50q
PCMz/rsnhtXitoyIYlY+rdMhisrYr2CLJsgHFPYc8z9RnqwyaOBhKjeafMko
hWn/NeRMOjpgjCeKCXVs176KI6yPpJ0CnhYF+5FNpcFIY5+1zxy9BCypfjBX
vaQb6furWJH2aLHr+nZon5g+1j7WXEmOfBft3Z9iBd8tp9+1cLmb4neiXGb8
d1O+f6vl2KaEFZW8D8Rv1cNI/3v6MJGXz0gQi1o4Eb+u4C+2K1yEuTw8GN5R
hbuznuSwOONNvJomsyN9sdKOe7lcEAfuC1q32yUaV1dZ76iPTsILlDUNXid3
I17Kg+o9jgf1L95dTsq760J5d+fT/5H/Ne5/5Lvo/8X70jp+F63jO9P/MUmi
/2NiTf/HpJ/+X0PbuP9reE7/90d93P/+BP0HP/z3o6yOZLzomNSQMYy3qeg+
M14vIyMnMm+oXbWCmbfHBmPz1jxdIObxwokI03mbTudN5QtvKPshbSyUOUNn
CzbGm9kUvsJ7B5Psot6GO0L4lb2Ua5jDOqz5Qu0rtD++Vt92k6Y7XtBRujV4
8m3McmIqe/OvbpSoMxD1uuUFFtGeMT1o92vcdeBCfA+Z52w9rP7792fMsb5D
ompqFu7TXHCzbksXcg4WNZWfX4WVcxbukpj2HnNHcRhGCnQg2/CIz1c9KrFg
47aMR55ZyFrhXd9Wrg7kojXQPUVmi8xw5tZUrdnV9HcH2up/7vCnxEoUuo3H
VNcvCw1Gv5k3zNKBQnrCjYh+dPnNIKO/oXqpEegXa2yPqpieh2L2uSKXT5n4
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
8lKRuwWd6rjZz7mlHsscY5+XVlyEb5qIfZ8t0oLU+PwGiRxpxwXxg5wlimsA
5JPshuuIHuTpcDwE9DzMqI8HPXxhEuzkuyjbrSASvusZyecB323+GGriGxaM
9n+ur+Cqeo1mKGnpvskn69i3iMkv+qOimHHFGY2Na3JKnwLkFwl0fjrp/Hwo
602G/GL3uPn5QPM12XMeo2r2vCiU5k1b3gUw+Zpmx7WZG5c9kvkrb7oQP5av
XXeOYiP5F/p8cg2Tf/0emFeiufwifl1vGxyR/AgduHtI8NZgN1o+YeGzFLNE
PCd+XSd/bBlatmdh3YwDnSj/mH+X5qsSfH9eyOY9ns3o9tyBVxIW9ahzdPa6
RJNmPLyJ4454zEdsoNag/2ZBE4pMVQA5Mto1NxDk956nMPLUA/driR70sq5i
K+h5UXMqAfTMk7hziXwXbYq0Y76rty6S+e4h68C9JK9EwT0JCa01EUhMZcYy
yCtNHRcvhrwyxNKEHca1xmRsXFV8skxe+df8hNH5EaJ55fj5eceKmTx9eLRy
tPXaP/xOyTQfD93NJzXjfoXMLZpHj4ZN3Qf5+JQkaf20u7ro94utTN6tflNu
T/wXT3y+6UGk5tVkxLp23sCND93IJmPG+sPfP+AycbvVTt/akKaUXNp5y1pU
vTcy/VFrA46b9NV3//uvSOJocrpja9F/nicsvYe54o83oopPa4/tHWlCBp+T
JzvsLkHquo2ziH70RPquOOh/siyP0b8y/MyPV188Ud3RFKY/PTsXMf1RS1TJ
gXOD1UmWTP9V4sb6f81Kjzk3CN19X/Lf491Czw3Gz4+6cL5og+mSrdNYndJN
1xhu/Ut+lvJB9Y7jgzotMjafuxX+PN+I8f4pCfNpc1FpOpxj7CwaO8ewXiRr
lZnmiW0Ft0qt00rGGYXLxLd+7EaWk0wbNE1TsWZDzjK9na34C//pyW2cDUi6
x1jaZ0cdfnd7+Hr47xasvSHrUuqcIpRJ+aPUKX/UT8ofleLfVjfJIx3l5739
pSbaiZcenmTVdrcUPb+nNMP2uDe6Uxu8utXxPW5SPPSSM4jY1eO37PYPRJBA
VKqja4wObr5/5B2cs22a9jBORvSOTOEKFdn1+SXJjv3/+3nLPq5qZt72cDj/
cf4TQPmp0Dh+qiXTNRaaWV3GAmVfZVl9I/CSq6sE5n7vRpdkdaelOL3Azgej
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360.6771676353743, 239.29135438966267`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-3, 3}, {0.00001, 0.99999}, {0., 1.0797978028145265`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.3739566069692963`, 0.15381579074412915`, 0.20677890802980617`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.653189399061227*^9, 3.653189413523491*^9}, {
   3.6531894764304028`*^9, 3.653189486705179*^9}, {3.653222926866539*^9, 
   3.653222932662821*^9}, 3.653223220693852*^9, 3.65322327562943*^9, 
   3.6532233439967127`*^9, 3.6532234247597923`*^9, {3.653223489074504*^9, 
   3.653223540934799*^9}, {3.6532244160467253`*^9, 3.653224420742613*^9}, {
   3.6532249956872263`*^9, 3.653225018842496*^9}, 3.6532253150933104`*^9, {
   3.653225616535679*^9, 3.6532256279949408`*^9}, {3.653226624902952*^9, 
   3.653226645481571*^9}, 3.6532266933353443`*^9, 3.653227111863596*^9, 
   3.653227184476286*^9, 3.65322739921588*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"DiracPrior", "[", 
    RowBox[{"x", ",", "y", ",", " ", "5", ",", "0"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "3"}], ",", " ", "8"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", "0.00001", ",", " ", "0.99999"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.653227498063151*^9, 3.653227498565812*^9}, {
  3.653227531299629*^9, 3.653227532619341*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
xSlPfCXqhwNnhvXu6sfNN9elFQMNqlsJfsfJb5ZH9vgy7rlEt4crzzc2SNZ7
2xct32o7SEXi+UPUAUZUv3rcfJvb7yuZw6hsWiQtsW5u+TT6W8DuJol5m5M/
MHXtxlYS6yPt20o7LDhVza2DXRxD7Mw+vhT8vkdo59yDTQO49jtz8qUO9M2Q
eF7RNbmVuXhZowTXG/J16I7vbyWeN453aWs1IfmVxPO6J9b6bAk0VBaf9Ui7
Pjs1jfjEJ9F7Faa3Fv9S/140UTGX+GjjE3OmH1AVK421vbOyMYf4AIX6k49H
qIhtZ1lL9x3E6Vz2+OryFU4txB69jXVmX+byx+hQ/1Sz4cpiBY3l3s09OD7N
Zxhz6mET039ufvNdfU5Pzzhd827arcVXwxm3E4e5fNDUQ8V8b88GRrr51w6j
9ly9VMUlvFtYYhVzcLH8aZ80Lv+Sk97eoddVabHcMPOgt6s47tDvYq1WRgYz
0WO8u60/p2es/Y6UI9O/MTeeLn7QOJTjxh+uzX44Kit90fyh7dPkuHgjdULL
5wOyqxmZByKfzs+5/MX3zOH3A0baMbH6cgM7H+L8w1Knx6/631cTfzBpM/Va
t3DiRlt8XcZodBCLbu4OP65+gnjaRmOnA6vUxBqOC5fWWCUTP9ini2O3K23E
swyNpJXtuX3tQROrny11aCd+2NJxyZdT94j7LygVqVTKiC8FrVdv/567Xu3E
6r8632hmfpSknRC5cXm6Y8SnskHJbcQt99796PS6hPir3I5V2qofGaUPmatb
O3Hztv06+REXDGXEVc/nTDuq9te+ed6l4CUtSxn5OOsPqp25vNXwg03v6bN/
McZR3e+YFXD3hVjrw6uApquMz5hwY/MYTv+1ytnXPRs+MK7bMw0Wm3HxmEyE
61If87fMmmeGu3V3c/N/TGDS60G6lYxsfOdO5uO45xOeKthlLtj0jDH7cLZh
7kXOP6tXXnLttO4xM3BvyOeskdz16rd0+VH5Le3ENovjb/ruOkpc0aR23Yad
qmKdmQNn7jsbzN2PhaEtl+eoCb7fV23RZPEpOJrLd25VmFbtVBT4TqCS2G7S
hDVO+7n9vhTd5Rrftkt+P3D1uCcLvfrJixeF7367sSmfeIz0za0XzGQl/CHq
PAuHnfMd34KrLylvrGu9V0ZFnBg37vq3c1x7em/u4J09bz25+WDNjMtv9amR
cU6sPL/NlovfyoJ/zE0KkRNfXTntfMUULn6zj2nfxfydjDhc5qh/ik055yfF
21ftFdVL1HOwXs/qktpP2Y273+0DbBYPtpX8DtWK3QOvt/rwmdn9Jn3HmPNc
3cNo0tAPC/0/M892OIxtU8TxLp8DjGbd+CiRR7xO2Oh7sP5xusvlQe/1dnPz
7cLdlJUd9Csl3o9ooa19sO3elxLPwwxkRD/fmD9OFwWcWKxpyc2rO34NslsW
VEq8p4A4zSvvwhKjd3US16vblkz/WW/KJPSZqLT1e+JRzq4+Oi8Cy6wrJJ5X
n3hHSVNPt4PE/rja12FHOl59IfE8+bROg67/zHgu8d5Eh3EXK2K0OoifdtD7
WXXlJPEdet/7xfWWFzODw4yr/qpb6k7KOj5RVJkeG79eeewqTre2wQY/fu54
me53JSNKYw2nQy85hZlTh1Wkf0pwvOu3kRu/dvC7yJrf7UPFLl1nnuXaH7Xu
WbEo4QVTEPZs+6frXHu7rzndCra/SH/8elLjnp8cjxxS9tNZ/Dx9WLpUQ8Fq
zq52MyaNuSldKVHPGf7m7dfqk5VM4jy5lYrpf62nE9ae7bDoJbP7m3HSimxu
PGrpt+2C5SqY12vlos0iuN8NyLi8YNpjyfdKZveqK3PRlnxfeGqDj3zmfDmJ
51sSe19fKn+iTOK9JMQhW090HqCgxq1HwQ2+p2a3eyfxHMiVe2a3NOJfSrwn
fiz4lPwPxyqJ94MCW4r2f1R9zYyQMRj2+CrHdy5XNXDOe8UUJK+xd5Tm9IHf
4693JaMf3Nj3RE28N2z7lEq3WM5vW+iYSLspS+St2XLfq8PHqknwZMtnL/cc
VhPrxtV67jsZz/nt8b7l0gHtxd7vVxsce5VJfPusPCtNKTXxTMPSStmsa7y4
VEHskr7Je+J0Ls6xXbe7aehDBYn9gt6hY09/OqUg7v/meYcI+1vEC9TtDZfe
VZXcX2Dj3oM+Nba32nB+Ve9QH8+Gru0Ev78xU1OX+fIt76951WvlSKuWEvX8
xOdSB6u3K0twxP+5duP11L9ycVTw2ieToi7+YiT2/VkdmlpHhIjd//oORtHe
Mfl7JZ8TMF2+yd/aT1HgfVsl8dCTY9y/PuLivVVd+i7v4tcgkdfT+2Wi+g7H
orl4QO2oStqo3/chvw5fbC3T3daghcR3KlC3Se219tamDVz8IA5OXOowr0Si
fg59qm54J4THcDx1uHu27oQfEu2dnWwLLTS4/Vz++tii5WrpoBfceEKztkTV
eBRK7Kui/qk/xr08+iTHE813LF95PCmdX7e//eqNZf7EinSfdkaPh8/i/HPy
g7Vdt+x+mf5evbfMOF3uflQpWV0wZGhlumX22PJUh7/87ZdfNvolL9MT+qjt
UJ8tWfeuPdhu96XL7yXmIT/OsRy+1HPsDBXxs7yrVxy+cvdvrbtY+sYLFbGi
59YFk4zPEN9bEN1+y3gV8UXltNJJ87i46EKT8+V9mySfX2JGuFqsfqcoXmPZ
+ql1AHf/TrY/sOvshvZitWA979g1XPzTesTqRLnxrcSm1uohp7pw+2jt/TS9
TPvIS9xf80dpxau9VBR39ng+4/Rqbt7GJTe1ezhIWjxm+Bpz505cnGOiZlb/
weknM9gzx+diGTf/q3Y6topxlhK/s44McdTi5kN6+9bPD+ZUMJMad1tMduP4
wKYwzYnF9UyH87XPE9y4677jrkdGQslnif2apJ2aXR6feZ7+bsa7J0G3OX/+
09Hcbuju8vRymRHaR93eSMwrft7RNN/aQ6OxQqLOr9CufI3PzLbiwDspL2c+
TeL8s9/HjMh3LcS+jnutdTK5+EqxRVNafm078dkZP497h3N+qe8pX8MJxwrS
1Vt3T96Xw9mluEm3cc/G5xL7DupqzuaFE1Qk4uS6xKdvOpwrYkb0m3Vw8VZu
/FdbufmfzCyR4F9UVjaaqj+TqLcIvRcptJ8u+ByywHuXQvsRQs/BCsX/QnGU
UJwmlCcKrbNC+aZQfUYorxHyA0L5kVA8I+QfhPyJ0DwR8idC9SWheS4UbwjV
SYTyMiF/JZTfCeXv/2u8IRS3CNVzhOpsQv5TKK8U8qtC8b9QvimUnwrVK4Tq
eEJxkVA9SqjuJ+T/hfJfofqJUHwltI4IxWlC9TGh+qRQPi4UdwnV04TybqE8
XaguJFQXFYrrhOp4QnVUoXVWKJ4UqkcJxYdC8aRQ/VCofitU1xKK94TqjUJx
o9D6KxR/CtU3hPJKoXhDKD4Rqif8r3GsUH4qFMcKxb1CdRuhuoRQHUCoXiFU
/xGqVwjVN4TqNv9rHUOobiNUjxKKG4Xq2EL5wv8avwnVXYXiOqH6rVCcKVRP
E6oXCdVnhOo5QnG1UF1IqO4nVK8WqjsJ7e8I1WGE6jZCdR6hurrQfpPQPsj/
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
s6y4W8u/8s2yAVd1ta1/563nHCz1/8o3S/Z/fatpXck4+Fa0XV3F5V/4HpG/
5Y0OS9bNJbvQ/uBHA6cRjivJrp9s+x6Hc9RPthhMdvUw3rTtYeJL5vKbWRd/
LubySuyXNcVs3q92ncsrl1Uo9Nqr/ZL5tsM/JFufyyvxXrDNgJZbrhdweWXC
zuD00YEVzAf1Frb+f+WVlz7c9xIH/s6nboRl5TVyedYD9j3fB0kTjXQzVpFd
aG+bfCrr7kMjsgvtK99VHA04qUN2NR2erdbY/IqxWDCysW4Zlz9qsfuSJ2rl
SzLEXP5oMbLy0kXXV4z6JvHljX/lj0vY95QdxwaFPPsrf9z71nWCU2klc6Hf
npHf/8of/SedlbUvfcM8i6lTsXrJ5U34/kb2cvVuXzZsJbvQ3nmCbkYX6fcU
/6O94oi6PSaDuHyw6OvwiM7Wb5iKwFWuR45z+SD2ebtMdqky/Ssf7BaeJipI
rGImV9al5f2VD+K9++Sh35bn/5UPOllZlu7QrmL2Zzup/50P2l/YErRFu4Zx
7GH/Zmwmlwfhex2j2O/e/395H/pplTLvVvkQLu/bzvZj7/looLQml/edm640
1CSwmqleUnp82195XwG7ny5++s+5yVze1/Dr4J365reM6emQW8//yvu6sN9F
Sbw0o/bvvE98uvuSs65vmaIbt6/+nfeZKM3rccq1jsmy366jN2802YvnEHq9
d+nwbPWI/ze/Qz/hb//hXH6Hfjr+Ob+Yy++2JrxOm1tayzSO3OWw8K/8js4H
/HN+MZff5c9zn61mXcv0nRGu+3d+h+dqxAfL/yO/6yzX1JCXWMN81+Lldy76
F7MT3zMqf85VWUzxmwn7nG3j+X/ei08z+3/zOLaf5384l8ehn/g/5whzedwC
tYxxG7TfM4Ed/jOPw3Mp2Qn/mcedSbV+MyLwHXOTl8fhuRTkcWg/jM0XBlie
UQn98YXudyc277B6M3Zn7bXpdB2t2H2cvjkPf+cLjjQP89g4HHEO8ovVbNzo
XZSt8UlswCA+t2TjtEWOau/LvTmO73VP3W3jmmg/ivzVJTYOnN9ibe9d83Kp
Pb6rqbb+a61KO1/i+H6UD/v9TIwnnI2XNEvjbeeFcnXjNmzc1dv2zDO1o5cY
xJ/pbHxStNRvsX8bT+ID2HhmpsnWVb3cVtPv4vsSz9nzC5p45xfos+cX4HfT
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
6lPt1Ak7YoljHZ9s97PU2OuKRP1hMlt/4K/j8rx1HPH811LXWp2oeGqP9X0s
ey4Y2iMOt144rjH4Irf+os6mILAvlsruiwnVo6jOwK7LMT5Df/batF8VnP/+
L8aJOoknu87i+j5i81a+n8Rzm/x++O+pQedDrN/mc1nWj/E59rX5HP6Bz3+y
z7PxOeoh/58fEMr7+PeRPnsfoT3/PCNwoXnLbw/OPwcE48c8ZHqdSBjV7gLN
H8yT4ttTT2a05uI6zJP207UKT43jOPKynP3TnueeuiZYpxWK/8H55xOB879j
g99FXTRCfXBOwaoUwbqr0HsTQpziUjZ/5HP+91LQjxDnf9cF/vkLe780suf7
gH9nuWzMvxz31wb2uRr+/Yj9TT7nv18PjvvI+XantQ+/H5Hw/294eQry/Te7
9A81PM0QfA8L7XF9663aXuuin0kc+9dVSrLrF940II4685k/58i0Ih3OsO8F
PGTPiwHPZHn2+P5/OOzCc9qz/CytnszhnotOZP2JinOpjGG5BXHUV+/temfs
0WhMHPFzYennH0MeWdJ45Nn6VQZ7/gt4a5xLy3LMEzwHe3rr+dyP8veonom8
/oZMe42smzOJ4772/jEh6NIqri6NesiyKTlvX3d5T/vRmOdqIfaxPTuMoH4w
33buuRl1a9FQ4vDnU4q0LxQ/CqR+kI/ovkj1LRhlQr/bbP/v8/9+jlWbtb1s
iOP9go751YdvzR5NHPX8q8e7esfk2hHn1+dx3THO0B/Z1Ru1D5F/4+8v8J9n
GM+ebwIOuz6y55tAf/76heuLcdqo6+opdp3JPW/Azp/7WwfO/+nE7VdiPruc
21grp8fta6Puse9EXpek4KnE6XmSqsyCQ8/1iGOen/pzvslHeo8G4/RbUFbY
f7EsXRf4pQVSX4ryEqqJo64VNOV+/tx7L4jjuZEBhS3MRU6j6X7hv7eO+xdx
VGPjffM707h9hP7s9eX7q/W8Ohg/nnzIiycxnw+wzzsJxRVYB6vZce5kn0OA
Xch3enX7esJ9ArdvK7Reo+7K99vQh/+70Mef/V3wSQL15OY/f+US6zLGo//s
cFenCw8ExylU3/v/1n3EewGp8QY3/fLpevGf04C9/Loi9AEfvEXZQbOgmDh/
/51/HYPZ64j2eC9jY9/81+LCYvpd/npH+5Xs/A+Y1/tZrlsujZ//XVbEgX08
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
cV2U03iR43WDyf5AT6bPi/p17ZFMUUL/BXqbGH/NfP+iGzzfYf3ile/bJMU1
g79LMS9QXELhZ5JfJPP3tD+ozQ6jfywGjc5buyuT1y/4j4co3wD6hu9N3Tdh
Z+qDmxwPRPvGQ+xq7HC/IeZlzSr6/Ei5vmtqGzhvnaZQMX9NDHH2+N5Fub62
Czz/tmS3cp6as3Z6WC2D94rvWmV326R8lbJ/ct4tvjj7ozJOW2Pqr7rpMx8p
4u1dN5vPKW5ipPAfYgPjcnuE11L8l/25a7OsTUsV+hByf0BM3qnz8bKcwWfn
q8dHGSrWrY52Dk0bHK2n8It+iVwWNdHpf+jD+gFXvJYq4yrzLzS/Y7Ja6b9t
mHtkY+Pmz5T7+DWrLZr+SLmOnrpPtef1lJoKeaIjddKmpugrxpHROPVH3TLl
PunwlDXxGc8fK+YXs2GfjIYvTlX0W75F9r1iu4cKf7VBQLMFNubVFf8lauzb
EVNVeQo7pk0PtfWPtv+irR+0yaOtf7T9R216q228/H/7U5seautnbXqlrZ+1
jSNt+qZt/GobR9rsgDa7oW28axu/2sa7tvGobbzooX4B6dUjqodreLZFVzNH
fT7v/ILOQRvTPh34KzrvDD9Hbr/21cBEh3oqPkdceqDyfHEj2k8EX93o8L/n
iM0pHghuRvVha98pcJmRreJzu6sOXrP6cp73W9rHAf/Q1GhFSMSQPvXJDwe/
bD/ZPmeakcaX7D/4ZKrHWufJiMehe9V8XrV0a/Dngdf69TEhfww8Pm3jwvp1
yvrA/wEX5a2n9by9STOA4gzgERcvBIhYI94fAQ+h+qd135+dFzOjGp/3nBLb
feKu8Rl9atM+KbjDK00t05HemsbkF4GX5/94OyPmlUa/4PZvM35qVBUHa9//
WJcQE6Gi+mjgZVRvtC7tk0LfmhgdWzKgubXGkPxA8NgU4+KgXmc0jcgPBO9x
YkLT3StaCT2KN4Jf+qHV6YPjBgl92ifi84nhsyqyDuRpVLtsQ2aYmjBPmPDE
+Y+Xrho13dvP5/hQ95P0EOOr4fYmvd/+/k4DPx+8qJ66vPbZZUKP9BDchepd
GpAeYvyOHTNJfbGFsahHegheqLkfnLXXS6jIvwJv+elI7rFgZ6GmOBh42L0Z
LR1LuwgD0k/klzZLCIz82MVEqMlfAm81IiG6c4fnGuRJgju6VeuQmuGqMSA9
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1nHngF9P3xuc983m/Z/kUihaiTSIVWbNXlKWyZacUWb5CZCklSrbIviRr
dmWJUqEUkiJRdllbSCXJEqLl97x67u+P+ZzzvnPnzp2Ze899znPO/TQ586Ju
feMoigaWoyiRfCWNolqSR+n3GunHSj8pj6LfK1F0fCmK9pU8RvIclf9RFUVT
pB+no5d+r9O5btJ/VfmxJeunq3wvyiVXSLbWcYj0OyX3yN3WuiyKlut3Z+l7
Sg7VvXtGbmeh6tDB2yTX6tzRqnOs+rVldRR9onrXFFH0ozreReVHSzZUnR10
7XaS76tsVx3N9ftztdVV5yfr2klqr5uO3XSuieR7km109JbevuT+9ZB+kPR9
pE+SbBfKa+u+H+u+Q3Xf7RLX2Vfls1S/T+z+Ha++HiX5s+71Wsn6iapzW+F2
vlJ5K/XvYJV9pbaOVf1OKv9O5Y/r93UqzyXv13G59I3q+xPSr5deSJ6petvr
3mdIPqnfN6i8WrK+ft+rPtSVfFS/h6k8lZyre22m9tdIr9K5fVVnlsoe0+9r
VSdDqm9nS6+pbzFKvy+TvkH33UL1b1H9zSTXS54a3ltT3f8u6TWkP6j6A1S/
JPlKyc9ymH6v1nGo9EMlP6MslO/BGJLcXfIIlR1e8jh7QNf3l4wk76342u8Z
A7rPMOn1dDysc4NUJZFcoD500rkXJY/VdzlRZf9T/2uprznjUL+31Pkl0vvo
eE/1TpC8UXKh6u0i/RLJ73Q0VJsXSn6j+qN19Ne5mqr3ZND/1ft5SO2dK/mL
fl9OX3TNfapzkfRbJRP1YarqXKo6VdJf5z1Kr0h/i2eT/p+Op6T3Ydzqugt0
jOCRVWca31vlDXK3+YT601nv4RGd7yd5ku7xnPQBkjN0/modz+v3csmBOu6X
voOefRBzUnJP1VtR8u8fwjsYrDoNdO586ZvpfrV0348kh+i+L0mOow3JO3Tt
A9I/kTy+4vtGki/q3BipTSX/UBtDQh/W6/pxKusruU7HGOkXSh6qa27T+T/1
+zDpt0vfWvc/Al1tj5feXPpeKr9A8jqV7ce7ldygd99Ux5763ULndladyxjL
mcfnLZIbdb6njn1VZ4Pe24E8r8q3oZ7qzND4maOynXU0YNyo7viS22yoZy+r
3meqf6Cubamyy6S/UOX6V6kP2+p8XV03RWW76/duie81T8deJffpYbV5ccnP
tjnvTvI/ye31bJeovL70DXoX4yUvKpismifS+0lvqvabqeg9td88cX2+4xL1
50q1+5DkUvVpb76x5Igwhs+QPETn9pG+TOXTVLctz6Vrm2FbJbeXrKgPpzF+
1X5Z+snSD1T5aB3nYtMk38l9/UzJ19TW1+rbccwnHefpmofUz4tVtjvjQe38
onr7SV+oc5eqfH/pX6r878w2bZnKq+k/31plbXWPNdK/V927wvyNJS8pu50v
dO170t9irZCcqWsOl75S7fyja9dJ/4E1Qb/7qZ9/Mxf0u6bK39S1qyteb/aR
fEN1tlX5+Wqjseq2VnkrHT1Uv47KX1X9G1R+vY5Y5TUkF4Q17ErVOUJ1FqnO
el1/Et9R7Q1WeWfpi7lW+inSf67yunShjn/0+3i9q9NUd6We+z31I8H+q24H
lX9b8XpT5LbJ4yXnqP2bpTeR3Cq2LegT7BvlNSXLmdfPWZLPJf52N0n+p/Y2
qPwn1Vmp3x10/fOSt+n+dUqep82kD5DetWIbgH3YUseYiu3GcZJXSD6j6rtl
nrvoTSRP1VFb+gQ944aKx9v+zE3sH3O5yrbwJuk1WGd0/2sAEapXW3JxyWPr
2thrTQlbqv7cLL1a8nrstKqvUTv3pH6Hf6j9mpJfh29xWWxswJrUP/Z3Zxz8
pnp/842wP7r2aNYp9X9I2e9qVZXHWB/pf0s/jTVA+kTpp6j+Hmpnhtporm9w
OvME+6frS9K7SN9Z77EFOIJ5pbrNdYxgvVP9k1Rnd9WZrDafVJuNJV9grZJe
R3Ksjjul1wI7qf7r0ruq7WcZ92AHyed13CN9K8nndNwtfUvJt8uuv6vkmzpe
lt5S8g0dE6TvLLlN5vV6lOTd+n2+9H/0XO9WPJaXq2x14vc8V7Kb+nqLykZk
tiWDYo+bVO/hTNVvz9oSe63BRr/G82A/6JfqbK7yv6Q3zl3ePrOta6ejls5N
17nxKm8heVQYT0dKbhN7jWScTdK5J1SnETgn9ppbT7+76/dWkpPV//Olt5L+
ofQ2iW0dGK4qNobDxg2vGKM1Aoeqfkp/Vb8OY52xjQ0A36j8Zf05rrxpGkSv
SD9aOsPzRendypvgRTRJ+jEB846XPjjZZJajwyWX6MJTdMEiyY9S2yjWFLDA
E+Ar7KnOrVf5j2pjfsVza530iToeV3lDvqGOx8CiZa8XD+lYqd9n6vd2km+H
tYm1aJl+91F5S8kPVH5G2XbsLennspZIf5dvnboO69Q5Km8qfbbK5+eeh0/l
tj3ddVzEUqOHelf1rgRXSH+EuSe9kfQTpHcBj6j/q1T/acnNsS3Sx0tW6/hX
+jjWah3zpd8heaTuMRtcK7lYbXwlfaTKt1Wbz+j3BWrzUp3bU/35TvImnZur
OjdXvAZ8wRxX+XWsPdJfk/wwM+56TeXzpD8qfYr0umpzAXMAW6hnP0HPtFay
oe5xob7Vqyq/T/WuUP1RkvVV/xvmksrP1u8P1P7RudfKCdLPktxMdT5UncFq
Yyu1dY+urYN9KoxL/0yNC8Yw/6XHKj9Y9ypL7qTr71Q7VdIHSn9f9Q4K82w/
1Z+t36/E/t5860cCHgAXLFJZLx0p4zsJGAwbl3j+nSh5f2xMyNxrqXZv1nU3
6Fnq5cbaD7M2Sv+f9FqSdxX2y6Lcz0F5TR0bM49P1o44t21+V3o5tw24UfqL
0kfomk8le+t8VvKa3Ur3HcE6pDpbS/9O+nTpn0oeo/pf6Rk/BZ/jI6XG3Xzr
t5kv+DXSP64Yc55VMhbvyNqq8pNU/2Ldb53KXlKdjer/BJ27WPIN5mpov37F
2G+qZCPwh97NO+rDbB0XssRJDsj9PvPcmKY3413ltxQe+w+ovIfKh4cxPIM1
S3pP6QMr9lUGsRZUG4P+rGvvKDz291TZ8MK+3W5qp01uXEodfJJDw7WDK/bx
rgJP6bhX+v8kz9cxquT+76xrzwHjqs171Ydp2Eb9ni45VHJ/lb8kvb/0/art
B+JD/Zz7O7Dug92a8Vx6DzUk9wvr8obgL4N/wEG3lr3eLmOdKdvOY+/B8GB1
xvOizLb0Zb3f+1TnDOntdH5f3a92yfP35Ip9rmvpk8qHYnslV5RtX8A4+JD7
hjHPOGW8YRdXq/3fI8/Bu3XNpaozR/I3/f4j8lj6PrOP3lTP+5P0XyLPcXA7
eK1BxZgfPH+h5FeZ7Tz26lXWy9C33Sr2H/El4SyaMi+wW2U/yzzpX4KxJBvr
XktVPlD9Wa/fP2bGyM2q7asfFezSMNX5LzLOXFg23gB3jCx77uILX1s2HgGf
bpnaF8aGsE69qzpTuK/qLFedc1Njjj3CHFlb9vrZUOWfS/9Rdb5WeRM92zms
Q5KD1Y+DVP/K3OMc27IU2577+74HfsRmqf7zqb9LX7VzUMV+9m+RMfTthXmV
teDwao+bEYV5G+wGz/Zr5vpTJLcs7LdjV5dn7v/B4Z2cxXvQ2L+m7Lm2usp2
HT5gReTnZd2Gg8HHwj/6QW08Ao6IjKf/yqy/ndmuwKnACfEewAV1K54LtLlY
dR5LjL/ukpzNOsozgq9YTxgnJdvbybHvB5ezo46lqjdM76Ujti71moBvAu+y
T7XnCf7j3rHfD+N1TWY/ZYbkvtX+3vdJ756YwzgSrK26qyK3uyKzPlEy07lb
Y9uj//ReLsH2hzkOrt9S7/CxkufapTq3hX5fE9keLAp4mWsYd6eU/H5HBsw/
PDE/w5xeI3mvjkTPdFi1sfGpJX+bzfV7nupcpfNbSJ8v/WrpvSvGszUqtvXY
/JckH1fZeSX3gzUWnxHf8XMwnMor4ILM61in3DwY/Bhz9QL1aUfJIYxXHSPD
2vNRbv/qWWxJavvfTXJ0wMZbSD5a8XpTJT1TP9+RvEL9LKr9jQdJz6XPYq5K
P0vX76R79E5d9wO1c4Dk4erbZOk75MYy9aVPqzKeAFdcL1lbh6pFU1W+mLql
TUtltErt7aJ+jkk85hh72Ah4FewkfhS8Cv442I75ji/yu9rZsdp2YVhhvDNa
5duUjaHgijbhw7L5ADiPp0LZC6F/9PNGlT+n+/+r+2+vc9vmtglX516DwBhg
DWwF2AAepXW1bfpdmX16MD9rYW/VmyW9q+RqxrOOxiW3wXefE9k2wuuO0/07
wmHoaFLy/f9JbDeb5a4P7vtH+i3Mpdy8xYu6tnnZ6z3r/meqM7PktZWx0lr1
fojsd4M350tvVzZX+j1+UNk+/kf4EWVzTt9J71I2j7uQ+VX2N/9Q+oFl82Fv
St+jbP7sHelty/Y73pK+Z9l823TW6LL5tjek7y7ZveI160TJJervn3xDHb0y
94G1GoyKrfhaZWvx42P/Zs2Cx/0PG6Wyb2NzaA1zPyt80Q5gvoqxZZfYY4tx
tT/8lY57VK+VZCPqR56L30p2lhyQGk/2Tz1fv1H5EZJt1M7d2Dpsc+bn/Ss3
zjxA535iHciCn54bN70kfUfJPwvz72DgvRLbx1sCxkK+Kfmb6tyour2w8YX9
8J7wmbHnwu0lYxXu30KydWz8T/kfqncTeELy18JcwOmF5xn2eTb+VcVj7mzJ
33VuONhC8oDc3FufzPhxLLYoMkZ+JdjtBao3R/VfgH8Cf0jvWtg+Yp/KjN/Y
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
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtmwnYVVMXx++9557hnlcUJZQSDchMhqgQGUKaaFI0igwVUqZkTqaS+ftK
okypZCqZEyGVUBKpz1CZQ6j4/r/++3ne/bx7nbX2Pufus/ca/mudBr0v6nBh
qVAofBcVCmX9n1MpFB7VhcfVb5EVCuvTQuEE9ZcVC4VO4vWS3J+iL5DMm+of
XVUoNJDMf3XtKvHv0pgr1I/iQuGN3NfgHS35a9S/X2Me11zPqD2k/p2Sv1z8
ouRfl/z9oq8XnYl+S/Q+ah0ld5PGP6nxT6l/jPoPSOZO9dfr2i76f7joL/Qc
D2j8DepXNH6ext4u+jLR/+rHvSr6NtGXiv5H9Cuiz9H4LXqW/TTH9qLvEH+Y
+AWNf030eP2P1arEXyvZM/T/drEv0ph71W8imWH6/6SutdTYkxLNL14ttX81
7m3xNonXR22e+rM0xxL976N2j+TP1DPXVP8T8Y+T/NUVr9VlGl9X/ZO1vvUl
8x/xXxT9h+63Qc/eX/R2Gv+Q2k3qV2nsfPFeksyEkscw9hbRPUTvrHusU/8k
XdtZvDs05lnRbUUXE79z3v2Dmu9G8XKePfceYC98ovEtRJ8imSb8NrU+6h+r
tlb8ssb3rfge3Ot7XZuhsYNF7y/eu6LPVr+17veT7veGZJpqvg/Vb1Xy8/zN
O8u8XqxbffF/Zc+Ifky8zhpbpWcfLflO4j+ofi3xK3qWa9TfX/yG+v9IyXvu
ZM3dW/x/xD9Q17po7jEa10t0ojZE/RvFn63/9/EeNH6CZMZp7Pa63wLd/0Rd
qyberRr/jGSfkOzB6k9Tu0L9qyXzAWdF8tUl20njl4p+T3Qz0ZtEbxY9VPLj
OAuix4quIf67GpuJHsFcag+KP1H03eLvIP574vcRvYPomXrnE0X3Fr296Omi
J4ieLHqS6F0lv1D0NWoL2Yuia+j+I1lj0a1Eby/6L/2WwbpXL/3vqXaV+O+L
f5T424k/VfPNFL2X6CXiPSr6EdH1RH8o+m795js4L5pjivr365mHqz9MLZXs
tZJZxHmX/A6ar6eufSF6cXiey0TvK3qhnn+aZFvp2kK9pyGac2fN9bD448Wv
Kfn3xa9iTs0d61lbSO5C0buzPzR+KmdBYxrqObbV+PfFayG5LyQ/QnQjdJfm
j/R/pK5Nkuwr6me8X821m3jXiugmer3me1HzHa9rLbmPrv1H8iPF76r+OvFf
EH++xu8ouq5kdpfsYPEbiX5X/CfFHyC6tujZoieLbin51bp3bT3PUo3pJ34t
8Z8Xf5L4fUXXFD1L9MOi+2ee/0XRjzBe93hP4/pqfDU9z8XiNxT/HfGfEH+S
6HtE19J6fSD6ItF7iJ4v/uOif9OYFrr/dhr/Qebz/lHi51nM2VZ7VvJ7a/xH
kn9C9CzRTUUvZT8xRvRqzfc8+0Hznc1cmnOR+vNYU/V/QJ9I9ly1ndV/RfLt
da83da9DxF+ta2+of4X4R6r/qfgzc7+fX9Tvq2vjRY/VfJ15vxqzQP0z1dqL
fl30fPWv1PijsEca86zkrxN9vuiNomeLHiV6oOg/RL+Ue3/2Yj00/r2Kz/M2
7AddmyZ6htoY8c7Rb8rVn6XxP4qX6toAdANnsmQbh61bLHqh6Csl87j6N0j+
AvX/0v1e1v3WSq41tkjrt3OV14i1GqJrk9W/XvKD1P9T8nMk3057t63uvUHX
zlL/Lcm0KnpNWdtrda2Z6OdFfxXZxmBrpoqeW/GZ4+xdrnav6EcqPi+jSr7f
cj3PwZJfrufZUc/zt+hLxLtU7W7x76l4/JUl73fWH12FjkBXXK35T9b4r/S8
z+l5X9Uz/Cy6De9Y/elqJ0j2RLUZ6l8l+WPFWyn5WZJ/MbM84+qJfkjtAPUH
aO4z9DyXZ36+jyQ/Xbwpoh8VvZued3Hu9/+Zfn9Htd81ZoX4T5W8p4aKd6no
fST/gcY/LfnHRE8WXV/jF4meyjuS7I0lv69h4h8k/hLJP4P+0ZxrxLtO87+a
eM+x99oVra8XpT5vu4vXUM87SON3ZT9q/GPoWvEPFN1P9/sS/SC55jhUGv+2
+h+mPo8DYv++Vjy/6M7iHVjl8eiz/rGfp7vuOUljr9W1buq/mVrfd4ut737H
Jure/XTtOvV7aZ7R3IvzJZkGvH/2i+jmutd14o8S/QI6hTMe2Xdqov+/Bp8H
32eD2gHqj9P/w9SmacyD+Hea42XJjxS9m+aego5Wfyg2Gduq1lJyg/WcMzR+
sf43Fe+82Od7Ser3c37s84rPw9kbV7IvxPNOEf2k5myp/uLIvG1EX6L+Dxpz
uH5De9H/aOwlmed/QnQLyZ8nmdrBp8S3PEhreqbkp2LTJPtJ2b4hPmK31GMY
O1MyT2nut1Pr47Ni6++3Utvb7rH1Z3P8Yck/XfDvn5daX/eIrX/fTb0fese2
Z++Iriv6nNj78QXRbId2se31S6L1KIXTY9vzV0VXE31m7P0U6R7din7HvGve
35tFv9Mu6tfXb7pF8g9J/m/xf9T/DF9MbaL4I9VeUf9WyWwr3r+S7yB6s67/
JvnP0Lm6/hl7KrNN7SL+PXqouuzPxLqQd7xFz9Ausz/xtsZUtLanZ/Yn5ovO
RW/Gzhdtv/fgLGR+n9N0fQv6UP9L4nXH5xL/NP2++ep/rOuPin9Uxe+Oa6eq
vwk/Rf3Batup31TzTUTfqb9Z8nPSra55oUNs+zk7ddzSPrb9fFm0fkKhY2z7
OVe0/gqdYtvjfXWP+zT3jYnvX1a7S/QCyUTqL+Od43uJPkX3ni75c7HdeolL
1d9T1+4T71HJbOI8xvY9zleroxt9rGv7xz4znJ0rda2z1vZStT90/afY/ir2
fHvxjtNzDCz6zCfiHR/8r1fV/4T4RPRU8car7aP7H4wPqf6ZktmC7dH4h0Tv
jc+m/lyNGa15LxI9Rn0Wg1jkGuI39Q8N/uKs4N+dgY0QbyM2Cd0W4p8HQzxx
WPD/ngv+QZ0QP90f4iv8a3z7fth57YfDg/59PvgP03T9b80/mzOm/hmJdcnR
Wo+hxDWZff+Lda12xToEXXKErt2sfiL5XcS7Wa1J6piD2GMn8dsSWwR/8elg
L5al1u8Xx7Y/u6AzRN8X4snawV8YF+JT9O1qzZeqHVaxD8D+v1f8N8Xfktr/
uzG2P1Gb9Y28xqz1mtjx8ATG6FlXiv5V9Mmi14r+KvbaduJMQ6f2f4bG9qd+
EH2S6Cti+5c/pra3V8b2Rw/SmBM19iS1g9X/LLavdTT7QfQqyTcXPSS2fe6o
5/+06Jid2L19Zn/8HWJYvZ/9QnzxVLCPj2SOLYlZ61T8DnmXnIk7xT8YHz6x
/TiZtcus3zhDnKXjNc/3+H9ak8m6XyNdu0W8eZI5MXMMRCw0lj0q3l4V98ep
NVX/iCrv+0lh/YnxI/V7R479Z4q+XfMvFL1v7vmxbU+zh9TvqbahaJuKbT0j
s+3arNZLvCw1drBA4x9OHbMRuz2ttkL93SU/SmMnhnjs8CrrPfTfoRr/gmT2
xl5I/kv1GwV84ZEQnzQMeMWkEK8RAxMLH64xrdXfAxss/sMhnuyna7H463Tt
GWKhEG8+GeIrfDx8PWL2tqxBiBefCPFd3YBnPBDi82vAIPC9Jb8K263nvzDx
fjxE99rMmhSsM9Ad7fBHsQ+SaSTZxiHenxziB34jv/U7bLb6p2WOb+dhZyR/
auZ48S3RaZXXez7rgW8azt8xoi8Sf01uHYou3VP839G9FfuqX8e2R0sl31L8
QaJXif5EdCvRF4j+KndcRXx1aNE+GP4v/ub0gL2clxlLwoZgS9aw/uKdXXA8
fYye8XONa4y/JPob9kTkGGaY+qvUiqI7iH+b+jMj+7Loqy7qr2Y/Rl5D/OWH
Ko7V/xFdqBgTAhvCRpyo/sbEvjPxzCjWVL/nAPX7qv+Fnvfs1HvyKl37GV+k
Yt+0FOI79jn7Hf5Q9X/StSG8j7Lj9Q3E7eJdw7nDFxR9luirRa8X/Yfkm0bG
IMAifha/h/pXib9O/I3i78u+UuucOU4lXt2v6Jj2z8TxwVb/kj0NrqJ+H/VX
avynxEGiLxS9WvT4imOJ/4n+Mbd9xD/ZQ/P/UjH+gS/9V2L+S/q/q+Tr6Nr1
6s9WayD6AHS8+j30vn6LjbHVlPyIiv3VlsQo6vfQ/etE1pmr9Ox7ia5CX+ra
FNZCxDT9Xyq6Vm7M6lP1jy8Zy/pRc+wa2b58mTq+XqD7HiX+cPHGZe4fSUyF
bUvcBw9YFxuraBnwx51E1wP7LPl5/4o9nndX0T2+1fgO+Ehl7zn23jmp14Y1
qsbvrNhWsAfZi82wKeo317XvM7//egFDvCvsP2wJe5y9fhI+TmR9cTO+qvp7
qv8iZx6fIzVWC8jL/v5C7a+SMTzipzngGLwPznvimJ3YHRlkP85sfz8Rr16V
z/jkEB9w9qfgE4i3j+gLRH+n+/Ut2WZtFH2o+K9Hjm9fFX0xNqBknYF+Jj68
QPzX1HaQbOPUsS0xLv7KrZljDdaQtcQfA4sDv6tRsf3sIv4IreVajV8hupno
xpz5gH+eVXIMwPoco/nmqj8bv1T8EZntJzEMscyxol8RPUf8SPzRutar5DmZ
u7X4r6r/svjlKv9e4t3PRe8kugbrqWf7U/OdlzjGJdZdi0+cGfscWDLGMTz2
+0H3XKf/3ST7s/jnl4xZjBT/3MS+3ybNNzCxP3KueDeI97N+by3Rd0u+mmR2
UH+MnrdPyRgEWEQT0YdGPvN/VhwTERutlMwy0d1FrxC9ED9W9+8h+nPRHwY8
8CzRK0Uvio1vLso8FoxtecU2Hlv/uvhJlfULsWgz3W+z+iPwHYI/8qXeYVvR
w0RPVtsFn0Uyd7JX1a+j8cdpvtdEzxUdVzmGxd6/gNMv+hD0vbozRP+j319d
4wcU7cMRLzfDZxd/JrGP+Ju1BgNEX4/vnfvMc/ZbEYSxX9jzJevAT2LvWfbu
gbr+XVjfsSXHrDXV78SaEOOF8cTnDdTtqrGf5z7PnDV8wr8017fin67+MPG/
FX+46MvV2mh8kjuevk7yxeBvfCNeO8lfJvlvcutAdEs/ybdW/2tiKPw18b/O
jWmODHhDCfsn/qkiLxH/f7n9Q3QlOvOHivG7UUG+UvGZ4Gx0j6xLXpf8btg+
jV8hunVsW4JNeT+2v0juA51HPqKj1mNF7PiaXMw26Imi/cdn1O+T2vbze/nd
n+na6cT36APth2q6x8jIvgs+TAfN/4Z4CzTncvHaBHzyNdGf5o5ZiV2PlXwJ
PEFz/qH+CDBgzR3n5p0Q1rer5Fuj/yPHd9WxN3q2I0RfqLFz9L9ryT7UIPUP
j72f8WHBU67IvR8PCf5zp9z2fHHZ9u/M3P7LZ2W/j//ikxedY9ika2PRM2rD
sReZ4/U1nFXd8/nEvhq+yooQPxCTkDsbUXCsQnwBrxp4CbY5cawHqACGUV+t
qP47wX5yxjhrxADjRd+UmNdYba54yzVnI/XfLjp+KsfGMtcE/AB/CluAz3tM
xTETuTh8WGKpuySzGB7+f2I/En/yQbVBScBnio4RwELA2MHaG+rasszxHtgO
Z4r80xUV21PsKrmA71PHtn/gY2b2af5X9p7H1/kqse/cTWPWqN9arUbJaz4h
8ZqytmAg1/CuM+cjwUgWqP9u5rN2BHswsz+2PnbMQeyBj7Sm7DOE74TPiH5Y
mdiXXJdYXzfTtfW8L83xe8E6fR22KN2qFrbmiLqmzn+S39o94Mf4oh1EP6fW
NLX++brga9zj3di5E2I2YremibFo1nxs4tiMeHtTOF/VEsc62ONLE+csAUiI
EbbPvMas9S6pc387prYV9+jaTurXTo01jg80mBHY0X0l4xnkjFqF5+mVGe+A
R07h/cT4z8Ml52QXJc4t3lsyfnNCYpvE/e4Nz8Dvaxb7jHPWwR/H69xNipyL
5Xl4Nnxq8q7bVPlMYlMezJ2jxJcjh0EuAx8MX4xnAH9qouvHie6JT5pYH7FW
5Kz6JMbxwfOxP4MT55zJPYN51Mzs4+DrnBDw9Rfx14q26Z/i74j3U9GY4JDE
MRi5UmJCYrOdE5/NQ8RvoP5/Yvt5+Htgd2AKaeyYE6yBPC352s/Vjkqd/61R
9J4hXw7GQi6bGBPs5ZTEWCQ5TnKd5NTI9YHJkWvDPpPbAfPFvqOj0dW7pc4H
r058drYQE5dNo/u6hvME5kMumZgQLAidh+57PexHdBC6CEx+ta7flDkWIof5
APgY8ol92js015LEuTgwwsX0c/tPB8fGD8HU90icAwBrx2fjvfH+8LeIIcHq
wXSILb/V/Q5Dl5WcbwKvmJE4xwsWRU5u18QxI7k6bNg0ja9RsG3DB1hbts+I
b0D+/STNVR9/NrUNJ7cK5o5t/xWMpuwYK8psU5eXrfOxtehTsKjO+j31yWWJ
/33ZMde/qX00codgSPhu6yR/RNE+5XOZY9xFZdsUYt/zwK+09xexfvod54Kp
Rr4GDwyK3Na5Yb4ng71sFvBCMEf2x0uxsUj0A78NH3BQap+oLme2YF+pKjFG
B77WsOIYdV7ZPg2xKzkNcq3kKMhV/KQxLYuOoeZwL7Ul4h0T7DUx4ltl+xDE
jthIbCU5EmJHYvwPy44plwZ/oB1nFTq2fQcv+CA2Vv1OZl+FnBa54L21xkck
joHGir8BzKzsmDhGP6m1Cbbvy+BzfV42JoEvRoxA3IhPROxwb8B/wKDAorDh
2HIwCHwtfLAVZce8+GY1K7Yl2JYjqUcQv3/kmJPYE38WXQqmu33F9pf9QYxL
rNtRrU7JOmQqup04hfhe7bjU+T/29iH4FKlj/K/L9gmJ/d/MbBtPK7oe5waN
H1N0TE1sTb7km7J9ztG5MQWwBWJcYl18WnJzxCz4un+K/j3spx0y5wDak+Mr
OzcwJuCnYGJgYxvF/61sn7pG5poLMO5BRddikNPqgd9RNB5HDuO72DaX3MYB
VY4BJqADMuf8wc8/CPa/juRvApsI+NWNmWPvv3XPpsRHmbFPYpy5mfcce29x
sCdgDGAR1FyAPexXZYyddwzWB55Jzgz/rnHFGBRY1JaCcyXkj8izkG/ZvWId
ha7CByT3cVjqXAAxF/EAOV9yv+R0y5kxRGo77gr3IyYmNt5X7YvMv4nf1jwx
VgfmDj68SmOaVBkjpPYEzA/sEEyO3D4YN1jdOwGPAKPgnW5KnL+lBuMb7Kqe
5f6i77lL4vUlN9M4cn3E47HP/8SCcysfS6aNxtZgzfV7hmfee+jYbzLj9XMK
fp+8VzDIXYP+AJsEs6Q2ZFLBWCaYIj4h8fJ3mffnvKJj/tcSY6TUtoB5gp2C
oVLrASYNtvpKbHvDehML7ltlH5X81jYV67hmwR6RK8ly+4P4hdTvECMcGvwL
YofLdH160T4yvvLQxFghMQj6hj3F3iI/Va7YnpE76SE6rrjGiDoh8AZqj/Af
wfa6hf18teabW7QPii8KXv2B5PuqVXJj7OSiyaGAvaPP+mBvQ7z2UOo8Jz7x
XcT2uf0l/DTi4dGa8/2iMeNG6h9Rse+CD/NhZvsJLgo++jW6L3EuBR8CPIra
Cu4FfgQeeZX4LxWNabZPvaa9Rd8de62pfeG34w+Dd5GH5LdynsADs4rzhbeq
v0+V14yzMzqsJTVvl2nuOyLXwuEvgc1fHfQd/sCxevZtxe+o+w/MrSs5o5xV
/Ok2BetwdDnxFLUTA4J/Tw0HtRzYAGzBT2XnN8kPg5eA57QoOkdMLpqcBflx
zjxnv37F+Sf2MrqKeGprLrno/Bk5JGoPyGGRWyImR3fdFlv/DcmMlRITEBtA
N0ZW11ZlrlGhVgUfCF+I88S7oebh7+CfgLMyx5eZ8Rh8NXQOumcX4v3IMTb5
mH1j5zrIAZO/P1ZtStE5FPIqu8fOnV9OPBC7ZpDaQXzKhZl9cHxxcqrU1+Hz
sn/AYKiPI6d7UGyfjFwvORhyYfcEe7hzZt3GHqkCH8+cfyIPRT3JYYltEXvq
ysQ1X0cHfXx2Zt0K3o+O+lv8oxPXy1CTkabW1eDHYM5gz28lxgr7h/iqtua7
M7E/RD0O8Rc8amaaJc639SsZc/wucY4H3BwMFpyd/PP1JetMdOe3sWtdeB50
JzUv0P8mrv2iJoj6Qmr+qBWiRpRaUWzgtplrSKklJQdaPbNOQDfcGsagS7BX
3JN8N/kyfBty/OT6Z4v+Bd3FHqo4ZiR2BBdsHXxn9g+/ifwhMSKxIjrglsSY
HLV65GTA6sipkqt4vOT8KBgdtYjk7MHuOCecl0El5x/JpyJLfEOcc3zFtZrk
kNtUnJ++o+QcRA3iwdT74TbR1VPXLFG7RA6VQjpqrqi9Oo+wR/R2qWXBu8Fs
0cnUVnaLrKvhg+eOCfORH+XZwDx/0fNMTF1XDGZ9d2p8C/2FHqNWbEBie4/P
ST6cGhv8QzCwcmqbQ+5tTGJbtD4zlk5MQWzxrMbuGRsjxP/F5pJXJb+KLSbH
TS0cOfjDAt4BlkpN1thwpu9JHP9w1slxUysHRkXum5iP2A9MfSf16yXWDeC/
y4LOBBcCH0KXvpJ5v7PvqRcjJ0/t5YyCc/UvZ84ns7fBlzkD4AFNw9kYlPts
UzdRV/QBifcWmOtw/IPUtcKnF10vQNxM/IzNpx7xMbUfi/ZJ8U3BEMASqEkm
HtoxMXYERgE+upPud0tkG8Dzk19kbs4vtWXkCA+MjaGTO6TOg9oObC62lxic
WJyaAGKPtrmxoVqJ46cdkq1pta0YFdeo+UG39wz+LzVg1IJRs9BZgreLnhbZ
5mB7wCDAIrAxxJt/hXhpoMbXCvHDlsT+ErbkKWLygn0GfAdifvIPcWIs4O3M
98bG4B+yf3YN/g7v59TE9cnDxT8N3abnWSa6ecAXb8kde+Bz43v/gU6W7IkF
41vUn4BNgknuie5OjV+CcbbRfRoTv0SuqRwC1p0bSwRTpP6nmLuWgnoT8qvf
V4z1nhWw6kv1/5jIGGxf9W/NjTdeGPxP9hx7DzyLfMEvmbE9MBTyNeh4dD3x
ArWE1NhQq0qNFLU36PhV6n8UW/eDEX0pekls7Ig9yl7l/Nyeew+zl7fqa+LR
inMv5GDAp4ekxubB6KkDoUaMerBvWQON75c79iBmIXbpGPY8NYYv6d79c8cy
vHPe/crMWObToncUPSI1NswaD0u9hzmL1IWzt/HZ8d0nxPZH+uY+P8Q8xD7P
Su6UkmvOqD07T9duFn+b2PVA1EFQD0ENHbV0fXLnUqnZp3Yfm06txdrIth7M
ejdscclY9vTEfjL+Mrky8Gywc2Ji8G7qddBV1MSy/6khmxnwCmrLqImitpga
NWqlpob4vUHBeAZ4FPgymCjYKDVu80N8/1bwOfE9iWGfC/lBaj3AdNFn4Ofs
7SPxUVLHN/WYu+xcIDlXao1Hhnh4Vog3OQPgN/iz6Gd8JuwZNYLUAjcP/toL
AS8BnyE+p6blqxCvk8ugJmZ9wFOolaGGhtrkkwuuraHGkNpgamyoPUSnoEfQ
J2A11GBRi/Ux70f8Dfgc5GYj2xt0KLqUnNTemX8Tv40av5ty15RRm03NILVm
1OxRC1o32PfTYuNN1QvGC9FfxO7E5MTmEwK+BB5FbeB0tY2R9wB7gRo1cvLU
gFO7Ro0aOhQfgnob7CmxDngd3y48nzp3Qw6HWsenRA+OHMNQo/RVZnyvp+Zo
XuU9uk3AI8nVE+cT75+tdq2uvxfZ92d8h8jfe5AroOaW2tsZqfcuexj/nvoF
atmoiaY2mm8s+NaCb2r43uOS3Pm6JrHzpXzD0Tt1zT7fdmCviRVnFl0v83zk
2pMu4Bk8l8Z3LxhTA1vrlXtvsEfA1nrmzheA6YHtoSPB3ldG1p0vRp6LGmpq
qbvr2ikFY/xg/T1yY/3kGMg18A0Ra7k0+GdTI3/rwDcsj0feP+xv8A5wjw4a
s1/BmBbY1lm5cxVgNmA31JDgn+2j8Y8R8+TGvsD8wP6o18J/xo8Gr+qW2zaA
UYFV8X0NawNmuDZzfhddjU8A/rEscq4fm748ss5Gd58WOffeNTd2BQYGFjYw
cr0EOgxddoautSgY0wTb7JIb+wLzAvtij7HXXpbsXpy9yN8DYWO/j5yDx/8l
Bqb+5cCKdfes4E92CTZoL8m21bP1zo2lgtmB3ZFfB+ul5h48lPoMcqv4yOCL
nXNjh2DAYMH4q8wNBvmj+KfkPmucObDeU3OfLc4YWC54Gd+uYXOxvXwvAhaC
zWb/XSiZe9XfMXa96mC1x9CNolkodABY1ZTgX1ETQizRIHL9DjlU/E9qvqkn
uiC37qgeu16VHDi5cDA68u98j0HtNTkLaluou94vnP/h+j9UY6aJ1zh2/QH1
PPMKzoGQC2ENwWMuSb221L+BzWyt0QDv0Pjn2G+x8/GX5653wCfDN+ufuvbn
44LzuRfnxoLAhMCGL8r9e+vEzq+D0fE802Njd5dH3sv4cHwLxPcSi8L+BNue
oGu3Fl2DQi0K8c7S8L7AjqnvAecA73hP9MTItSCMeVj90yPXrpE/51tD8DJo
roMNXlZx7o6cOfXn5NOx6eR4yfUOz+17EtMS256TG4sHwwfLbwceUzBGDVZ9
em6sGswb7JsaDGwC8Qe1GZfmjhWIGeJQy0Es3yj48+1z21ZsLFg577x6wP/A
1/DR8NXI55L/4R32S51P591SHwHWgf+Cvw4ex7cIfDPEt0PUw+6dGJ+gPoU9
yl6lBplaa94x75oaCWoxqHH/Bb0d2R6AV1ObPLrg/Cf+PlgMNZ+PJsZvwL6I
yednrqGiLpL6SGqrZqX+bhHMCvtQr+Ja4g1hv43KjTUTQxFLjcuNH7UM8TTf
PHwU8jd8C0HOidwTmBw2iTPM3qBGh+8F+QZiScgXkG+gJuXI2DWH1KpQc3hA
7D1NLSI2DYyP+jFsHT44vvjUgvEQ8s81E9d38O0X/jpYCetXOzYGBRbF9498
L0ZNMv40PjNnDIyfmnrWkLWkhouzPiZ2PRI1D8Rb+KD4onzjtBp9Ejn/2yF1
LRgxNfXe1Dt8I35XXTsYW6Rrf5Zcb0XdFTVBPSN/HwkmQA0W37qcEbs2a3Rm
PIwYkliS/AG1dHzDwrcs4Ls1An4MPks+mmdpK/6yxPWJYIHUlPENIDlHco/E
gOwHbAxnmZwT9UrUq7F3sNe9g39KHol8ErVFfAPBt2h7FPxtBPUeCwrW98Qb
2PwmId6mdgqdhm7DJ6DWino+7F3dELPwDQY1nw0L/jaD3Dy6Fp1LLR41xueK
/rTg2mPqKzYGPIJ6CepNiYXejF3Lz/e7YLTgh9QK8Zv4bQNT12bhr1GzVQr+
GPgCNVerCo5t+EaEnC7+L9+OnJ+7fo+1wJch2U+80j3EW+CpYNX41+Bl+Mj4
yuQnt0uc4yHXAyZO/SM6Zc8Q74N3g8GDxZMT4nukJ1Lbcmz6qNQ2Cds0peDa
KL454VtKvrHhW5T9K67FoCaD+mLqr/sntiGdAr6+V8A3wM/Bg6nPpIYB/I74
c3nB+pT4iG9Y+LYKPJV6jpvUriO2jfw81NA1im0jqK27L3OtCDluct1jM9eX
lAO+DP4HlgimSN4EG4OtwQZR2/V/mzb3/w==
          "]], 
         Polygon3DBox[CompressedData["
1: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
P5uivpI=
          "]], 
         Polygon3DBox[{{2579, 960, 1009, 1882, 1499, 2233}, {2188, 1421, 1512,
           2691, 2061, 2062}, {2572, 1923, 1589, 331, 902, 2596}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmH30l/MZx+/v/bu/9/29v9+pn02U5WkxKfJQEmpb9atoeqDW0ERNVh4q
p4xzqJSyLBFKoTwvhIM1YTWJOafG2Iqap9qOh0yYMJSDvV/e1zn743Ou677u
6/7c1+fzuR7e1+eAMRNPmZAmSfJRJUmaRB/Mk2S++LNFe2ZJcrVkvUQ/qibJ
saIPFklyvMZ26dwlnVSyN6XTJHqRxhLxvxZdo/cTNPYsk6S79N8Rf4f0Z4uf
Lp3rRU+V3jWSnybaSz/vqbFcxnxe9X/7Sf9VPT8lnSkaLeKniu5Rsew7TZaP
lt4+onXRN/S/EzT3qEaSDBT9t77pLzpA8nOk01p0tWQbxPfUGKd/dde/XpIN
d6aekzUs1/PP9Xy/6CrRFaG/VWOURlXjisx0lug26XwmfrbGdeLrTV7nPvpf
O8k21pKkj+x4S+96i87SuFDv54r+WDptpbNBOtP0/hiNb/SuWXSL5GM1Nol/
WeMCeOlv5lm01PeZZB9oHe3FN4v/Qvx88XXxO8TvKd1tFX97em57MtGTc+/l
19I5S3x78TXRtrJ9hL4ZpjFYY1DqM+5Y+LzGSOcZyZ7WOEnPqeRTcSLRboXt
7S2d8ZnP5VzRl7S2SaK960mSi3aUvBAdKr1LxQ/Jvf99U9v0mZ4niv8Ue0Tf
lWxy7O18jQZ+k3vfUtFHJHtY4xA9rxddpzFCfBL+WRE9XHqLRR+VjddqdNX7
/SW7RuN48R1Ft2psk/5m7ckW8a2lf690F+Rea3fReyQbrvnvFf26yfN/I/qs
ZI9LZxCxoXeHSH636If6ZpzefSB6m57HiL9d9DHtyX+k84zO8fHU8mMS+xrB
iL8xJ99+KtHD0t8u+nTp8+kofpb4TrLvZ6ltxi74vRP77/DgZ5e2Z7Lm2CY7
Rkv+jujLmf8Jvy//SX3Gs+v2o6ENr+nZsKGL/jUs8VqwG/tXas6d0ukhm9fx
X/F/kf5O8YdJf434Q0X3zsx/X7SLvu8jvUtElxIfFc+FT+FbLcSq5mvWuCxy
BHadnvkc0Bue+D16t4jflln239z7wzl2Kb0fX8Y+1FL/q5/4P0YeIP731xzP
Rdw9qG+miT5Q2renS14RXVXx2ljXaaXPeVfN+5M2+bmzbBit94eKvlBav1L6
22qTny8qnUMK0evD5htE92ty/GPDbXo3RrSu+cua51ysM7lV8kni59QcB8QD
eYa8ernm+D35OfI2+fva0vvRonPsFLZh48b4ljjqkPlMDxTto3EzcQjV/4Zo
vgP07eDCMftK7n1hfxbIhqMlvyp1/tkq+S7x4yUfXniedlXnujmab4Xo2vD1
p0RvyR2jPXPHyK8kf1+0g755QPKZ4i+pen8vFX+h+JXiV+TOMy9Kv6vo+Kpj
5mLJZ2isjW+PlXxZxfl/kp7vEv941IgP9e1XoiP1fKXkD4h2qTp/k59PyV1r
loseUdg3jiyc/59PfX7r9f3roqeKLqjbR/prr57Mrbc0dz0hr1Gn9ilMT5C8
TeoaSU4eWDq37S26V2p+nva3a5PjCJ/pFWf6I9EepddyZ+46wzlS2+ZGTblK
tJA8b7KdL5b24TtK15MzKvahVqV9Z6HOa0nYjO0fV12vqds/iZpF7bqpbn2+
o0ZTa6g5nOMb4h+NXPqC+NWirxeO8UV1+zq2YMMP9NysdQyuOz5vrjhed9fz
Jfhg3Wv4rfh+dfsefoUvvir97eJfY+9rzvdrSu/tEsmPE/1n7pgnLy7SqGqe
vXJjG/LUiYXzG/qP6dsmyXfEWX8RvtCrYXvmSXeI+HOlt0nvThHtF7gCfPFu
4BzO66uqcRH4aG7p+rJUc6zVfJ2IqcLxOEn8v8JnOAdi+qyq8xX158q68dgv
JH9D35xFrEo2q+56vq7u88F3iMO3SueN20WHZsYhJ4veHT6ML7+X2uZ5ej4v
s8+fL3pB6Rg5XvTSzH51meh9uWOQWGR9a2KNm8Jv64GD8DEw0Iyo40PD58Fn
4KjzSvMnit4fsUbMsSfEGjF3ht7NEj9R9O3U/sbz2Zmx6NjMZ8pZD9V+7JTe
Q6nPnRyFHF8oI7f3CX/Cr6iRR1Xsk9TO56MuU/db69vDiCfRzqnPnv2ZoX+M
lPyhwjHGnpA/JubOyTfnXjcxRrzxz6VRU6jV1MpBEQP8d57ou+DOimON2k79
pb5/N7N93wMLlbaduPlz1H3maZW6fpArn8u8JuZMY4342e9iXctE26XOgdTN
Dqn1wDfUu5HxX3Loyqi/8+p+/0HNfol/zhfdV3P1lXw/0fGl6+4E0XrkfHI/
OZl1b8mch8ESYIpzSufkltLYCIwEFqMGshb2sRF4CVwxoLAfkrPBvewVuJb8
Pzxq+8LMuOBG9qw0/0nN/8aGG3Ljge2x9nGl6zv4ZH3sIbX77Ohx6BPA/23x
98KYcX3gFnx/a2qfJgeCM8GbJzWMachp/TPrDMjss/juE/r2HrBVav/+KmrN
66WxGpga3/xp4TwGliafgL3B4IMb3t8bNf9I8XPA9HXbvj4wbYueZ+qfG0qf
GWdHPX0y4oL4mJYZH0wHgzec4+hBjtW3R0iWl6431Br6iNUaA8Flev9xxWsh
Bo/U8x+0pzP1/tOa95y97yT5AdIvROdnxurXZc7P32JA6e7W8LmSq08Tf2bV
OX9z6dpBTiCH0deQx8jHr6TGctT2v6XOLf3Jw5r76KiP/4ga2aNwH0SOBocR
K/gtcT06MW6i1lJz74rc/17kQPqTsVGjD5L+CM1/vr7tKTsX567p1O3XonaT
O/mWtR0j/R9Kv5Von4bxNPmZmlFGDcF/N6T24T656zP9L7V6Y/r/XhTKWa+t
ub5QZzponqmFa8d90YcujxisY0NpfEjOJ/fvkTm3tRGdVhhHv52756LXowd9
s2bcBf46OLOPdxR9v2ob6SM/rjkWn6oZAxPjG0vHG+e+SHQluC3q5qzof2dn
xoXgQ+psS+a46Zc5l4Lb6R2pNfQY7DN+TQ4gp54f9egC1tow3gLrgnPAp/XA
A+TaKZINiRpHrbu6sE+A6yZn7h+nxLqOEl1a2O/Imc/FPQa1i/54Run+Ft/e
LXNstgrcDt77sjTOB+OB9cDtPYjz0vcF9A2Hxt0C502O7yr5HOl0y9yvkW9/
w55lruNLMp/tHaK3ih7ScG8JrriycK5YCF6l7ktnmegZme9GRkWN2BC5rXvD
uIGe7tboK+kv99d+Tc28b2A2MPKghnEmtZia/HzpfPdX0W7S2TOzneAZ+u3m
iK+LwQSix0nn6MyYnzudemACcAj3C8QxZ8I9CLns/YrrEHkYPEOPXmkYk/CO
O4fLS/dk9AvUMeoU53R7xXhyl/gnon51jRqep/Z1MBzxzJ0PfT93FpwftYw+
oE3DMt6Bqw5KjX3BW2Bd6FGFMSv/oqaTb8DA1bAdO5cnzknUFPIS2HlL1KYi
7jFqon/KHb/UoLURR8RT69T+sytwAhiF+CRX16ljdeebYdFbY+8jYTP69Ktg
goNTY0LsIQ+xdnIRcc3egDfpueiFuUu5O/AAuACf6hV3a+zlE4EHyPnLUt87
7R44BDxyXuH8eXjYc3iTMRa5kJzI/cyGwBNgCXwcvntgYN5zt5TEvRB900mZ
6+KgzHcx4AHuDkfE2W2LmsGaqJXsd3P09dQiahK1FQwJz/1V+9Q+h78N01yf
iw7PHNf4Ff5FHea/1O8y7gm5L/wktT7f/j21H0+LuxX8C9wCZu8c9WJV4DBy
Fthtdax9QuYcOzFyT0vsD/0Wdwr08uMy/5f7MHwHX6T2kMsPTI1dyB/NIR8b
uPeczDG2KeILP8Wf8CUwObHaHHHTIWKHuMaXPi/8r+aoQayVNYOxfhnzg6/J
p9/2jNr73tH7cwdQibsLeoq3I++hw90kPOvqGf37TbnvxcCH9OnUc2wmR4Cf
uXv8pGpMSlzhw/S/yOkp6DfJ84+FbptYLzl4v9jDvuF79BQTo1+gP/r2DCPn
TI49Yc6lsb/sLWfYKbDZjoglbMBvV8U5rovaCp6kfncOfXo2vuVedE3YxvzY
2oh1jYr8fKbo/wBEIOdz
          "]], Polygon3DBox[CompressedData["
1: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
qXLHi3yLyDE7uSP3Z7zfxPjbjM/vJf/lkvpc38vJd2D8zk64+mjsl1TZg3vx
PvTNd2gDm3zwrbONdagbjiRXerQdvjqiF54mX7sf/Zg63xazxW73J0cVw5Zi
OxJ9lZwQfXidGmauP9jkx579wZT5DX6NYc7sMhjxZDf5q60133j2Pr5f5Yzi
mxxBruD35MPWm507qY+r69QU79oaZ61xjtjonW7S8I/XWokf48hctD6bPx+S
R3Oq5K6YOLLKnYiNYoZ39UKd2Diw4as7dXJX2wwwKfNGvKhMzfIt4N1buzbE
ZnQV/rK+Fc4t9/b9IH+QQ1tPB/cFW71j/SzGqr+O/mvku2mbtnMG+enSKvgp
JolNZ1XBejFcLPebfvvFBq98o/hWWel7pwqmi+3vot+C/O++fEubQ6tgoFi4
rvX/t5aye3Av1i9jQ06/ppv5ctWzm/2WVXw7v1lfDFjenM1YvrRKrTGfzKtF
VeqHmC/2T6/yNrYG1cjLqsSuNez+5n3l/e/YSS3+dpXa/XHD12+if7MyNdv3
jz7SV+JVuxOOI9eZ1nC356pgkfk2qZM3ud+XU8vXzXHr34Cmnh3Z5L5vCN8T
F8vp5ZJl3mfbVMF+82FV875ewu8VZfL0pTJvUfmf9dY4NV4fa+rd5Dpv3fua
euj55aZyQrnhoY0/1zfvAzFCLDMnzU1ryrW+yRv+bXz4LfFVnJVPeleecXrj
L2NhblOzjS9j5xrabOSTy/hSn56CfHo33M+zmfuLu+Gj8tLde8nxQY3vzH1z
0tzc3neeXK+XWi7HketcWOZb5o959JMq8TKniVf1lQ3/MFd2qWPvvAn+N9FL
/Hs2a4n1T1/LyTpNPZXrub7c0hpoLbykDPf0Tezb2JpymX7qhTvOauLL9476
sOa/hT/W+a9gYsNPrUHWIjmM/GurTriq9V58kbPIlXznymXksPJp/yOS24o/
znVP8oe763BVbbT13St38T+ewe6hzNvHGra8DMY7dkUV7Pc/FDm9HP5F5v+i
l/eX2DepyT/jyxg0Fv3PZ2mZGDVWj6iDX0ua9axX/je1kzHeS74aq775Hi2D
+b7npvUlHvTPIt9ZtI2w/y8C6mx/
          "]], Polygon3DBox[CompressedData["
1:eJwt0l1ojmEcBvB7r3cf794yDhgiUxRlm5kxXykUkan5yNqwfBwQNinf29oY
K2S0fM0kqx3IgaQ4EA4oitQoYUhiBzggigPye3p2cPXc1/X/X9f9v+/7Gbeh
rnJHIoRQBplwNjeEwuwQJsN0vM/3TyqE4kEhpJMh5MJdPJUTQgNjEV4IeXz3
aQXWY2FBRgg/8A96E7z9tF9ZIZzEJ8q8yltDq4Zm/Ba9kzba+rdBWuXdsG5S
b6c3maV1YK57+Cj6SHgBR3mrE/G8+fg03qe0CdbjYQX9Cd4CFfo+4v/MVKJv
PuzRUy73BAzFK2BIdCZ4Z+aqdAhveBepzzTbI/7XeJ/zTXTOCvpyuMDX47ue
b478uVCPn6L3y/kMM3jf0rpht76L+MtEvH+bvOJkfKfR3V6yxzneKWol2bEW
3Xt03uF6hsEX/uu0IfqO48fgoX2qzfzJt5ank3YBGmV0RVnWa82dhK/Os1zv
TPo++t5kfAe99njGm6nnEG0hLV9epnUSlqm9wiv1dfhOhzRtKz4VuvgOyCym
/zTfYNpm2jRaKZwf2KMlen84TVtmjtn0WdGb49/Ndhjv4C+L3hXa7HGN7y+U
u99N8hfrfYv36hthj6X6lsAd2nPaID1XoUFtDG0XrVb2e9pKea2p+K6j+03I
yoCO3Lg38uyUVR/9aznxP3TTvtfwUe6+GV8TvZOsIr4HMh7jZ/hz8TLopeXR
CvRM4unmvQIn1Wroh+1RpZaAI5EP0hnxf9+orwBPZcdnL8WnJuN3+5YT/09b
rPfwnhjwNqgfhG4Z5fJvZ8XrA7T9cFzWNvpq61XQo7Y9Ff9DbWp1+i/Tymjr
0vH9tuMb9c7T8x+s1Xra
          "]], 
         Polygon3DBox[{{2717, 1917, 1950, 1184, 610, 2443}, {2638, 1375, 1227,
           306, 1041, 2594}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[{759, 1, 1017, 543, 407, 759}], 
      Line3DBox[CompressedData["
1:eJwl0k1LlFEUAOAzVpYfaQQTrkbFhUQY4k6yTVnmjCLUzla6G8Hc1i9QaBko
/YBSEJHIQcXAsFbiStMZTaeIlkIYFKIVPi/BnHnOuXPec+99mebhsYdPUhHx
XCxdjLjCNTZygze5zdv8zj4e8TFTlyIqxIi8gc/YxAle5xQ7+Jq3WGAvP/JG
VcQLG189F7Gl/lURMa2+cyHik/out5N+693yHfmh/J68KC9WRmTVac+X1KPO
1Cnfld/Xs8cePhCfkzncZ5YHzLHMPn5hP78yb+6pOX/Fb/NnnGnImTf99ogf
krlcYCdfsZ2TbOU4M3zKa0yLvPyf8w3yB3P8xi5usY3rzLCsv82ef+xdr/7J
l+q18xF16ve8zAHrq/La5A7ymuSdmzEnr5aX3CMn95rjnb4VYXQsU1ssUksU
6Orxlj7xxperxzw9HiOaji2ciFkLLan//5MzE2JG2w==
       "]], 
      Line3DBox[{787, 225, 1020, 562, 406, 787}], Line3DBox[CompressedData["
1:eJwl0+VrllEYwOEjEwT/ABtlIIqoIIh+UwS/uNmza85Zsza7u7u7u6ezu7u7
5qzZ3frV6+CHi9/ec98vh+fZlpielZJZIISQR5HCIWQXDGFEQggHeEYP9nOI
ZPODOoYX1OUYSc7bxL1CIdTT75ykF6XNTuhx2lKfCayyW9HstJ9TucgrLtCb
Mmbn9Rx77aZpY0o5X6iT2cYUijmbrn1ZZrepfuMqHblNcTtv9Rb9WW7vpt6g
tllnbc4iZvCBmZQwe6+77M/Sgewgm660YBDl7eXEPXbTko3Ucj5Y57OJL2xm
C2tZQBU7P3UIf8lx11D9w29yyWC98886Lz5n/ExN312ni1nNGubG98sGVjKH
hzxiJw+o4Xv3dSkf+cR2ZnOHH9yNz+rOLppo/54OoBmduEZl59e1X7zb7mV9
RxMqmaXrFVLoE++wM1WLmk3TDlxiEiWdNdL2nInPY/eNniWLsuYT9TUNaccp
qjtvoFvtZ+o4xrOCl1QzH6v5JNM6vi+7h7WC2VE9Qk9G8ZzRVDVrpfviu7T/
VZN4yi/yKGfnSbybYTyOv2e7w7UO3dhDd5bEvztGJvz/X/sH1A6C2A==
       "]], 
      Line3DBox[CompressedData["
1:eJwl02VXVFEUBuCDjKLY3QrYLViIgd2J3YpdYHdgdwcmNoroci3j3/hb1Gcv
PzzrnTn7vXPmnrmTX15ZVpGVUvpNm0xKrSnITamVbMmnnJRayOY0oym5FOk0
kY3JoRHVug1lhmwakEXib3ZKfyh03U/5xVo9n6mLffhIf/Na+YH3vOMtvay/
kTX2eC1fxWteMsvshXzOM57yhF+6NWbVXj/mEQ95wH1mmt2Td+M63TvyNjOs
35I3ucF1plu7Jq/yQ/eKvMwlLnKBaTrn5Tmq+K53Vp4hz+y0PMVJTnCcY0wx
Oxr3qn9EHuYQBznAfvYxWa9SVrCXPeymu/Vdcic72M42trKFzZTqlMtNbKTW
XhvketaxljV8s75armIlK+jj2uVyGUtZQhmLWcRCFjCfecxlDkNdNzt+nzjr
ONc4xzgnpsZ9xz3F72vPSXK8fqmcyIR4z7hgvUSO5atusRzDaErMRsmRjKAo
ngmdwuibDZfD4rswhGJrg+UgBlKvOyCeO/rF55r3jXumdzx3FETXen48W/p5
sic94uzpFnuYd5Vd6Ewn6nQ7xncz6yDb0462mf//tX+YtVQW
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1976, 2263, 1358, 1975, 2719, 2146, 1977, 2720, 2147, 1978, 
       2721, 2148, 1979, 2722, 2149, 1980, 2723, 2150, 1981, 2724, 2151, 1982,
        2848, 2264, 2266, 2635, 2847, 2265, 2379, 2403, 2380, 2267, 2419, 
       2526, 2897, 2152, 2418, 2598}], 
      Line3DBox[{1986, 2636, 2779, 1985, 2637, 2780, 1987, 2728, 2158, 1988, 
       2729, 2159, 1989, 2730, 2160, 1990, 2731, 2161, 1991, 2850, 2271, 2272,
        2162, 2435, 2881, 594, 2274, 432, 2874, 2273, 691, 2573, 2611}], 
      Line3DBox[{1994, 2166, 2734, 1993, 2165, 2733, 1992, 2164, 2365, 2732, 
       512, 515, 433, 2276, 600, 2634}], 
      Line3DBox[{1996, 2639, 2781, 1995, 2640, 2782, 1997, 2641, 2783, 1998, 
       2735, 2167, 1999, 2736, 2168, 2000, 2852, 2277, 2278, 2169, 2554, 2716,
        2902, 2222, 2281, 2370, 2404, 2371, 2280, 2853, 2383, 2405, 2223, 
       2351, 2568, 2836, 2438, 2601}], 
      Line3DBox[{2003, 2172, 2739, 2002, 2171, 2738, 2001, 2170, 2558, 2737, 
       2696, 2353, 2374, 2373, 2286, 2225, 2538, 2441, 2440, 2633}], 
      Line3DBox[{2005, 2642, 2784, 2004, 2643, 2785, 2006, 2644, 2786, 2007, 
       2645, 2787, 2008, 2740, 2173, 2009, 2838, 2226, 2279, 2227, 2501, 2500,
        2010, 2702, 2839, 2407, 2228, 2282, 2229, 2442, 2011, 2854, 2283, 
       2352, 2284, 2613}], 
      Line3DBox[{2018, 2175, 2742, 2017, 2174, 2741, 2016, 2541, 2559, 2540, 
       2900, 2560, 2015, 2542, 2235, 2287, 2234, 2385, 2014, 2539, 2899, 2233,
        2579, 2232, 2590}], 
      Line3DBox[{2020, 2646, 2788, 2019, 2647, 2789, 2021, 2648, 2790, 2022, 
       2649, 2791, 2023, 2697, 2792, 2295, 2024, 2840, 2236, 2288, 2237, 2444,
        2025, 2841, 2238, 2289, 2239, 2614}], 
      Line3DBox[{2031, 2177, 2744, 2030, 2176, 2743, 2029, 2793, 2650, 2028, 
       2244, 2294, 2243, 2388, 2027, 2387, 1503, 2293, 2242, 2026, 2883, 
       2603}], Line3DBox[{2033, 2651, 2794, 2032, 2652, 2795, 2034, 2653, 
       2796, 2035, 2302, 2797, 2698, 2036, 2690, 2855, 2296, 2390, 2389, 2037,
        2391, 2503, 2856, 2703, 2297, 2446, 2528, 2445, 2038, 2906, 2572, 
       2596}], Line3DBox[{2046, 2178, 2745, 2045, 2800, 2655, 2044, 2799, 
       2654, 2043, 2301, 2355, 2300, 2042, 2452, 2530, 2453, 2798, 2299, 2451,
        2506, 2450, 2041, 1886, 2543, 2449, 2245, 2591}], 
      Line3DBox[{2050, 2746, 2179, 2048, 2747, 2180, 2052, 2748, 2181, 2054, 
       2247, 2308, 2859, 2182, 2454, 2461, 2885, 2707, 2309, 2183, 2458, 2700,
        2749, 2583}], 
      Line3DBox[{2069, 2809, 2662, 2067, 2808, 2661, 2065, 2807, 2660, 2063, 
       2806, 2659, 2061, 2691, 2805, 2307, 2249, 2060, 2709, 2887, 2466, 2306,
        2248, 2059, 1597, 2588}], 
      Line3DBox[{2072, 1426, 2071, 2754, 2193, 2073, 2315, 2316, 2861, 2194, 
       2472, 2473, 2513, 2474, 2317, 2878, 2425, 2535, 2195, 2424, 2544, 1888,
        2475, 2604}], 
      Line3DBox[{2078, 2204, 2759, 2077, 2203, 2758, 2076, 2202, 2757, 2075, 
       2201, 2756, 2074, 2200, 2755, 2314, 2481, 2199, 2873, 2359, 2395, 2394,
        2320, 1429, 2537, 2376, 2321, 2480, 2516, 2479, 2888, 2478, 2198, 
       2484, 2585}], 
      Line3DBox[{2080, 2663, 2810, 2079, 1437, 2081, 2250, 2324, 2875, 446, 
       2323, 485, 2325, 2863, 2569, 2482, 2605}], 
      Line3DBox[{2087, 2210, 2765, 2086, 2209, 2764, 2085, 2208, 2763, 2084, 
       2207, 2762, 2083, 2206, 2761, 2082, 2862, 2665, 2322, 2485, 2843, 2664,
        2328, 663, 2889, 2483, 2205, 2327, 2251, 2908, 2580, 2627}], 
      Line3DBox[{2089, 2666, 2811, 2088, 2545, 2667, 2901, 2546, 2547, 2252, 
       2329, 2879, 2427, 2428, 2426, 2548, 2253, 2581, 2909, 2571, 2593}], 
      Line3DBox[{2096, 2215, 2769, 2095, 2214, 2768, 2094, 2213, 2767, 2093, 
       2212, 2766, 2092, 1449, 2091, 2812, 2669, 2090, 2844, 2668, 2361, 2255,
        2490, 2880, 2429, 2431, 2430, 2332, 2254, 2489, 2890, 2488, 2211, 
       2331, 2586}], 
      Line3DBox[{2098, 2670, 2813, 2097, 376, 1614, 377, 275, 1744, 577, 
       940}], Line3DBox[{2105, 2218, 2772, 2104, 2217, 2771, 2103, 2216, 2770,
        2102, 1459, 2101, 2815, 2672, 2100, 2814, 2671, 2099, 2864, 375, 1828,
        675, 278, 539, 1619, 382, 538, 277, 1934, 942}], 
      Line3DBox[{2107, 2673, 2816, 2106, 2337, 2366, 2338, 2866, 2108, 2520, 
       2256, 2521, 2257, 2891, 2491, 2109, 2621}], 
      Line3DBox[{2119, 2220, 2775, 2118, 2219, 2774, 2117, 1470, 2116, 2821, 
       2677, 2115, 2820, 2676, 2114, 2819, 2675, 2113, 2818, 2674, 2773, 2112,
        2336, 2362, 2335, 2865, 2111, 2398, 2262, 2334, 2261, 2846, 2493, 
       2110, 2599}], 
      Line3DBox[{2121, 2678, 2822, 2120, 2341, 2368, 2342, 2867, 2122, 500, 
       739, 1855, 550, 552, 933}], 
      Line3DBox[{2131, 2221, 2777, 2130, 1481, 2129, 2827, 2683, 2128, 2826, 
       2682, 2127, 2825, 2681, 2126, 2824, 2680, 2125, 2823, 2679, 2776, 2124,
        2549, 2561, 833, 2904, 2123, 810, 2340, 1547}], 
      Line3DBox[{2145, 2348, 1639, 2144, 2835, 2689, 2143, 2834, 2688, 2142, 
       2833, 2687, 2141, 2832, 2686, 2140, 2831, 2685, 2139, 2830, 2684, 2778,
        2138, 2562, 2565, 2566, 1913, 2137, 2563, 2564, 2344, 2704, 2868, 
       2402, 2136, 2400, 2417, 2401, 2578, 2608}], 
      Line3DBox[{2270, 2157, 2727, 2695, 1984, 2156, 2726, 1983, 2155, 2349, 
       2725, 2382, 2381, 2364, 2154, 2369, 2269, 2582}], 
      Line3DBox[{2347, 2345, 2346, 2869, 2132, 2550, 2828, 2715, 2133, 2551, 
       2556, 2552, 2343, 1712, 2416, 2399, 2134, 2622}], 
      Line3DBox[{2584, 2312, 2860, 2186, 2467, 2468, 2512, 2469, 2313, 2423, 
       2534, 2898, 2187, 2422, 2470, 2471, 2358, 2872, 2188, 2062, 2750, 2189,
        2064, 2751, 2190, 2066, 2752, 2191, 2068, 2753, 2192, 2070}], 
      Line3DBox[{2587, 2356, 2871, 2699, 2056, 2459, 2531, 2460, 2304, 2706, 
       2858, 2507, 2457, 2055, 2455, 2456, 2804, 2303, 2246, 2053, 2803, 2658,
        2051, 2802, 2657, 2047, 2801, 2656, 2049}], 
      Line3DBox[{2624, 556, 557, 506}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1199, 1359, 2719, 1200, 2780, 1369, 1221, 2782, 1380, 1232, 
       2785, 1389, 1242, 2789, 1397, 1252, 2795, 1406, 1261, 2802, 1416, 2747,
        1272, 1427, 2754, 1283, 1437, 1293, 1889, 1890, 2901, 1446, 1303, 
       1613, 1614, 1455, 1314, 1623, 2866, 1624, 1667, 1464, 1325, 1630, 2867,
        1631, 1474, 1336, 2828, 1893, 1894, 1484, 1347}], 
      Line3DBox[{1201, 1360, 2720, 1202, 1370, 2728, 1222, 2783, 1381, 1233, 
       2786, 1390, 1243, 2790, 1398, 1253, 2796, 1407, 1262, 2803, 1417, 2748,
        1273, 1600, 1799, 1428, 2861, 1284, 1696, 1518, 1718, 1663, 2875, 
       1664, 1294, 1819, 1525, 1740, 1741, 2879, 1742, 1304, 1827, 1532, 1744,
        1745, 1746, 1875, 1829, 1853, 1537, 2891, 1747, 1748, 1854, 1749, 
       1877, 1727, 1855, 1543, 1860, 1668, 1721, 1669, 1728, 1712, 1900, 1549,
        1653, 1878, 1879, 1348}], 
      Line3DBox[{1203, 1361, 2721, 1204, 1371, 2729, 1223, 1382, 2735, 1234, 
       2787, 1391, 1244, 2791, 1399, 1254, 2797, 1592, 1776, 1408, 1263, 1788,
        2804, 1509, 1786, 1418, 2859, 1274, 1798, 1513, 1736, 1738, 2878, 
       1739, 1874, 1810, 1519, 1809, 1919, 2863, 1916, 1526, 1939, 1920, 2909,
        1966}], 
      Line3DBox[{1205, 1362, 2722, 1206, 1372, 2730, 1224, 1383, 2736, 1235, 
       1392, 2740, 1245, 2792, 1585, 1586, 1587, 2855, 1504, 1777, 1505, 1778,
        1593, 2858, 1789, 1510, 1787, 1511, 1791, 2885, 1598, 1514, 1737, 
       1515, 1888, 1800, 1953}], 
      Line3DBox[{1207, 1363, 2723, 1208, 1373, 2731, 1225, 1570, 2852, 1571, 
       1572, 1497, 2838, 1498, 1580, 1500, 2840, 1768, 1501, 1769, 1588, 2856,
        1686, 1506, 1716, 1507, 1687, 1646, 2871, 1594, 1790, 1595, 2749, 
       1930, 1964}], 
      Line3DBox[{1209, 1364, 2724, 1210, 1564, 2850, 1565, 1566, 1496, 1895, 
       2902, 1897, 1896, 1898, 1679, 1680, 2839, 1579, 1682, 1681, 1581, 1502,
        2841, 1732, 1771, 1770, 1589, 1923, 2906, 1779, 1940, 1952}], 
      Line3DBox[{1211, 1554, 2848, 1556, 1558, 1494, 1755, 1757, 2881, 1756, 
       1835, 1673, 1674, 1573, 1676, 2853, 1675, 1644, 1574, 2854, 1764, 1575,
        1927, 1922, 1962}], Line3DBox[{588, 947}], 
      Line3DBox[{1215, 1754, 1492, 1651, 1493, 2725, 1670, 1643, 1723, 1560, 
       1569, 1561, 2732, 1714, 1652, 1577, 1645, 1578, 2737, 1905, 1906, 1883,
        2900, 1885, 1884, 1248, 2793, 1402, 1257, 2799, 1412, 1268, 2807, 
       1423, 2751, 1279, 1433, 2757, 1289, 1442, 2763, 1299, 1451, 2767, 1310,
        1460, 2770, 1321, 1470, 1332, 2827, 1480, 1343, 2834, 1490, 1356}], 
      Line3DBox[{1216, 1367, 2726, 1217, 1377, 2733, 1229, 1386, 2738, 1239, 
       1394, 2741, 1249, 1403, 2743, 1258, 2800, 1413, 1269, 2808, 1424, 2752,
        1280, 1434, 2758, 1290, 1443, 2764, 1300, 1452, 2768, 1311, 1461, 
       2771, 1322, 1471, 2774, 1333, 1481, 1344, 2835, 1491, 1357}], 
      Line3DBox[{1218, 1562, 1563, 2727, 1219, 1378, 2734, 1230, 1387, 2739, 
       1240, 1395, 2742, 1250, 1404, 2744, 1259, 1414, 2745, 1270, 2809, 1425,
        2753, 1281, 1435, 2759, 1291, 1444, 2765, 1301, 1453, 2769, 1312, 
       1462, 2772, 1323, 1472, 2775, 1334, 1482, 2777, 1345, 1639, 1640, 
       1641}], Line3DBox[{1346, 1483, 2869, 1638, 1335, 1473, 2822, 1324, 
       1463, 2816, 1313, 1454, 2813, 1302, 1445, 2811, 1292, 1436, 2810, 1282,
        1426, 1271, 2746, 1415, 2801, 1260, 1405, 2794, 1251, 1396, 2788, 
       1241, 1388, 2784, 1231, 1379, 2781, 1220, 1368, 2779, 1198, 1358, 1553,
        1642}], Line3DBox[{1956, 1349}], 
      Line3DBox[{1350, 1910, 1911, 1914, 1913, 1912, 1891, 1892, 1909, 2904, 
       1908, 1907, 1622, 1628, 2865, 1621, 1650, 1703, 1704, 1619, 1702, 1701,
        1852, 1823, 2890, 1824, 1822, 1529, 1606, 1524, 2908, 1937, 1948}], 
      Line3DBox[{1352, 1486, 2830, 1339, 1476, 2823, 1328, 1466, 2818, 1317, 
       1456, 2864, 1611, 1306, 1447, 2844, 1531, 1295, 1438, 2843, 1814, 1816,
        1815, 1285, 1429, 1662, 1603, 1695, 1694, 1275, 2860, 1419, 1797, 
       1597, 1264, 1409, 1972}], 
      Line3DBox[{1353, 1487, 2831, 1340, 1477, 2824, 1329, 1467, 2819, 1318, 
       1457, 2814, 1307, 1448, 2812, 1296, 1439, 2862, 1604, 1286, 2873, 1430,
        1806, 1808, 1807, 1276, 2898, 1420, 1735, 1734, 1796, 1795, 2887, 
       1265, 1410, 1783, 1887, 1886, 1256, 1401, 1775, 2883, 1951}], 
      Line3DBox[{1354, 1488, 2832, 1341, 1478, 2825, 1330, 1468, 2820, 1319, 
       1458, 2815, 1308, 1449, 1297, 2761, 1440, 1287, 2755, 1431, 1599, 1277,
        2872, 1421, 1512, 2805, 1266, 1411, 1784, 1508, 2798, 1785, 1873, 
       1661, 1660, 1591, 1503, 1685, 1247, 1658, 1657, 1584, 2899, 1499, 1882,
        1238, 1974}], 
      Line3DBox[{1355, 1489, 2833, 1342, 1479, 2826, 1331, 1469, 2821, 1320, 
       1459, 1309, 2766, 1450, 1298, 2762, 1441, 1288, 2756, 1432, 1278, 2750,
        1422, 2806, 1267, 336, 2355, 414, 246, 2294, 327, 241, 2287, 318, 
       2286, 236, 695, 309, 2276, 232, 690, 298, 2269, 894}], 
      Line3DBox[{1751, 1942, 1550, 1968}], 
      Line3DBox[{1752, 1880, 1881, 1730, 1731, 1366, 2897, 1214, 1868, 1869, 
       1957}], Line3DBox[{1959, 1833}], 
      Line3DBox[{1901, 1902, 1552, 1903, 1551, 1713, 2868, 1637, 1711, 1548, 
       1635, 1547, 1710, 1629, 1831, 1542, 1750, 2846, 1541, 1830, 1620, 1536,
        1934, 1535, 1609, 1969}], 
      Line3DBox[{1944, 2836, 1761, 1763, 1762, 1226, 1374, 2874, 1654, 1567, 
       1672, 1722, 1671, 1213, 1365, 2847, 1557, 1555, 1212}], 
      Line3DBox[{1947, 1803, 1805, 2888, 1804, 1847, 1812, 1813, 1811, 1818, 
       2889, 1817, 1607, 1530, 1743, 1826, 2880, 1825, 1649, 1610, 1828, 1612,
        1316, 1465, 2773, 1327, 1475, 2776, 1338, 1485, 2778, 
       1351}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzUvHk0lt/b/y1ERRNCA4rIkKLBkOGQ0KRSGZLIkCESykySOZkKmZMyDxkz
sy/zFC7zPGWerkvm2e/q8/nme3/vZ1n3Y63P/XvW45+z9V674zz26zz2sY+9
z31eJ9QN7mkSExERqVAQEZEQbfU3Bf/6h+1/Xv//r19Mc1zXvW3jbR9f0qRl
dt/n/9Z9m92MZGcWHeOJMIePeWT/jP+jIzklhVQvtSQiIo2d7mw5SX90+cXS
PM5hbCoRUfSLFoNTaf/F/gH8m4Z0ItuJvQ1TpzL+rasmirXrZhERObLVx+Vm
/Vu3vSLf7ptDRLRyO7a5P+ePTvWgW0g0QzaPiEhC12PuU94ffUH0wxES/sh8
hycaVYJEY/nHdOY2NjbwQG+orbSzxAWxez8MjSouRiGvDE+0fsDDdMne+tNL
GET12YYl2xuPHKvWEW1rxh8O/+1vCsqDsrqsiEpBJTjFdJk0AZkbJLGmmeMh
q7KAXSeRGjj8bx+TeyaMak3Xq37fl/OJdPnBw79EiIhyFaJsT+X/sRN9JYds
yFBVmIio96CB/+fcP/rb0+kpqcUf04mIuEqf7O5P/6NH0bJwW656ZhIRPTvy
y7A1849+wjx01z0L6Wwiom4B9TTv7P/CWStsuZbAq728v44699+67TUZW1oC
LwEdurAHm9zWNzZY7UNY8tc39MjOBavnr25s/MXNy7bFsgAzm9/u6hHAH8aD
1G4F437ryf7FFdeuvUUVG+dolQ0wqEZSd8MzBw9pTp87rscjFDI0e0MOg0NB
BQYe4nG1W/LcSj9or3bP9WgauMpn1+RElsCvBkpFKUM8HJGds1DZLwiVL4qw
lWtMiNMM0/jbH4dHNektF9+ISqxDaP95v/zgtb/9P4GPdpGVdiPwH3m5Upe8
2V/B8Ve4WvsFQpz1+tWMCm5yy6OJOSd26w6BW+uYbJfnZrwZPZouSOa1JHAc
SXhjkvlfeYoOalsR7B5YPSiVsWk/YANajxffzVffwCscO/UuX+pfPFupf447
HF3NT9C7L9i1/zyS/Uk/+ltXjxgwuCNpidwk5tj0iRPRVZX4ocopPDztK6jT
cc5Bz/cTtWgrjKO8ZG4dSYnebfNM5MqreLNUCnOaPdGa0hPgetVQ555vB7xr
uWib4hMAPOKtaXo238GYykrFrhcPL380XVNu54C+L3szpHcIAt1zy5rffiK1
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
p3qeGQRvTlXMi15GMePS4rQt5j+VZ6SgqNRSyY1l8dEoWzHAHvefymfTzenf
KSbM0M/p34Um/Kfy7IL+UamqZknxhuZGs2lFSf+p/NHjo4CLO5DSZRpzz27E
JOU/lWcMDvJbccgI3/iEzUGCIhHvW7VwT2ap8kvZJ0ZogP6LBZK2ZlVap47Q
dvvTk0VpRBBddO/08P/w3in9BenbW6wZQLSguODIBSFUswm1/rt2UhY6cTT1
DYjX23694/hmOznPLcWtZ129U6/iFY9wjZarVJH19Za/HrWaVjya+NqaUd7J
zpacPzbbRLfXfyojKTzva55SNi1Zb+sA/aXjF8xoUhzF5ANYfY+Tx9lfUa32
hg4D/uSR2fLbvafws9i9NStdCcm36ZV47olB+OnHiMxe9szr7PAGP9+m9SEF
SYhUKThNDqA9uJ0uJRv/PI9uecqoHWOhIDR427FxL2dFdD2fuubql5GecZTY
YoJzir/ErHfGGb8b03Fbn/5V6q3qqaR3xeoawS2vyO9Vf3bTKZmA+8lXPipI
cipEkfubEhS1cZzjXor+EaGKIJYwcn9jxysf2GVK4tc0m76o5jHGl2P9fcEU
OyOwqQNfv9d/3XGfzSjQNWvqf/JeVT2gywo3zIK6nvr7YacJ8IYtv13BoQyu
7eQrD77FBZrh2RtN0wRhxoSzfa7+xGtDgw2WL3HLx5nR9oNPcWxYe5yujl0s
TolMjj95Xc32ah+5XwkX37ekV71JsXSRJD4VzCX3697nT22B/ifx1644BTvg
zfGRWD2C1w50qO1qwRfWt/lKrlyP9sVKzM8j39TVV7pnL6D3X0MD/K9YooZB
48O+/66/1CKM6wnpkEVzIC2vqxdO81DSrg9uhq/fJZTGVuiCh3LWfr9X9uC1
XZhuYoYIN65+uUG5jBKimaXshh3Y4eLJM/Pjaa4ronF/uR5u48ac3CfLn+Ms
sHYqNjEws1+2S0noLrT9xpBB7pdgg2X77G0JPCFhPUW42318N1b+85aYi9u0
yvAm8fy+XRFUyLnFa95+ZKOeXEKAJMrcdIvnaaU+6lw7/aLn3/TrvftY2622
NLjd1vPsjcMArD3tXd2dXQ1DyefOxWdJgHKjn5LsKXV4kGszMne/bmPiNu/h
g0W45BaKdYm233F23X3zz8XJGB1Xf3cYF1PLM6j+QBE3jbUzif2JN235drzp
xLV7Nofkyfprdaahwofj4vC96RepIj268e7qP+ftKzv6W1wc+VA1v/q2ngIl
NF5NETunU/MMy1tL17KQt9YZy1vrvFuY8cDPVKhVad8XcosARtW7W46yl8NI
IMcGq/NJcE1/2CL3TRc0MVJxRd3oAFee00/cvF2gdtn5pA8M6aAudIZNOpQI
3cTnqV2darD5Zoa6FpcDyNi26laQ5vEpoWQCz0sNd7wK2EziBEClgnVeZ/Ot
Kk5/Zo8VjrWwgjulPgKXOrDQLylfk6q6L93ijx1Cq3zWrCXr1Dz2ZSh38nbC
f9g+JHqEPh2/KWyhfGrw2bp1MYxoguAtqpmAQ9JyPRlzdry6auYx4zvI8duh
jmBaT6SUF32naYq0PmN5busW5bktvHWEN64qBUqzm+Vv6fXBKI9agCVdM3zG
7rdTYffbX2P3209yezu1nlQFRw3+FSfwDuCflnMJkfq7xoXNJr1jJzg8WU81
2CEPqzyneubylht1Hue5ZxqHO8BADFDz7MApO4zNt39iawS1dSkPbsxSOmS0
8xLuX+unyCkZbzGrx+JB7e3hY2pB5HubqQU4mlsCnfgNE14EyZ1MyIxYNv89
Pqmh2XS6/ALS2dBXdt73CYqrkLaeu8drpj70dtkjR3RJDj3xfIdH7IeuvenP
IMI4fRpnaE8opHjfZPr69hs80a2/l1PaD3lUBiH4ekOgyUoXCVEOgHPin33x
Y0RQrrPi7b4hCUZP6h2YRO7BsaeSOwdI9TdskE7IEa7B7fSrrGJJpoX7aWrz
7eeJsGU3Fr2A27Jj61GFTRa4MKxf+m9Hg5trP4k/1DGj7+v5Ru6XnbDJgFZL
uxhfl0OpNQ8L2V7VxxY2MsqJyt4NxYjtl0HUb3eZztUjwEDN/OGlObrVX4BP
Kg5EXcbmwg6jRIDp0ZNfdKKQR7ECTXlBLSJuvbOpYd8ASLjL55o8sITLCepP
b+ZGQYVEd8LrHiIYn9h00OWqLHjPsr+j2mEBVrgVl0Pn8q7friv+Jvwd58gl
zaHOzgnHGwon5p7LcWQ47Uu5Dq7ms+eFY4w+uL7JhX550iVQv8Bnix9z7Kmg
yZ4gt//shg0XW0woxZmWGbuGhQuR7d+K7/u/Td0kFtH9wi9U4wI5jyhhhqJW
qfs42iW9O0VJVhndvG1SNEmqv2XVVOgUqy8y1aroL9FKRhyHVmhm5xJhuJju
1LByJirQ8ernE2lHmhNnEm2ku5dcr7z2GzWzfZGGiQSl4dDX9yFtRWXk3D3/
Fxx1rHcOrgAWszff+wgHwVrWvXGuX1zTpdKRHc9w9wsO2ZQ1xuJaGxf6G7MT
NzwtUy9uPJW9ynWUkfydepdV380NXC0uvdLWsH9Witzf3fwGa7yM2cSkI/KO
syn/0jtLNTxV15y2XDSw1mhiUgvIelI2WdsOiXbKoZTYLzX3a2Whankc49x3
tDvshefNyk+oT17tUtKYM8rdoiJUO7T0+lyK6WTJLNLJyho7cX4LgRNs1Ny/
V+w5B6v3K6+Y69eO+NCmV+v9cWkW6k4PpytwrFozC+vMRvo7XDpD4kFbkzv4
P+4g95f307ACtRWzuJtEU81F7VO/9J6+GE3sOkkndv94CD3fCilyf9O57Fa5
4ctFfBgHBG8rrSH396HqwBHOZfeEHS8KuBHOfSbrZ+WkzfYLtwogHTXOAXmT
y3CLUjx7bhzMvUaKnfL8kK6j85pKDjysOhubZpm29DikYTpW+xfpWI2eMN/a
tbwQF6Rlq7/m5QRO5WDFgg7UfhsFPSkG3Manu+Q4+I6Q+2vRfkCvooRe/MeK
nRcq5I6S+7vuUypdGUuR6OCb2fNnrFeS+4tknHJ0Gy+IfDqW4CHS7EjOi3tS
ReLZNWf3wzVfwtpHupvIOk0pGXHn1BSDDn5eu3ec+/ogOR9RF8OB7Zcln+Fl
qL494/BOw1FGLbyHlT2VY6PWeuiAw0vRzgpfsOyUOTj6b+7tq2I6U9OYztS/
1lvWjWWbZNvbxXdqTCRwBWwn91eC7atGabSeWPOxtd5ZbV/I/cqnPbGDgc5a
5PO2ba9mcsvJ/VKdntOfEjicPK8/ZUbu1939l0uOu2oJjc0Sbp/chSfHDU11
tT5MfXRY8OesiYNDsD1Zf+riuqSDj2Td+SfefzzLuHWIrD+1VL/+1P7uk8Ie
8+mTjPEJmbfy9RmZ/u76/7+y+1HQUTFcUYygkliZ2aMUQ+bfpTh3Ocazyxfx
LDXFArdSU/yVW6kofOb5lMbs4V/4lHVet/1Aysp53fZfHDq6ymkTFYk3vS+p
FQj/xpt2H2T5I99boG86985PiiCU7eKT9DCdCFNYviw7LF+WEpYvS2Reb71M
fMO83voKMt9VRJvM8x2l2Za/8B2b+4N5vltOcebS73xHRZHaNMd3y80Yk37n
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
/wENNWQ/
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{353.7014020659387, 190.2536137274405},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-3, 8}, {0.00001, 0.99999}, {0., 0.34597385847894724`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewAngle->0.026353299642042374`,
  ViewCenter->{{0.5, 0.5, 0.5}, {0.02633007729047465, 1.0167343213060869`}},
  ViewPoint->{-1.1455375480372647`, 2.985230930654453, 1.1073120683442033`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.6532275451691723`*^9, 3.653227586322123*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"1", "-", "t"}]], "*", 
    RowBox[{"t", "^", 
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}]}], ",", "t"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6533212187936077`*^9, 3.653321223847187*^9}, {
  3.653321349538114*^9, 3.653321388398884*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["t", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[Sigma]", "2"]}]], " ", 
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{"1", ",", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Sigma]", "2"]}], ",", 
      RowBox[{"2", "-", 
       SuperscriptBox["\[Sigma]", "2"]}], ",", "t"}], "]"}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[Sigma]", "2"]}]]}]], "Output",
 CellChangeTimes->{3.65332122416503*^9, 3.6533213595256243`*^9, 
  3.653321389989667*^9}]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"Unal", "-", "Khalique"}], "Section"]], "Input",
 CellChangeTimes->{{3.653321564409645*^9, 3.6533215850572767`*^9}}],

Cell["\<\
Here, we attempt to solve the KFE for a diffusion with constant drift and \
diffusion. First, we re-write our linear drift term.\
\>", "Text",
 CellChangeTimes->{{3.6533491229813623`*^9, 3.653349187557104*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "[", "t_", "]"}], ":=", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[Sigma]", "^", "2"}], 
      RowBox[{"1", "-", "t"}]]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]", "[", "t_", "]"}], ":=", 
    RowBox[{"\[Mu]", "+", 
     FractionBox[
      RowBox[{"b", "*", 
       RowBox[{"\[Sigma]", "^", "2"}]}], 
      RowBox[{"1", "-", "t"}]]}]}]}]}]], "Input",
 CellChangeTimes->{{3.653353259066989*^9, 3.653353260443242*^9}}],

Cell["\<\
Now, we solve a system of differential equations to find \[Gamma] and \
\[Delta], which transform the process into a no-drift process.\
\>", "Text",
 CellChangeTimes->{{3.653349152013973*^9, 3.653349201812675*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Gamma]", ",", "\[Delta]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Gamma]\[Prime]", "[", "t_", "]"}], ",", 
    RowBox[{"\[Delta]\[Prime]", "[", "t_", "]"}]}], "}"}], "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Gamma]", "[", "t", "]"}], ",", 
     RowBox[{"\[Delta]", "[", "t", "]"}]}], "}"}], " ", "/.", " ", 
   RowBox[{"First", "@", 
    RowBox[{"DSolve", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"\[Gamma]", "[", "t", "]"}], ",", "t"}], "]"}], " ", 
         "\[Equal]", " ", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Alpha]", "[", "t", "]"}]}], "*", 
          RowBox[{"\[Gamma]", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"\[Delta]", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Beta]", "[", "t", "]"}]}], "*", 
          RowBox[{"\[Gamma]", "[", "t", "]"}]}]}]}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Gamma]", "[", "t", "]"}], ",", " ", 
        RowBox[{"\[Delta]", "[", "t", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", "t"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Gamma]\[Prime]", "[", "t", "]"}], " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Delta]\[Prime]", "[", "t", "]"}], " ", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.653349202958664*^9, 3.6533492146844597`*^9}, {
  3.6533492510260353`*^9, 3.6533493239550123`*^9}, {3.6533527532503357`*^9, 
  3.653352756800943*^9}, {3.653352794225089*^9, 3.6533528154310093`*^9}, {
  3.653352854638838*^9, 3.65335307217808*^9}, {3.653353109581452*^9, 
  3.653353110771842*^9}, {3.6533531513696337`*^9, 3.653353247138888*^9}, {
  3.6533959670854197`*^9, 3.653395971213043*^9}, {3.653396080791609*^9, 
  3.65339608119905*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], ")"}], 
     RowBox[{"-", 
      SuperscriptBox["\[Sigma]", "2"]}]], " ", 
    RowBox[{"C", "[", "1", "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}], 
       RowBox[{"-", 
        SuperscriptBox["\[Sigma]", "2"]}]], " ", 
      RowBox[{"(", 
       RowBox[{"b", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", "\[Mu]"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
      RowBox[{"C", "[", "1", "]"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[Sigma]", "2"]}]], "+", 
    RowBox[{"C", "[", "2", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.653353165211946*^9, 3.653353247793715*^9}, 
   3.653355343129899*^9, 3.653393446438101*^9, {3.653394129349392*^9, 
   3.6533941411869707`*^9}, 3.6533957400503597`*^9, 3.65339597221634*^9, 
   3.653396083201625*^9}]
}, Open  ]],

Cell["Solve the transformed KFE.", "Text",
 CellChangeTimes->{{3.653355034516059*^9, 3.653355045979871*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "p", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"k_", ",", "t_"}], "]"}], "=", " ", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"k", ",", "t"}], "]"}], "/.", 
   RowBox[{"First", "@", 
    RowBox[{"DSolve", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"k", ",", "t"}], "]"}], ",", "t"}], "]"}], " ", 
         "\[Equal]", " ", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"k", "^", "2"}]}], " ", "*", " ", 
            RowBox[{"\[Sigma]", "^", "2"}], " ", "*", " ", 
            RowBox[{
             RowBox[{"\[Gamma]", "[", "t", "]"}], "^", "2"}]}], "2"], "*", 
          RowBox[{"p", "[", 
           RowBox[{"k", ",", "t"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"k", ",", "t\[Prime]"}], "]"}], "\[Equal]", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], "*", "k", "*", "z\[Prime]"}], "]"}]}]}], "}"}],
       ",", 
      RowBox[{"p", "[", 
       RowBox[{"k", ",", "t"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "t"}], "}"}]}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.653355048715232*^9, 3.653355124737679*^9}, {
   3.653355205346312*^9, 3.653355263680627*^9}, 3.65335531465458*^9, {
   3.653355348970027*^9, 3.653355453193287*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "z\[Prime]"}], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}], ")"}], 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]}]], " ", 
     SuperscriptBox["\[Sigma]", "2"]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t\[Prime]"}], ")"}], 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]}]], " ", 
     SuperscriptBox["\[Sigma]", "2"]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]]}]]], "Output",
 CellChangeTimes->{3.653355453419405*^9}]
}, Open  ]],

Cell["\<\
The solution to the heat equation, or the IFT of the solution to the above \
transformed KFE.\
\>", "Text",
 CellChangeTimes->{{3.6533932212033377`*^9, 3.653393238858032*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"p", ",", "\[Nu]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Nu]", "[", 
   RowBox[{"t\[Prime]_", ",", "t_"}], "]"}], "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]", "[", "\[Tau]", "]"}], "^", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Tau]", ",", "t\[Prime]", ",", "t"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ">", "t", ">", "t\[Prime]", ">", "0"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"\[Nu]_", ",", "\[Gamma]_", ",", "\[Delta]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Gamma]", "[", "t", "]"}], 
    RowBox[{"Sqrt", "[", 
     RowBox[{"2", "*", "\[Pi]", "*", 
      RowBox[{"\[Nu]", "[", 
       RowBox[{"t", ",", "t\[Prime]"}], "]"}]}], "]"}]], 
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Gamma]", "[", "t", "]"}], "*", "x"}], "+", 
        RowBox[{"\[Delta]", "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"\[Gamma]", "[", "t\[Prime]", "]"}], "*", "x\[Prime]"}], "-", 
        RowBox[{"\[Delta]", "[", "t\[Prime]", "]"}]}], ")"}], "^", "2"}], 
     RowBox[{"2", 
      RowBox[{"\[Nu]", "[", 
       RowBox[{"t", ",", "t\[Prime]"}], "]"}]}]], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6533932447766933`*^9, 3.653393247027547*^9}, {
   3.653393280123363*^9, 3.653393325219985*^9}, {3.653393367680936*^9, 
   3.6533934858550663`*^9}, 3.653393986243043*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], ")"}], 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]}]]}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "t\[Prime]"}], ")"}], 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]}]]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[Sigma]", "2"]}]}]]], "Output",
 CellChangeTimes->{3.653394002504016*^9}]
}, Open  ]],

Cell["Fully general transition distribution.", "Text",
 CellChangeTimes->{{3.6533981526513987`*^9, 3.653398166962819*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"\[Nu]", ",", "\[Gamma]", ",", "\[Delta]"}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", ">", "t", ">", "t\[Prime]", ">", "0"}], ",", 
      RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.653374681478587*^9, 3.65337470064113*^9}, {
  3.653394007126799*^9, 3.653394181624547*^9}, {3.653394356066449*^9, 
  3.653394375336142*^9}, {3.6533981224572573`*^9, 3.65339812548048*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["b", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "t"}]]}]], "Output",
 CellChangeTimes->{{3.653374683543426*^9, 3.6533747009754753`*^9}, 
   3.653390724653707*^9, {3.653394017574572*^9, 3.653394084185821*^9}, {
   3.653394117084787*^9, 3.653394144644598*^9}, 3.653394184860869*^9, {
   3.653394362716416*^9, 3.653394383268301*^9}, 3.653395743547772*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "t"}], ")"}], 
            SuperscriptBox["\[Sigma]", "2"]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "b"}], "+", "x\[Prime]", "+", "\[Mu]", "-", 
             RowBox[{"t\[Prime]", " ", "\[Mu]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", "-", "x\[Prime]"}], ")"}], " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "t\[Prime]"}], ")"}], 
            SuperscriptBox["\[Sigma]", "2"]], " ", 
           RowBox[{"(", 
            RowBox[{"b", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", "\[Mu]"}], "-", 
             RowBox[{"b", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "+", 
             RowBox[{"x", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], ")"}]}]}], 
         ")"}], "2"]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], ")"}], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t\[Prime]"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "t\[Prime]"}], ")"}], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[Sigma]", "2"]}], ")"}], "2"]}]]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "t"}], ")"}], 
    RowBox[{"-", 
     SuperscriptBox["\[Sigma]", "2"]}]]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", 
   SqrtBox[
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}], 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}]], "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t\[Prime]"}], ")"}], 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}]]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]}]]]}]]], "Output",
 CellChangeTimes->{{3.653374683543426*^9, 3.6533747009754753`*^9}, 
   3.653390724653707*^9, {3.653394017574572*^9, 3.653394084185821*^9}, {
   3.653394117084787*^9, 3.653394144644598*^9}, 3.653394184860869*^9, {
   3.653394362716416*^9, 3.653394383268301*^9}, 3.653395759831914*^9}]
}, Open  ]],

Cell["\<\
Transition distribution for standard Brownian bridge ending at b.\
\>", "Text",
 CellChangeTimes->{{3.653398170114903*^9, 3.653398193954818*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[CapitalDelta]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", "[", "t_", "]"}], ":=", 
  RowBox[{"b", "/", 
   RowBox[{"(", 
    RowBox[{"t", "-", "1"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BBTransition", "[", 
   RowBox[{"x_", ",", "t_", ",", "x\[Prime]_", ",", "t\[Prime]_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"\[Nu]", ",", "\[Gamma]", ",", "\[CapitalDelta]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Sigma]", "\[Rule]", "1"}], "}"}]}], "]"}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.65339428355206*^9, 3.653394315828837*^9}, {
  3.653394397125886*^9, 3.653394411970443*^9}, {3.653395715837927*^9, 
  3.653395726252553*^9}, {3.6533957872844667`*^9, 3.6533957927708797`*^9}, {
  3.653395860226244*^9, 3.6533958618675423`*^9}, {3.653396090494676*^9, 
  3.653396091086371*^9}, {3.653398106344483*^9, 3.653398112656063*^9}, {
  3.653398195627513*^9, 3.653398262162463*^9}, {3.653398894535554*^9, 
  3.653398900134995*^9}, {3.6533993375060863`*^9, 3.6533993415933437`*^9}}],

Cell["Density of standard Brownian bridge from a to b.", "Text",
 CellChangeTimes->{{3.653399400612349*^9, 3.65339940791297*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"BBTransition", "[", 
      RowBox[{"x", ",", "t", ",", "x\[Prime]", ",", "0"}], "]"}], "*", 
     RowBox[{"DiracDelta", "[", 
      RowBox[{"x\[Prime]", "-", "a"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x\[Prime]", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.653398266668272*^9, 3.6533982918530483`*^9}, 
   3.6533983525372467`*^9, {3.6533988513994007`*^9, 3.653398943860606*^9}, {
   3.6533993653062267`*^9, 3.653399369794074*^9}, {3.653399412490959*^9, 
   3.653399415834484*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}], ")"}]}], "+", 
        RowBox[{"b", " ", "t"}], "+", "x"}], ")"}], "2"], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", "t"}]]], " ", 
   SqrtBox[
    RowBox[{"-", 
     FractionBox["t", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]"}], "-", 
       RowBox[{"2", " ", "\[Pi]", " ", "t"}]}]]}]]}], "t"]], "Output",
 CellChangeTimes->{{3.653398270058279*^9, 3.65339828030455*^9}, {
   3.653398350452147*^9, 3.653398352908341*^9}, {3.653398859450322*^9, 
   3.653398885379629*^9}, 3.6533989533869247`*^9, {3.653399362557406*^9, 
   3.6533993724527817`*^9}, 3.653399417795733*^9}]
}, Open  ]],

Cell["Density of standard Brownian bridge from Normal() to b.", "Text",
 CellChangeTimes->{{3.653399421800506*^9, 3.653399435512198*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Normal", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"BBTransition", "[", 
       RowBox[{"x", ",", "t", ",", "x\[Prime]", ",", "0"}], "]"}], "*", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x\[Prime]"}], 
       "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x\[Prime]", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6533994437457743`*^9, 3.653399453032179*^9}, {
  3.653399483325522*^9, 3.653399502192563*^9}, {3.653399552747284*^9, 
  3.65339957802605*^9}, {3.6534003259871597`*^9, 3.653400327962921*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"b", " ", "t"}], "+", "x", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
       "2"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], ")"}]}]]}]], " ", 
   SqrtBox[
    RowBox[{"-", 
     FractionBox["t", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]"}], "-", 
       RowBox[{"2", " ", "\[Pi]", " ", "t"}]}]]}]]}], 
  RowBox[{"t", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox["1", "t"], "+", 
     FractionBox["1", 
      SuperscriptBox["\[Sigma]", "2"]]}]], " ", "\[Sigma]"}]]], "Output",
 CellChangeTimes->{{3.6533994682815523`*^9, 3.653399491471117*^9}, 
   3.653399530223795*^9, 3.6533996046390333`*^9, 3.6534003501774387`*^9}]
}, Open  ]],

Cell["\<\
Density of standard Brownian bridge from Normal() to Normal().\
\>", "Text",
 CellChangeTimes->{{3.653400528242796*^9, 3.653400540304945*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Normal", "[", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"BBTransition", "[", 
           RowBox[{"x", ",", "t", ",", "x\[Prime]", ",", "0"}], "]"}], "*", 
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x\[Prime]"}], 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x\[Prime]", ",", 
           RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], 
       "]"}], "]"}], "]"}], "*", 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"M", ",", "S"}], "]"}], ",", "b"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.653400551026479*^9, 3.6534005859682198`*^9}, {
  3.6534006344114933`*^9, 3.6534006404417257`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"M", " ", "t"}], "+", "x", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
         "2"], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"t", "+", 
           SuperscriptBox["\[Sigma]", "2"], "-", 
           RowBox[{"2", " ", "t", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["t", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["S", "2"], "+", 
              SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], ")"}]}]]}]], " ", 
     
     SqrtBox[
      FractionBox["t", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}]]]}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", "S", " ", "t", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox["1", "t"], "+", 
       FractionBox["1", 
        SuperscriptBox["\[Sigma]", "2"]]}]], " ", "\[Sigma]", " ", 
     SqrtBox[
      FractionBox[
       RowBox[{"t", "+", 
        SuperscriptBox["\[Sigma]", "2"], "-", 
        RowBox[{"2", " ", "t", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["t", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["S", "2"], "+", 
           SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], 
       RowBox[{
        SuperscriptBox["S", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"t", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], ")"}]}]]]}]], ",", 
   
   RowBox[{
    RowBox[{"Re", "[", 
     FractionBox[
      RowBox[{"t", "+", 
       SuperscriptBox["\[Sigma]", "2"], "-", 
       RowBox[{"2", " ", "t", " ", 
        SuperscriptBox["\[Sigma]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["t", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["S", "2"], "+", 
          SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], 
      RowBox[{
       SuperscriptBox["S", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], ")"}]}]], "]"}], 
    "\[GreaterEqual]", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{3.653400613441618*^9, 3.653400755953888*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.653399466335853*^9, 3.653399467291731*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Normal", "@", 
    RowBox[{"P", "[", 
     RowBox[{"k", ",", "t"}], "]"}]}], " ", "/.", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", "\[Rule]", "0"}], "}"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6533587524027023`*^9, 3.653358753280344*^9}, {
  3.6533587912092133`*^9, 3.653358857922176*^9}}],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{
  3.653358753598529*^9, 3.653358792750431*^9, {3.653358837376605*^9, 
   3.653358866384397*^9}}]
}, Open  ]],

Cell[TextData[{
 "Compute quadratic variance of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Z", "t"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.653353285793981*^9, 3.6533533088828173`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Nu]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Nu]", "[", "a_", "]"}], " ", "=", 
  RowBox[{
   RowBox[{"\[Sigma]", "^", "2"}], " ", "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Gamma]", "[", "\[Tau]", "]"}], "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "t\[Prime]", ",", "t"}], "}"}], ",", " ", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Sigma]", ">", "0"}], ",", 
        RowBox[{"1", ">", "t", ">", "t\[Prime]", ">", "0"}]}], "}"}]}]}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.653353313282524*^9, 3.653353381898291*^9}, {
  3.653353413989274*^9, 3.653353416637339*^9}, {3.653353630502068*^9, 
  3.6533536328931847`*^9}, {3.653353671254785*^9, 3.653353684974544*^9}, {
  3.653353986400505*^9, 3.653353992991456*^9}, {3.653354027503971*^9, 
  3.653354027934114*^9}, {3.653354117580542*^9, 3.65335417007797*^9}, {
  3.653354219653363*^9, 3.653354239847788*^9}, {3.653357224393683*^9, 
  3.6533572465680532`*^9}, {3.65335738329329*^9, 3.653357402091017*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}], 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}]]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t\[Prime]"}], ")"}], 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]}]]}], ")"}], " ", 
   SuperscriptBox["\[Sigma]", "2"]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[Sigma]", "2"]}]}]]], "Output",
 CellChangeTimes->{{3.65335423648775*^9, 3.653354240120943*^9}, 
   3.653357244887453*^9, {3.653357380017845*^9, 3.6533574039995337`*^9}}]
}, Open  ]],

Cell["\<\
Compute exponential of transformed density for standard Brownian bridge.\
\>", "Text",
 CellChangeTimes->{{3.653353423622363*^9, 3.653353473169361*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]", "[", "t", "]"}], "*", "x"}], "-", 
    RowBox[{
     RowBox[{"\[Gamma]", "[", "t\[Prime]", "]"}], "*", "x\[Prime]"}]}], ")"}],
   "^", "2"}]], "Input",
 CellChangeTimes->{{3.653357711085791*^9, 3.653357722865046*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}], ")"}], 
      RowBox[{"-", 
       SuperscriptBox["\[Sigma]", "2"]}]], " ", "x"}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t\[Prime]"}], ")"}], 
      RowBox[{"-", 
       SuperscriptBox["\[Sigma]", "2"]}]], " ", "x\[Prime]"}]}], ")"}], 
  "2"]], "Output",
 CellChangeTimes->{3.653357681052706*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Nu]", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.6533537842744713`*^9, 3.653353788775118*^9}, {
  3.653354021478628*^9, 3.653354032685893*^9}, {3.6533541129949007`*^9, 
  3.6533541201866302`*^9}, {3.653354217005422*^9, 3.65335422405272*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "t"}], ")"}], 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]}]], " ", 
   SuperscriptBox["\[Sigma]", "2"]}], 
  RowBox[{"1", "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[Sigma]", "2"]}]}]]], "Output",
 CellChangeTimes->{
  3.6533537894674177`*^9, {3.653353997261011*^9, 3.653354033025258*^9}, 
   3.653354120576075*^9, {3.653354151735162*^9, 3.653354175118843*^9}, {
   3.653354213628243*^9, 3.6533542418514757`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"\[Gamma]", "[", "t", "]"}], 
    RowBox[{"Sqrt", "[", 
     RowBox[{"2", "*", "\[Pi]", "*", 
      RowBox[{"\[Nu]", "[", "t", "]"}]}], "]"}]], 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Gamma]", "[", "t", "]"}], "*", "x"}], "-", 
         RowBox[{
          RowBox[{"\[Gamma]", "[", "t\[Prime]", "]"}], "*", "x\[Prime]"}]}], 
        ")"}], "^", "2"}], 
      RowBox[{"2", "*", 
       RowBox[{"\[Nu]", "[", 
        RowBox[{"t", "-", "t\[Prime]"}], "]"}]}]]}], "]"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{"\[Sigma]", "\[Rule]", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6533534786122437`*^9, 3.6533534859127903`*^9}, {
   3.653353557362644*^9, 3.653353614559414*^9}, {3.65335368757413*^9, 
   3.6533537369771757`*^9}, {3.653353800149148*^9, 3.65335380430125*^9}, 
   3.6533538560893087`*^9, {3.6533541268443317`*^9, 3.6533541270824537`*^9}, {
   3.6533541958715363`*^9, 3.6533542294028797`*^9}, {3.653354396242824*^9, 
   3.6533544500411043`*^9}, {3.653357777177148*^9, 3.653357780184492*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox["x", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}]], "-", 
        FractionBox["x\[Prime]", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t\[Prime]"}]]}], ")"}], "2"], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}]]}], "+", 
        FractionBox["1", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t\[Prime]"}]]}], ")"}]}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}]]}], "+", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t\[Prime]"}]]}]]}]]], "Output",
 CellChangeTimes->{
  3.653353693894129*^9, 3.653353805137121*^9, 3.6533538575249434`*^9, {
   3.6533541284997272`*^9, 3.6533542496204557`*^9}, 3.653354453423967*^9, 
   3.653357781974597*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.653353442979245*^9, 3.6533534506008*^9}, 
   3.653353691421853*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6533535109836397`*^9, 3.6533535113465652`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"\[Delta]", "[", "t", "]"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.653353512750642*^9, 3.653353548077251*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "t"}], ")"}], 
    RowBox[{"-", 
     SuperscriptBox["\[Sigma]", "2"]}]], " ", 
   RowBox[{"(", 
    RowBox[{"b", "-", 
     RowBox[{"b", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["\[Sigma]", "2"]}]]], "Output",
 CellChangeTimes->{{3.653353518226993*^9, 3.6533535485499487`*^9}}]
}, Open  ]],

Cell["", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Nu]", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.653353120837062*^9, 3.653353148284348*^9}, {
  3.653353200924131*^9, 3.6533532039172277`*^9}, {3.653353356522805*^9, 
  3.653353358401441*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}], 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}]]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t\[Prime]"}], ")"}], 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]}]]}], ")"}], " ", 
   SuperscriptBox["\[Sigma]", "2"]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[Sigma]", "2"]}]}]]], "Output",
 CellChangeTimes->{{3.653349325556911*^9, 3.65334937595767*^9}, 
   3.653349431700824*^9, {3.653352690425115*^9, 3.6533527322411623`*^9}, 
   3.653352816202321*^9, 3.653352879531309*^9, {3.653352961518796*^9, 
   3.6533529914148617`*^9}, {3.653353022986266*^9, 3.653353041882103*^9}, 
   3.653353073186833*^9, 3.653353144472046*^9, {3.653353204237336*^9, 
   3.6533532494925547`*^9}, {3.653353369410404*^9, 3.6533533855912724`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.653352976795628*^9, 3.6533529811733227`*^9}, {
  3.653353080369659*^9, 3.6533530815535316`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], ")"}], 
     RowBox[{"-", 
      SuperscriptBox["\[Sigma]", "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{"b", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", "\[Mu]"}], "-", 
      RowBox[{"b", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
    RowBox[{"C", "[", "1", "]"}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[Sigma]", "2"]}]], "+", 
  RowBox[{"C", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{
  3.6533529814697247`*^9, {3.653353077537846*^9, 3.653353081971405*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Gamma]", "[", "t_", "]"}], ":=", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", "t", "]"}], ",", "t"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Delta]", "[", "t_", "]"}], ":=", 
    RowBox[{"-", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Gamma]", "[", "t", "]"}], "*", 
        RowBox[{"\[Beta]", "[", "t", "]"}]}], ",", "t"}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Nu]", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{"\[Sigma]", "^", "2"}], "*", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Gamma]", "[", "\[Tau]", "]"}], "^", "2"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "t\[Prime]", ",", "t"}], "}"}], ",", " ", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", ">", "0"}], ",", 
          RowBox[{"1", ">", "t", ">", "t\[Prime]", ">", "0"}]}], "}"}]}]}], 
      "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Gamma]", "[", "t", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", "t"}], ")"}]}], ",", "t"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"\[Delta]", "[", "t", "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"\[Gamma]", "[", "t", "]"}], " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Mu]", "\[Rule]", "0"}], ",", 
       RowBox[{"\[Sigma]", "\[Rule]", "1"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"\[Nu]", "[", "t", "]"}], " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Mu]", "\[Rule]", "0"}], ",", 
       RowBox[{"\[Sigma]", "\[Rule]", "1"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Delta]\[Prime]", "[", "t_", "]"}], " ", ":=", 
    RowBox[{"b", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Gamma]", "[", "t", "]"}], "*", "x"}], "+", 
         RowBox[{"\[Delta]\[Prime]", "[", "t", "]"}], " ", "-", " ", 
         "x\[Prime]"}], ")"}], "^", "2"}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"\[Nu]", "[", "t", "]"}]}], ")"}]}], "]"}], " ", "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]", "\[Rule]", "0"}], ",", 
      RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
      RowBox[{"t\[Prime]", "\[Rule]", "0"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6533215934448013`*^9, 3.653321644031657*^9}, {
   3.653347523014904*^9, 3.653347552557743*^9}, {3.653347663370768*^9, 
   3.653347674286767*^9}, {3.653347772738982*^9, 3.653347808649935*^9}, {
   3.653347841773559*^9, 3.653347939090672*^9}, {3.653348066190186*^9, 
   3.653348135401967*^9}, {3.653348423285759*^9, 3.6533484297582083`*^9}, {
   3.653348499664694*^9, 3.653348501888636*^9}, {3.653348609570593*^9, 
   3.653348617706501*^9}, {3.653348663254558*^9, 3.653348697532942*^9}, {
   3.6533487794100447`*^9, 3.653348786617237*^9}, {3.653348929529904*^9, 
   3.653348932353196*^9}, 3.653348973690549*^9, 3.653349147145628*^9, {
   3.6533496063066263`*^9, 3.65334965911718*^9}, {3.65334980948072*^9, 
   3.6533498225919657`*^9}, {3.653350804537291*^9, 3.6533508072963123`*^9}, {
   3.653351224572308*^9, 3.65335125235293*^9}, {3.653351860982777*^9, 
   3.653351936128746*^9}, {3.6533520177653437`*^9, 3.65335202494853*^9}, {
   3.6533520846447067`*^9, 3.6533521137534933`*^9}, {3.653352317877932*^9, 
   3.6533523372231627`*^9}, {3.6533524638672*^9, 3.6533524653383207`*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], ")"}], 
   RowBox[{"-", 
    SuperscriptBox["\[Sigma]", "2"]}]], 
  SuperscriptBox["\[Sigma]", "2"]]], "Output",
 CellChangeTimes->{{3.653347804656358*^9, 3.653347808981893*^9}, {
   3.65334787484839*^9, 3.6533479107098427`*^9}, 3.653347940747568*^9, {
   3.653348066715913*^9, 3.6533481308125362`*^9}, 3.6533484308612003`*^9, 
   3.653348502938712*^9, 3.6533486183450537`*^9, {3.6533486702378597`*^9, 
   3.6533486978937397`*^9}, 3.653348787003603*^9, 3.653348932709857*^9, {
   3.653349608342732*^9, 3.653349659681161*^9}, {3.653349810409333*^9, 
   3.653349822981042*^9}, 3.6533508087727203`*^9, {3.653351231418487*^9, 
   3.653351253259137*^9}, {3.653351904510779*^9, 3.6533519207586927`*^9}, 
   3.6533520405931*^9, {3.653352091557406*^9, 3.653352114268281*^9}, 
   3.653352466515163*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], ")"}], 
   RowBox[{"-", 
    SuperscriptBox["\[Sigma]", "2"]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "b"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", "\[Mu]"}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.653347804656358*^9, 3.653347808981893*^9}, {
   3.65334787484839*^9, 3.6533479107098427`*^9}, 3.653347940747568*^9, {
   3.653348066715913*^9, 3.6533481308125362`*^9}, 3.6533484308612003`*^9, 
   3.653348502938712*^9, 3.6533486183450537`*^9, {3.6533486702378597`*^9, 
   3.6533486978937397`*^9}, 3.653348787003603*^9, 3.653348932709857*^9, {
   3.653349608342732*^9, 3.653349659681161*^9}, {3.653349810409333*^9, 
   3.653349822981042*^9}, 3.6533508087727203`*^9, {3.653351231418487*^9, 
   3.653351253259137*^9}, {3.653351904510779*^9, 3.6533519207586927`*^9}, 
   3.6533520405931*^9, {3.653352091557406*^9, 3.653352114268281*^9}, 
   3.6533524665229397`*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", "1"}], "+", "t"}]]], "Output",
 CellChangeTimes->{{3.653347804656358*^9, 3.653347808981893*^9}, {
   3.65334787484839*^9, 3.6533479107098427`*^9}, 3.653347940747568*^9, {
   3.653348066715913*^9, 3.6533481308125362`*^9}, 3.6533484308612003`*^9, 
   3.653348502938712*^9, 3.6533486183450537`*^9, {3.6533486702378597`*^9, 
   3.6533486978937397`*^9}, 3.653348787003603*^9, 3.653348932709857*^9, {
   3.653349608342732*^9, 3.653349659681161*^9}, {3.653349810409333*^9, 
   3.653349822981042*^9}, 3.6533508087727203`*^9, {3.653351231418487*^9, 
   3.653351253259137*^9}, {3.653351904510779*^9, 3.6533519207586927`*^9}, 
   3.6533520405931*^9, {3.653352091557406*^9, 3.653352114268281*^9}, 
   3.653352466528853*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"1", "-", "t"}]], "+", 
  FractionBox["1", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "t\[Prime]"}]]}]], "Output",
 CellChangeTimes->{{3.653347804656358*^9, 3.653347808981893*^9}, {
   3.65334787484839*^9, 3.6533479107098427`*^9}, 3.653347940747568*^9, {
   3.653348066715913*^9, 3.6533481308125362`*^9}, 3.6533484308612003`*^9, 
   3.653348502938712*^9, 3.6533486183450537`*^9, {3.6533486702378597`*^9, 
   3.6533486978937397`*^9}, 3.653348787003603*^9, 3.653348932709857*^9, {
   3.653349608342732*^9, 3.653349659681161*^9}, {3.653349810409333*^9, 
   3.653349822981042*^9}, 3.6533508087727203`*^9, {3.653351231418487*^9, 
   3.653351253259137*^9}, {3.653351904510779*^9, 3.6533519207586927`*^9}, 
   3.6533520405931*^9, {3.653352091557406*^9, 3.653352114268281*^9}, 
   3.65335246697604*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["b", 
      RowBox[{"1", "-", "t"}]], "+", 
     FractionBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}]], "-", "x\[Prime]"}], ")"}], "2"], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}]]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.653347804656358*^9, 3.653347808981893*^9}, {
   3.65334787484839*^9, 3.6533479107098427`*^9}, 3.653347940747568*^9, {
   3.653348066715913*^9, 3.6533481308125362`*^9}, 3.6533484308612003`*^9, 
   3.653348502938712*^9, 3.6533486183450537`*^9, {3.6533486702378597`*^9, 
   3.6533486978937397`*^9}, 3.653348787003603*^9, 3.653348932709857*^9, {
   3.653349608342732*^9, 3.653349659681161*^9}, {3.653349810409333*^9, 
   3.653349822981042*^9}, 3.6533508087727203`*^9, {3.653351231418487*^9, 
   3.653351253259137*^9}, {3.653351904510779*^9, 3.6533519207586927`*^9}, 
   3.6533520405931*^9, {3.653352091557406*^9, 3.653352114268281*^9}, 
   3.653352467620307*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"\[Alpha]", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "1", ",", "t"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6533476244187107`*^9, 3.653347657730669*^9}, {
  3.653352600949671*^9, 3.6533526650203047`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(1\\/\\(\\(\\(-1\\)\\) + \
Integrate`ImproperDump`newx$44797\\)\\)\[NoBreak] does not converge on \
\[NoBreak]\\!\\({1, t}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", \
ButtonNote -> \\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.653352619608754*^9, 3.65335266538724*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "1", "t"], 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[Sigma]", "2"], 
     RowBox[{"1", "-", "t"}]]}], 
   RowBox[{"\[DifferentialD]", "t"}]}]}]], "Output",
 CellChangeTimes->{
  3.653347658104191*^9, {3.653352606451167*^9, 3.653352665400725*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.653349943877396*^9, 3.6533499836602917`*^9}, {
   3.6533502048633738`*^9, 3.6533502331759863`*^9}, 3.653393192714652*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deriving New KFE for Bridge Distributions", "Subsection",
 CellChangeTimes->{
  3.6533931951515408`*^9, {3.654659462985219*^9, 3.654659479199168*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{
          RowBox[{"m", "[", "t", "]"}], ",", 
          RowBox[{"s", "[", "t", "]"}]}], "]"}], ",", "z"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"x", "-", "\[Epsilon]"}], ",", 
        RowBox[{"x", "+", "\[Epsilon]"}]}], "}"}]}], "]"}], " ", "/", 
    "\[IndentingNewLine]", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{
          RowBox[{"m\[Prime]", "[", "t", "]"}], ",", 
          RowBox[{"s\[Prime]", "[", "t", "]"}]}], "]"}], ",", "z"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"x", "-", "\[Epsilon]"}], ",", 
        RowBox[{"x", "+", "\[Epsilon]"}]}], "}"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", 
            RowBox[{"m", "[", "t", "]"}]}], ")"}], "2"], 
         SuperscriptBox[
          RowBox[{"s", "[", "t", "]"}], "2"]]}], "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"m\[Prime]", "[", "t", "]"}]}], ")"}], "2"], 
        SuperscriptBox[
         RowBox[{"s\[Prime]", "[", "t", "]"}], "2"]]}], ")"}]}]], " ", 
   RowBox[{"s\[Prime]", "[", "t", "]"}]}], 
  RowBox[{"s", "[", "t", "]"}]]], "Output",
 CellChangeTimes->{3.65465948101085*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{838, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 160, 2, 65, "Chapter"],
Cell[CellGroupData[{
Cell[765, 28, 258, 4, 45, "Subsubsection"],
Cell[CellGroupData[{
Cell[1048, 36, 1867, 50, 63, "Input"],
Cell[2918, 88, 346, 9, 47, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3313, 103, 209, 3, 45, "Subsubsection"],
Cell[3525, 108, 255, 5, 39, "Input"],
Cell[3783, 115, 328, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[4136, 123, 3262, 74, 231, "Input"],
Cell[7401, 199, 531, 11, 41, "Message"],
Cell[7935, 212, 2036, 61, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10008, 278, 900, 23, 46, "Input"],
Cell[10911, 303, 533, 11, 41, "Message"],
Cell[11447, 316, 201, 3, 28, "Output"]
}, Open  ]],
Cell[11663, 322, 85, 1, 28, "Input"],
Cell[11751, 325, 153, 3, 30, "Text"],
Cell[11907, 330, 2492, 64, 165, "Input"],
Cell[CellGroupData[{
Cell[14424, 398, 1143, 28, 63, "Input"],
Cell[15570, 428, 633, 18, 32, "Output"],
Cell[16206, 448, 720, 23, 67, "Output"]
}, Open  ]],
Cell[16941, 474, 592, 19, 33, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17570, 498, 159, 2, 36, "Subsubsection"],
Cell[17732, 502, 323, 9, 31, "Text"],
Cell[18058, 513, 110, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[18193, 518, 1097, 30, 46, "Input"],
Cell[19293, 550, 610, 16, 35, "Output"],
Cell[19906, 568, 501, 12, 35, "Output"]
}, Open  ]],
Cell[20422, 583, 97, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[20544, 588, 1141, 33, 46, "Input"],
Cell[21688, 623, 848, 27, 49, "Output"]
}, Open  ]],
Cell[22551, 653, 140, 1, 30, "Text"],
Cell[22694, 656, 953, 29, 28, "Input"],
Cell[23650, 687, 894, 23, 28, "Input"],
Cell[24547, 712, 155, 3, 30, "Text"],
Cell[24705, 717, 1306, 31, 63, "Input"],
Cell[26014, 750, 104, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[26143, 755, 239, 5, 28, "Input"],
Cell[26385, 762, 6364, 188, 425, "Output"]
}, Open  ]],
Cell[32764, 953, 166, 3, 40, "Input"],
Cell[32933, 958, 139, 1, 30, "Text"],
Cell[33075, 961, 1179, 25, 63, "Input"],
Cell[CellGroupData[{
Cell[34279, 990, 1020, 24, 46, "Input"],
Cell[35302, 1016, 2569, 79, 122, "Output"]
}, Open  ]],
Cell[37886, 1098, 177, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[38088, 1106, 875, 21, 63, "Input"],
Cell[38966, 1129, 3728, 103, 150, "Output"]
}, Open  ]],
Cell[42709, 1235, 173, 4, 40, "Input"],
Cell[CellGroupData[{
Cell[42907, 1243, 607, 14, 28, "Input"],
Cell[43517, 1259, 133723, 2185, 254, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177277, 3449, 479, 12, 28, "Input"],
Cell[177759, 3463, 145371, 2385, 205, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323167, 5853, 386, 12, 48, "Input"],
Cell[323556, 5867, 562, 17, 57, "Output"]
}, Open  ]],
Cell[324133, 5887, 151, 3, 49, "Input"],
Cell[324287, 5892, 220, 4, 49, "Text"],
Cell[324510, 5898, 640, 18, 121, "Input"],
Cell[325153, 5918, 224, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[325402, 5926, 2530, 65, 165, "Input"],
Cell[327935, 5993, 1173, 36, 57, "Output"]
}, Open  ]],
Cell[329123, 6032, 108, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[329256, 6037, 1541, 42, 122, "Input"],
Cell[330800, 6081, 1140, 37, 57, "Output"]
}, Open  ]],
Cell[331955, 6121, 185, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[332165, 6129, 1590, 42, 87, "Input"],
Cell[333758, 6173, 614, 22, 55, "Output"]
}, Open  ]],
Cell[334387, 6198, 122, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[334534, 6203, 560, 12, 28, "Input"],
Cell[335097, 6217, 394, 8, 47, "Output"],
Cell[335494, 6227, 3660, 110, 121, "Output"]
}, Open  ]],
Cell[339169, 6340, 155, 3, 30, "Text"],
Cell[339327, 6345, 1159, 24, 63, "Input"],
Cell[340489, 6371, 129, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[340643, 6376, 670, 16, 28, "Input"],
Cell[341316, 6394, 907, 26, 75, "Output"]
}, Open  ]],
Cell[342238, 6423, 137, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[342400, 6428, 775, 19, 63, "Input"],
Cell[343178, 6449, 1306, 42, 111, "Output"]
}, Open  ]],
Cell[344499, 6494, 152, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[344676, 6501, 1136, 31, 97, "Input"],
Cell[345815, 6534, 3232, 101, 182, "Output"]
}, Open  ]],
Cell[349062, 6638, 92, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[349179, 6643, 360, 10, 46, "Input"],
Cell[349542, 6655, 157, 3, 28, "Output"]
}, Open  ]],
Cell[349714, 6661, 241, 8, 32, "Text"],
Cell[CellGroupData[{
Cell[349980, 6673, 1129, 24, 46, "Input"],
Cell[351112, 6699, 822, 26, 61, "Output"]
}, Open  ]],
Cell[351949, 6728, 162, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[352136, 6735, 307, 9, 28, "Input"],
Cell[352446, 6746, 537, 19, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353020, 6770, 273, 4, 28, "Input"],
Cell[353296, 6776, 584, 17, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353917, 6798, 1173, 29, 51, "Input"],
Cell[355093, 6829, 1230, 42, 105, "Output"]
}, Open  ]],
Cell[356338, 6874, 116, 2, 28, "Input"],
Cell[356457, 6878, 96, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[356578, 6883, 248, 6, 28, "Input"],
Cell[356829, 6891, 475, 16, 57, "Output"]
}, Open  ]],
Cell[357319, 6910, 16, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[357360, 6914, 224, 4, 28, "Input"],
Cell[357587, 6920, 1116, 30, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358740, 6955, 180, 3, 28, "Input"],
Cell[358923, 6960, 728, 24, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359688, 6989, 3985, 98, 182, "Input"],
Cell[363676, 7089, 906, 18, 55, "Output"],
Cell[364585, 7109, 1161, 28, 49, "Output"],
Cell[365749, 7139, 771, 13, 47, "Output"],
Cell[366523, 7154, 848, 16, 47, "Output"],
Cell[367374, 7172, 1112, 26, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368523, 7203, 299, 7, 28, "Input"],
Cell[368825, 7212, 572, 11, 43, "Message"],
Cell[369400, 7225, 332, 10, 51, "Output"]
}, Open  ]],
Cell[369747, 7238, 170, 2, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369954, 7245, 156, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[370135, 7251, 1116, 32, 97, "Input"],
Cell[371254, 7285, 802, 25, 104, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
